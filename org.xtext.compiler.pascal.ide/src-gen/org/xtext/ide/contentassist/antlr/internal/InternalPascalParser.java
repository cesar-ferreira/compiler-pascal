package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.PascalGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalPascalParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_SIGNED_INTEGER_NUMBER", "RULE_INTEGER_NUMBER", "RULE_RELATIONAL_OPERATOR", "RULE_ADDITION_OPERATOR", "RULE_MULTIPLICATION_OPERATOR", "RULE_STRING", "RULE_REAL_NUMBER", "RULE_SIGNED_REAL_NUMBER", "RULE_NUMERIC_SUBRANGE", "RULE_UNSIGNED_DIGIT_SEQUENCE", "RULE_DIGIT_SEQUENCE", "RULE_DIGIT", "RULE_ML_COMMENT", "RULE_INT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'to'", "'downto'", "'.'", "'program'", "';'", "'('", "')'", "','", "'begin'", "'end'", "':'", "':='", "'['", "']'", "'^'", "'not'", "'while'", "'do'", "'repeat'", "'until'", "'for'", "'if'", "'then'", "'else'", "'case'", "'of'", "'with'", "'goto'", "'label'", "'const'", "'='", "'type'", "'..'", "'array'", "'set'", "'file'", "'var'", "'procedure'", "'packed'", "'function'", "'in'", "'or'", "'div'", "'mod'", "'and'", "'nil'", "'true'", "'false'", "'record'", "'forward'"
    };
    public static final int T__50=50;
    public static final int RULE_UNSIGNED_DIGIT_SEQUENCE=14;
    public static final int RULE_REAL_NUMBER=11;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int RULE_NUMERIC_SUBRANGE=13;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_DIGIT=16;
    public static final int RULE_SIGNED_REAL_NUMBER=12;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=18;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=17;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int RULE_INTEGER_NUMBER=6;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int RULE_RELATIONAL_OPERATOR=7;
    public static final int RULE_STRING=10;
    public static final int RULE_SL_COMMENT=19;
    public static final int RULE_DIGIT_SEQUENCE=15;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=20;
    public static final int RULE_MULTIPLICATION_OPERATOR=9;
    public static final int RULE_ANY_OTHER=21;
    public static final int RULE_SIGNED_INTEGER_NUMBER=5;
    public static final int T__48=48;
    public static final int RULE_ADDITION_OPERATOR=8;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalPascalParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalPascalParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalPascalParser.tokenNames; }
    public String getGrammarFileName() { return "InternalPascal.g"; }


    	private PascalGrammarAccess grammarAccess;

    	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRulepascal"
    // InternalPascal.g:54:1: entryRulepascal : rulepascal EOF ;
    public final void entryRulepascal() throws RecognitionException {
        try {
            // InternalPascal.g:55:1: ( rulepascal EOF )
            // InternalPascal.g:56:1: rulepascal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPascalRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepascal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPascalRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepascal"


    // $ANTLR start "rulepascal"
    // InternalPascal.g:63:1: rulepascal : ( ( rule__Pascal__ProgramAssignment ) ) ;
    public final void rulepascal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:67:2: ( ( ( rule__Pascal__ProgramAssignment ) ) )
            // InternalPascal.g:68:2: ( ( rule__Pascal__ProgramAssignment ) )
            {
            // InternalPascal.g:68:2: ( ( rule__Pascal__ProgramAssignment ) )
            // InternalPascal.g:69:3: ( rule__Pascal__ProgramAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPascalAccess().getProgramAssignment()); 
            }
            // InternalPascal.g:70:3: ( rule__Pascal__ProgramAssignment )
            // InternalPascal.g:70:4: rule__Pascal__ProgramAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Pascal__ProgramAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPascalAccess().getProgramAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepascal"


    // $ANTLR start "entryRuleprogram"
    // InternalPascal.g:79:1: entryRuleprogram : ruleprogram EOF ;
    public final void entryRuleprogram() throws RecognitionException {
        try {
            // InternalPascal.g:80:1: ( ruleprogram EOF )
            // InternalPascal.g:81:1: ruleprogram EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprogram();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprogram"


    // $ANTLR start "ruleprogram"
    // InternalPascal.g:88:1: ruleprogram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleprogram() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:92:2: ( ( ( rule__Program__Group__0 ) ) )
            // InternalPascal.g:93:2: ( ( rule__Program__Group__0 ) )
            {
            // InternalPascal.g:93:2: ( ( rule__Program__Group__0 ) )
            // InternalPascal.g:94:3: ( rule__Program__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getGroup()); 
            }
            // InternalPascal.g:95:3: ( rule__Program__Group__0 )
            // InternalPascal.g:95:4: rule__Program__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprogram"


    // $ANTLR start "entryRuleprogram_heading_block"
    // InternalPascal.g:104:1: entryRuleprogram_heading_block : ruleprogram_heading_block EOF ;
    public final void entryRuleprogram_heading_block() throws RecognitionException {
        try {
            // InternalPascal.g:105:1: ( ruleprogram_heading_block EOF )
            // InternalPascal.g:106:1: ruleprogram_heading_block EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprogram_heading_block();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprogram_heading_block"


    // $ANTLR start "ruleprogram_heading_block"
    // InternalPascal.g:113:1: ruleprogram_heading_block : ( ( rule__Program_heading_block__Group__0 ) ) ;
    public final void ruleprogram_heading_block() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:117:2: ( ( ( rule__Program_heading_block__Group__0 ) ) )
            // InternalPascal.g:118:2: ( ( rule__Program_heading_block__Group__0 ) )
            {
            // InternalPascal.g:118:2: ( ( rule__Program_heading_block__Group__0 ) )
            // InternalPascal.g:119:3: ( rule__Program_heading_block__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getGroup()); 
            }
            // InternalPascal.g:120:3: ( rule__Program_heading_block__Group__0 )
            // InternalPascal.g:120:4: rule__Program_heading_block__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprogram_heading_block"


    // $ANTLR start "entryRuleidentifier_list"
    // InternalPascal.g:129:1: entryRuleidentifier_list : ruleidentifier_list EOF ;
    public final void entryRuleidentifier_list() throws RecognitionException {
        try {
            // InternalPascal.g:130:1: ( ruleidentifier_list EOF )
            // InternalPascal.g:131:1: ruleidentifier_list EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleidentifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleidentifier_list"


    // $ANTLR start "ruleidentifier_list"
    // InternalPascal.g:138:1: ruleidentifier_list : ( ( rule__Identifier_list__Group__0 ) ) ;
    public final void ruleidentifier_list() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:142:2: ( ( ( rule__Identifier_list__Group__0 ) ) )
            // InternalPascal.g:143:2: ( ( rule__Identifier_list__Group__0 ) )
            {
            // InternalPascal.g:143:2: ( ( rule__Identifier_list__Group__0 ) )
            // InternalPascal.g:144:3: ( rule__Identifier_list__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getGroup()); 
            }
            // InternalPascal.g:145:3: ( rule__Identifier_list__Group__0 )
            // InternalPascal.g:145:4: rule__Identifier_list__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Identifier_list__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleidentifier_list"


    // $ANTLR start "entryRuleblock"
    // InternalPascal.g:154:1: entryRuleblock : ruleblock EOF ;
    public final void entryRuleblock() throws RecognitionException {
        try {
            // InternalPascal.g:155:1: ( ruleblock EOF )
            // InternalPascal.g:156:1: ruleblock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleblock"


    // $ANTLR start "ruleblock"
    // InternalPascal.g:163:1: ruleblock : ( ( rule__Block__Group__0 ) ) ;
    public final void ruleblock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:167:2: ( ( ( rule__Block__Group__0 ) ) )
            // InternalPascal.g:168:2: ( ( rule__Block__Group__0 ) )
            {
            // InternalPascal.g:168:2: ( ( rule__Block__Group__0 ) )
            // InternalPascal.g:169:3: ( rule__Block__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getGroup()); 
            }
            // InternalPascal.g:170:3: ( rule__Block__Group__0 )
            // InternalPascal.g:170:4: rule__Block__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Block__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleblock"


    // $ANTLR start "entryRulestatement_part"
    // InternalPascal.g:179:1: entryRulestatement_part : rulestatement_part EOF ;
    public final void entryRulestatement_part() throws RecognitionException {
        try {
            // InternalPascal.g:180:1: ( rulestatement_part EOF )
            // InternalPascal.g:181:1: rulestatement_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_partRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestatement_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestatement_part"


    // $ANTLR start "rulestatement_part"
    // InternalPascal.g:188:1: rulestatement_part : ( ( rule__Statement_part__Group__0 ) ) ;
    public final void rulestatement_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:192:2: ( ( ( rule__Statement_part__Group__0 ) ) )
            // InternalPascal.g:193:2: ( ( rule__Statement_part__Group__0 ) )
            {
            // InternalPascal.g:193:2: ( ( rule__Statement_part__Group__0 ) )
            // InternalPascal.g:194:3: ( rule__Statement_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_partAccess().getGroup()); 
            }
            // InternalPascal.g:195:3: ( rule__Statement_part__Group__0 )
            // InternalPascal.g:195:4: rule__Statement_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Statement_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestatement_part"


    // $ANTLR start "entryRulestatement_sequence"
    // InternalPascal.g:204:1: entryRulestatement_sequence : rulestatement_sequence EOF ;
    public final void entryRulestatement_sequence() throws RecognitionException {
        try {
            // InternalPascal.g:205:1: ( rulestatement_sequence EOF )
            // InternalPascal.g:206:1: rulestatement_sequence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestatement_sequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestatement_sequence"


    // $ANTLR start "rulestatement_sequence"
    // InternalPascal.g:213:1: rulestatement_sequence : ( ( rule__Statement_sequence__Group__0 ) ) ;
    public final void rulestatement_sequence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:217:2: ( ( ( rule__Statement_sequence__Group__0 ) ) )
            // InternalPascal.g:218:2: ( ( rule__Statement_sequence__Group__0 ) )
            {
            // InternalPascal.g:218:2: ( ( rule__Statement_sequence__Group__0 ) )
            // InternalPascal.g:219:3: ( rule__Statement_sequence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getGroup()); 
            }
            // InternalPascal.g:220:3: ( rule__Statement_sequence__Group__0 )
            // InternalPascal.g:220:4: rule__Statement_sequence__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestatement_sequence"


    // $ANTLR start "entryRulestatement"
    // InternalPascal.g:229:1: entryRulestatement : rulestatement EOF ;
    public final void entryRulestatement() throws RecognitionException {
        try {
            // InternalPascal.g:230:1: ( rulestatement EOF )
            // InternalPascal.g:231:1: rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalPascal.g:238:1: rulestatement : ( ( rule__Statement__Group__0 ) ) ;
    public final void rulestatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:242:2: ( ( ( rule__Statement__Group__0 ) ) )
            // InternalPascal.g:243:2: ( ( rule__Statement__Group__0 ) )
            {
            // InternalPascal.g:243:2: ( ( rule__Statement__Group__0 ) )
            // InternalPascal.g:244:3: ( rule__Statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getGroup()); 
            }
            // InternalPascal.g:245:3: ( rule__Statement__Group__0 )
            // InternalPascal.g:245:4: rule__Statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulelabel"
    // InternalPascal.g:254:1: entryRulelabel : rulelabel EOF ;
    public final void entryRulelabel() throws RecognitionException {
        try {
            // InternalPascal.g:255:1: ( rulelabel EOF )
            // InternalPascal.g:256:1: rulelabel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            rulelabel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulelabel"


    // $ANTLR start "rulelabel"
    // InternalPascal.g:263:1: rulelabel : ( ( rule__Label__Alternatives ) ) ;
    public final void rulelabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:267:2: ( ( ( rule__Label__Alternatives ) ) )
            // InternalPascal.g:268:2: ( ( rule__Label__Alternatives ) )
            {
            // InternalPascal.g:268:2: ( ( rule__Label__Alternatives ) )
            // InternalPascal.g:269:3: ( rule__Label__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabelAccess().getAlternatives()); 
            }
            // InternalPascal.g:270:3: ( rule__Label__Alternatives )
            // InternalPascal.g:270:4: rule__Label__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Label__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabelAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulelabel"


    // $ANTLR start "entryRulesimple_statement"
    // InternalPascal.g:279:1: entryRulesimple_statement : rulesimple_statement EOF ;
    public final void entryRulesimple_statement() throws RecognitionException {
        try {
            // InternalPascal.g:280:1: ( rulesimple_statement EOF )
            // InternalPascal.g:281:1: rulesimple_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesimple_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesimple_statement"


    // $ANTLR start "rulesimple_statement"
    // InternalPascal.g:288:1: rulesimple_statement : ( ( rule__Simple_statement__Alternatives )? ) ;
    public final void rulesimple_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:292:2: ( ( ( rule__Simple_statement__Alternatives )? ) )
            // InternalPascal.g:293:2: ( ( rule__Simple_statement__Alternatives )? )
            {
            // InternalPascal.g:293:2: ( ( rule__Simple_statement__Alternatives )? )
            // InternalPascal.g:294:3: ( rule__Simple_statement__Alternatives )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_statementAccess().getAlternatives()); 
            }
            // InternalPascal.g:295:3: ( rule__Simple_statement__Alternatives )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==RULE_ID||LA1_0==49) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalPascal.g:295:4: rule__Simple_statement__Alternatives
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_statement__Alternatives();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_statementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesimple_statement"


    // $ANTLR start "entryRuleassignment_statement"
    // InternalPascal.g:304:1: entryRuleassignment_statement : ruleassignment_statement EOF ;
    public final void entryRuleassignment_statement() throws RecognitionException {
        try {
            // InternalPascal.g:305:1: ( ruleassignment_statement EOF )
            // InternalPascal.g:306:1: ruleassignment_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleassignment_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleassignment_statement"


    // $ANTLR start "ruleassignment_statement"
    // InternalPascal.g:313:1: ruleassignment_statement : ( ( rule__Assignment_statement__Group__0 ) ) ;
    public final void ruleassignment_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:317:2: ( ( ( rule__Assignment_statement__Group__0 ) ) )
            // InternalPascal.g:318:2: ( ( rule__Assignment_statement__Group__0 ) )
            {
            // InternalPascal.g:318:2: ( ( rule__Assignment_statement__Group__0 ) )
            // InternalPascal.g:319:3: ( rule__Assignment_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementAccess().getGroup()); 
            }
            // InternalPascal.g:320:3: ( rule__Assignment_statement__Group__0 )
            // InternalPascal.g:320:4: rule__Assignment_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Assignment_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleassignment_statement"


    // $ANTLR start "entryRulevariable"
    // InternalPascal.g:329:1: entryRulevariable : rulevariable EOF ;
    public final void entryRulevariable() throws RecognitionException {
        try {
            // InternalPascal.g:330:1: ( rulevariable EOF )
            // InternalPascal.g:331:1: rulevariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariable"


    // $ANTLR start "rulevariable"
    // InternalPascal.g:338:1: rulevariable : ( ( rule__Variable__Group__0 ) ) ;
    public final void rulevariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:342:2: ( ( ( rule__Variable__Group__0 ) ) )
            // InternalPascal.g:343:2: ( ( rule__Variable__Group__0 ) )
            {
            // InternalPascal.g:343:2: ( ( rule__Variable__Group__0 ) )
            // InternalPascal.g:344:3: ( rule__Variable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getGroup()); 
            }
            // InternalPascal.g:345:3: ( rule__Variable__Group__0 )
            // InternalPascal.g:345:4: rule__Variable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariable"


    // $ANTLR start "entryRulevar_"
    // InternalPascal.g:354:1: entryRulevar_ : rulevar_ EOF ;
    public final void entryRulevar_() throws RecognitionException {
        try {
            // InternalPascal.g:355:1: ( rulevar_ EOF )
            // InternalPascal.g:356:1: rulevar_ EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Rule()); 
            }
            pushFollow(FOLLOW_1);
            rulevar_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevar_"


    // $ANTLR start "rulevar_"
    // InternalPascal.g:363:1: rulevar_ : ( ( rule__Var___Alternatives )? ) ;
    public final void rulevar_() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:367:2: ( ( ( rule__Var___Alternatives )? ) )
            // InternalPascal.g:368:2: ( ( rule__Var___Alternatives )? )
            {
            // InternalPascal.g:368:2: ( ( rule__Var___Alternatives )? )
            // InternalPascal.g:369:3: ( rule__Var___Alternatives )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getAlternatives()); 
            }
            // InternalPascal.g:370:3: ( rule__Var___Alternatives )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==24||LA2_0==34||LA2_0==36) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalPascal.g:370:4: rule__Var___Alternatives
                    {
                    pushFollow(FOLLOW_2);
                    rule__Var___Alternatives();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevar_"


    // $ANTLR start "entryRuleexpression_list"
    // InternalPascal.g:379:1: entryRuleexpression_list : ruleexpression_list EOF ;
    public final void entryRuleexpression_list() throws RecognitionException {
        try {
            // InternalPascal.g:380:1: ( ruleexpression_list EOF )
            // InternalPascal.g:381:1: ruleexpression_list EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexpression_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexpression_list"


    // $ANTLR start "ruleexpression_list"
    // InternalPascal.g:388:1: ruleexpression_list : ( ( rule__Expression_list__Group__0 ) ) ;
    public final void ruleexpression_list() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:392:2: ( ( ( rule__Expression_list__Group__0 ) ) )
            // InternalPascal.g:393:2: ( ( rule__Expression_list__Group__0 ) )
            {
            // InternalPascal.g:393:2: ( ( rule__Expression_list__Group__0 ) )
            // InternalPascal.g:394:3: ( rule__Expression_list__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getGroup()); 
            }
            // InternalPascal.g:395:3: ( rule__Expression_list__Group__0 )
            // InternalPascal.g:395:4: rule__Expression_list__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression_list__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexpression_list"


    // $ANTLR start "entryRuleexpression"
    // InternalPascal.g:404:1: entryRuleexpression : ruleexpression EOF ;
    public final void entryRuleexpression() throws RecognitionException {
        try {
            // InternalPascal.g:405:1: ( ruleexpression EOF )
            // InternalPascal.g:406:1: ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalPascal.g:413:1: ruleexpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleexpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:417:2: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalPascal.g:418:2: ( ( rule__Expression__Group__0 ) )
            {
            // InternalPascal.g:418:2: ( ( rule__Expression__Group__0 ) )
            // InternalPascal.g:419:3: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalPascal.g:420:3: ( rule__Expression__Group__0 )
            // InternalPascal.g:420:4: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRulesimple_expression"
    // InternalPascal.g:429:1: entryRulesimple_expression : rulesimple_expression EOF ;
    public final void entryRulesimple_expression() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalPascal.g:433:1: ( rulesimple_expression EOF )
            // InternalPascal.g:434:1: rulesimple_expression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesimple_expression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulesimple_expression"


    // $ANTLR start "rulesimple_expression"
    // InternalPascal.g:444:1: rulesimple_expression : ( ( rule__Simple_expression__Group__0 ) ) ;
    public final void rulesimple_expression() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:449:2: ( ( ( rule__Simple_expression__Group__0 ) ) )
            // InternalPascal.g:450:2: ( ( rule__Simple_expression__Group__0 ) )
            {
            // InternalPascal.g:450:2: ( ( rule__Simple_expression__Group__0 ) )
            // InternalPascal.g:451:3: ( rule__Simple_expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getGroup()); 
            }
            // InternalPascal.g:452:3: ( rule__Simple_expression__Group__0 )
            // InternalPascal.g:452:4: rule__Simple_expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulesimple_expression"


    // $ANTLR start "entryRuleterm"
    // InternalPascal.g:462:1: entryRuleterm : ruleterm EOF ;
    public final void entryRuleterm() throws RecognitionException {
        try {
            // InternalPascal.g:463:1: ( ruleterm EOF )
            // InternalPascal.g:464:1: ruleterm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleterm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleterm"


    // $ANTLR start "ruleterm"
    // InternalPascal.g:471:1: ruleterm : ( ( rule__Term__Group__0 ) ) ;
    public final void ruleterm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:475:2: ( ( ( rule__Term__Group__0 ) ) )
            // InternalPascal.g:476:2: ( ( rule__Term__Group__0 ) )
            {
            // InternalPascal.g:476:2: ( ( rule__Term__Group__0 ) )
            // InternalPascal.g:477:3: ( rule__Term__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getGroup()); 
            }
            // InternalPascal.g:478:3: ( rule__Term__Group__0 )
            // InternalPascal.g:478:4: rule__Term__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Term__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleterm"


    // $ANTLR start "entryRulefactor"
    // InternalPascal.g:487:1: entryRulefactor : rulefactor EOF ;
    public final void entryRulefactor() throws RecognitionException {
        try {
            // InternalPascal.g:488:1: ( rulefactor EOF )
            // InternalPascal.g:489:1: rulefactor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefactor"


    // $ANTLR start "rulefactor"
    // InternalPascal.g:496:1: rulefactor : ( ( rule__Factor__Alternatives ) ) ;
    public final void rulefactor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:500:2: ( ( ( rule__Factor__Alternatives ) ) )
            // InternalPascal.g:501:2: ( ( rule__Factor__Alternatives ) )
            {
            // InternalPascal.g:501:2: ( ( rule__Factor__Alternatives ) )
            // InternalPascal.g:502:3: ( rule__Factor__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getAlternatives()); 
            }
            // InternalPascal.g:503:3: ( rule__Factor__Alternatives )
            // InternalPascal.g:503:4: rule__Factor__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Factor__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefactor"


    // $ANTLR start "entryRulenumber"
    // InternalPascal.g:512:1: entryRulenumber : rulenumber EOF ;
    public final void entryRulenumber() throws RecognitionException {
        try {
            // InternalPascal.g:513:1: ( rulenumber EOF )
            // InternalPascal.g:514:1: rulenumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            rulenumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulenumber"


    // $ANTLR start "rulenumber"
    // InternalPascal.g:521:1: rulenumber : ( ( rule__Number__NumberAssignment ) ) ;
    public final void rulenumber() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:525:2: ( ( ( rule__Number__NumberAssignment ) ) )
            // InternalPascal.g:526:2: ( ( rule__Number__NumberAssignment ) )
            {
            // InternalPascal.g:526:2: ( ( rule__Number__NumberAssignment ) )
            // InternalPascal.g:527:3: ( rule__Number__NumberAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getNumberAssignment()); 
            }
            // InternalPascal.g:528:3: ( rule__Number__NumberAssignment )
            // InternalPascal.g:528:4: rule__Number__NumberAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Number__NumberAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getNumberAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulenumber"


    // $ANTLR start "entryRuleany_number"
    // InternalPascal.g:537:1: entryRuleany_number : ruleany_number EOF ;
    public final void entryRuleany_number() throws RecognitionException {
        try {
            // InternalPascal.g:538:1: ( ruleany_number EOF )
            // InternalPascal.g:539:1: ruleany_number EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAny_numberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleany_number();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAny_numberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleany_number"


    // $ANTLR start "ruleany_number"
    // InternalPascal.g:546:1: ruleany_number : ( ( rule__Any_number__Alternatives ) ) ;
    public final void ruleany_number() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:550:2: ( ( ( rule__Any_number__Alternatives ) ) )
            // InternalPascal.g:551:2: ( ( rule__Any_number__Alternatives ) )
            {
            // InternalPascal.g:551:2: ( ( rule__Any_number__Alternatives ) )
            // InternalPascal.g:552:3: ( rule__Any_number__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAny_numberAccess().getAlternatives()); 
            }
            // InternalPascal.g:553:3: ( rule__Any_number__Alternatives )
            // InternalPascal.g:553:4: rule__Any_number__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Any_number__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAny_numberAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleany_number"


    // $ANTLR start "entryRuleunsigned_number"
    // InternalPascal.g:562:1: entryRuleunsigned_number : ruleunsigned_number EOF ;
    public final void entryRuleunsigned_number() throws RecognitionException {
        try {
            // InternalPascal.g:563:1: ( ruleunsigned_number EOF )
            // InternalPascal.g:564:1: ruleunsigned_number EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsigned_numberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleunsigned_number();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsigned_numberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleunsigned_number"


    // $ANTLR start "ruleunsigned_number"
    // InternalPascal.g:571:1: ruleunsigned_number : ( ( rule__Unsigned_number__Alternatives ) ) ;
    public final void ruleunsigned_number() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:575:2: ( ( ( rule__Unsigned_number__Alternatives ) ) )
            // InternalPascal.g:576:2: ( ( rule__Unsigned_number__Alternatives ) )
            {
            // InternalPascal.g:576:2: ( ( rule__Unsigned_number__Alternatives ) )
            // InternalPascal.g:577:3: ( rule__Unsigned_number__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsigned_numberAccess().getAlternatives()); 
            }
            // InternalPascal.g:578:3: ( rule__Unsigned_number__Alternatives )
            // InternalPascal.g:578:4: rule__Unsigned_number__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Unsigned_number__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsigned_numberAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleunsigned_number"


    // $ANTLR start "entryRulesigned_number"
    // InternalPascal.g:587:1: entryRulesigned_number : rulesigned_number EOF ;
    public final void entryRulesigned_number() throws RecognitionException {
        try {
            // InternalPascal.g:588:1: ( rulesigned_number EOF )
            // InternalPascal.g:589:1: rulesigned_number EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSigned_numberRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesigned_number();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSigned_numberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesigned_number"


    // $ANTLR start "rulesigned_number"
    // InternalPascal.g:596:1: rulesigned_number : ( ( rule__Signed_number__Alternatives ) ) ;
    public final void rulesigned_number() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:600:2: ( ( ( rule__Signed_number__Alternatives ) ) )
            // InternalPascal.g:601:2: ( ( rule__Signed_number__Alternatives ) )
            {
            // InternalPascal.g:601:2: ( ( rule__Signed_number__Alternatives ) )
            // InternalPascal.g:602:3: ( rule__Signed_number__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSigned_numberAccess().getAlternatives()); 
            }
            // InternalPascal.g:603:3: ( rule__Signed_number__Alternatives )
            // InternalPascal.g:603:4: rule__Signed_number__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Signed_number__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSigned_numberAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesigned_number"


    // $ANTLR start "entryRuleset"
    // InternalPascal.g:612:1: entryRuleset : ruleset EOF ;
    public final void entryRuleset() throws RecognitionException {
        try {
            // InternalPascal.g:613:1: ( ruleset EOF )
            // InternalPascal.g:614:1: ruleset EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleset"


    // $ANTLR start "ruleset"
    // InternalPascal.g:621:1: ruleset : ( ( rule__Set__Group__0 ) ) ;
    public final void ruleset() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:625:2: ( ( ( rule__Set__Group__0 ) ) )
            // InternalPascal.g:626:2: ( ( rule__Set__Group__0 ) )
            {
            // InternalPascal.g:626:2: ( ( rule__Set__Group__0 ) )
            // InternalPascal.g:627:3: ( rule__Set__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getGroup()); 
            }
            // InternalPascal.g:628:3: ( rule__Set__Group__0 )
            // InternalPascal.g:628:4: rule__Set__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Set__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleset"


    // $ANTLR start "entryRulefunction_designator"
    // InternalPascal.g:637:1: entryRulefunction_designator : rulefunction_designator EOF ;
    public final void entryRulefunction_designator() throws RecognitionException {
        try {
            // InternalPascal.g:638:1: ( rulefunction_designator EOF )
            // InternalPascal.g:639:1: rulefunction_designator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunction_designator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunction_designator"


    // $ANTLR start "rulefunction_designator"
    // InternalPascal.g:646:1: rulefunction_designator : ( ( rule__Function_designator__Group__0 ) ) ;
    public final void rulefunction_designator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:650:2: ( ( ( rule__Function_designator__Group__0 ) ) )
            // InternalPascal.g:651:2: ( ( rule__Function_designator__Group__0 ) )
            {
            // InternalPascal.g:651:2: ( ( rule__Function_designator__Group__0 ) )
            // InternalPascal.g:652:3: ( rule__Function_designator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getGroup()); 
            }
            // InternalPascal.g:653:3: ( rule__Function_designator__Group__0 )
            // InternalPascal.g:653:4: rule__Function_designator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function_designator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunction_designator"


    // $ANTLR start "entryRulestructured_statement"
    // InternalPascal.g:662:1: entryRulestructured_statement : rulestructured_statement EOF ;
    public final void entryRulestructured_statement() throws RecognitionException {
        try {
            // InternalPascal.g:663:1: ( rulestructured_statement EOF )
            // InternalPascal.g:664:1: rulestructured_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestructured_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestructured_statement"


    // $ANTLR start "rulestructured_statement"
    // InternalPascal.g:671:1: rulestructured_statement : ( ( rule__Structured_statement__Alternatives ) ) ;
    public final void rulestructured_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:675:2: ( ( ( rule__Structured_statement__Alternatives ) ) )
            // InternalPascal.g:676:2: ( ( rule__Structured_statement__Alternatives ) )
            {
            // InternalPascal.g:676:2: ( ( rule__Structured_statement__Alternatives ) )
            // InternalPascal.g:677:3: ( rule__Structured_statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_statementAccess().getAlternatives()); 
            }
            // InternalPascal.g:678:3: ( rule__Structured_statement__Alternatives )
            // InternalPascal.g:678:4: rule__Structured_statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Structured_statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_statementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestructured_statement"


    // $ANTLR start "entryRulecompound_statement"
    // InternalPascal.g:687:1: entryRulecompound_statement : rulecompound_statement EOF ;
    public final void entryRulecompound_statement() throws RecognitionException {
        try {
            // InternalPascal.g:688:1: ( rulecompound_statement EOF )
            // InternalPascal.g:689:1: rulecompound_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompound_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecompound_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompound_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecompound_statement"


    // $ANTLR start "rulecompound_statement"
    // InternalPascal.g:696:1: rulecompound_statement : ( ( rule__Compound_statement__Group__0 ) ) ;
    public final void rulecompound_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:700:2: ( ( ( rule__Compound_statement__Group__0 ) ) )
            // InternalPascal.g:701:2: ( ( rule__Compound_statement__Group__0 ) )
            {
            // InternalPascal.g:701:2: ( ( rule__Compound_statement__Group__0 ) )
            // InternalPascal.g:702:3: ( rule__Compound_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompound_statementAccess().getGroup()); 
            }
            // InternalPascal.g:703:3: ( rule__Compound_statement__Group__0 )
            // InternalPascal.g:703:4: rule__Compound_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Compound_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompound_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecompound_statement"


    // $ANTLR start "entryRulerepetitive_statement"
    // InternalPascal.g:712:1: entryRulerepetitive_statement : rulerepetitive_statement EOF ;
    public final void entryRulerepetitive_statement() throws RecognitionException {
        try {
            // InternalPascal.g:713:1: ( rulerepetitive_statement EOF )
            // InternalPascal.g:714:1: rulerepetitive_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepetitive_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerepetitive_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepetitive_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerepetitive_statement"


    // $ANTLR start "rulerepetitive_statement"
    // InternalPascal.g:721:1: rulerepetitive_statement : ( ( rule__Repetitive_statement__Alternatives ) ) ;
    public final void rulerepetitive_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:725:2: ( ( ( rule__Repetitive_statement__Alternatives ) ) )
            // InternalPascal.g:726:2: ( ( rule__Repetitive_statement__Alternatives ) )
            {
            // InternalPascal.g:726:2: ( ( rule__Repetitive_statement__Alternatives ) )
            // InternalPascal.g:727:3: ( rule__Repetitive_statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepetitive_statementAccess().getAlternatives()); 
            }
            // InternalPascal.g:728:3: ( rule__Repetitive_statement__Alternatives )
            // InternalPascal.g:728:4: rule__Repetitive_statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Repetitive_statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepetitive_statementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerepetitive_statement"


    // $ANTLR start "entryRulewhile_statement"
    // InternalPascal.g:737:1: entryRulewhile_statement : rulewhile_statement EOF ;
    public final void entryRulewhile_statement() throws RecognitionException {
        try {
            // InternalPascal.g:738:1: ( rulewhile_statement EOF )
            // InternalPascal.g:739:1: rulewhile_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulewhile_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulewhile_statement"


    // $ANTLR start "rulewhile_statement"
    // InternalPascal.g:746:1: rulewhile_statement : ( ( rule__While_statement__Group__0 ) ) ;
    public final void rulewhile_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:750:2: ( ( ( rule__While_statement__Group__0 ) ) )
            // InternalPascal.g:751:2: ( ( rule__While_statement__Group__0 ) )
            {
            // InternalPascal.g:751:2: ( ( rule__While_statement__Group__0 ) )
            // InternalPascal.g:752:3: ( rule__While_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getGroup()); 
            }
            // InternalPascal.g:753:3: ( rule__While_statement__Group__0 )
            // InternalPascal.g:753:4: rule__While_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__While_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulewhile_statement"


    // $ANTLR start "entryRulerepeat_statement"
    // InternalPascal.g:762:1: entryRulerepeat_statement : rulerepeat_statement EOF ;
    public final void entryRulerepeat_statement() throws RecognitionException {
        try {
            // InternalPascal.g:763:1: ( rulerepeat_statement EOF )
            // InternalPascal.g:764:1: rulerepeat_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerepeat_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerepeat_statement"


    // $ANTLR start "rulerepeat_statement"
    // InternalPascal.g:771:1: rulerepeat_statement : ( ( rule__Repeat_statement__Group__0 ) ) ;
    public final void rulerepeat_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:775:2: ( ( ( rule__Repeat_statement__Group__0 ) ) )
            // InternalPascal.g:776:2: ( ( rule__Repeat_statement__Group__0 ) )
            {
            // InternalPascal.g:776:2: ( ( rule__Repeat_statement__Group__0 ) )
            // InternalPascal.g:777:3: ( rule__Repeat_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getGroup()); 
            }
            // InternalPascal.g:778:3: ( rule__Repeat_statement__Group__0 )
            // InternalPascal.g:778:4: rule__Repeat_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerepeat_statement"


    // $ANTLR start "entryRulefor_statement"
    // InternalPascal.g:787:1: entryRulefor_statement : rulefor_statement EOF ;
    public final void entryRulefor_statement() throws RecognitionException {
        try {
            // InternalPascal.g:788:1: ( rulefor_statement EOF )
            // InternalPascal.g:789:1: rulefor_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefor_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefor_statement"


    // $ANTLR start "rulefor_statement"
    // InternalPascal.g:796:1: rulefor_statement : ( ( rule__For_statement__Group__0 ) ) ;
    public final void rulefor_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:800:2: ( ( ( rule__For_statement__Group__0 ) ) )
            // InternalPascal.g:801:2: ( ( rule__For_statement__Group__0 ) )
            {
            // InternalPascal.g:801:2: ( ( rule__For_statement__Group__0 ) )
            // InternalPascal.g:802:3: ( rule__For_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getGroup()); 
            }
            // InternalPascal.g:803:3: ( rule__For_statement__Group__0 )
            // InternalPascal.g:803:4: rule__For_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefor_statement"


    // $ANTLR start "entryRuleconditional_statement"
    // InternalPascal.g:812:1: entryRuleconditional_statement : ruleconditional_statement EOF ;
    public final void entryRuleconditional_statement() throws RecognitionException {
        try {
            // InternalPascal.g:813:1: ( ruleconditional_statement EOF )
            // InternalPascal.g:814:1: ruleconditional_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditional_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconditional_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditional_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconditional_statement"


    // $ANTLR start "ruleconditional_statement"
    // InternalPascal.g:821:1: ruleconditional_statement : ( ( rule__Conditional_statement__Alternatives ) ) ;
    public final void ruleconditional_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:825:2: ( ( ( rule__Conditional_statement__Alternatives ) ) )
            // InternalPascal.g:826:2: ( ( rule__Conditional_statement__Alternatives ) )
            {
            // InternalPascal.g:826:2: ( ( rule__Conditional_statement__Alternatives ) )
            // InternalPascal.g:827:3: ( rule__Conditional_statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditional_statementAccess().getAlternatives()); 
            }
            // InternalPascal.g:828:3: ( rule__Conditional_statement__Alternatives )
            // InternalPascal.g:828:4: rule__Conditional_statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Conditional_statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditional_statementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconditional_statement"


    // $ANTLR start "entryRuleif_statement"
    // InternalPascal.g:837:1: entryRuleif_statement : ruleif_statement EOF ;
    public final void entryRuleif_statement() throws RecognitionException {
        try {
            // InternalPascal.g:838:1: ( ruleif_statement EOF )
            // InternalPascal.g:839:1: ruleif_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleif_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleif_statement"


    // $ANTLR start "ruleif_statement"
    // InternalPascal.g:846:1: ruleif_statement : ( ( rule__If_statement__Group__0 ) ) ;
    public final void ruleif_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:850:2: ( ( ( rule__If_statement__Group__0 ) ) )
            // InternalPascal.g:851:2: ( ( rule__If_statement__Group__0 ) )
            {
            // InternalPascal.g:851:2: ( ( rule__If_statement__Group__0 ) )
            // InternalPascal.g:852:3: ( rule__If_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getGroup()); 
            }
            // InternalPascal.g:853:3: ( rule__If_statement__Group__0 )
            // InternalPascal.g:853:4: rule__If_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__If_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleif_statement"


    // $ANTLR start "entryRulecase_statement"
    // InternalPascal.g:862:1: entryRulecase_statement : rulecase_statement EOF ;
    public final void entryRulecase_statement() throws RecognitionException {
        try {
            // InternalPascal.g:863:1: ( rulecase_statement EOF )
            // InternalPascal.g:864:1: rulecase_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecase_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecase_statement"


    // $ANTLR start "rulecase_statement"
    // InternalPascal.g:871:1: rulecase_statement : ( ( rule__Case_statement__Group__0 ) ) ;
    public final void rulecase_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:875:2: ( ( ( rule__Case_statement__Group__0 ) ) )
            // InternalPascal.g:876:2: ( ( rule__Case_statement__Group__0 ) )
            {
            // InternalPascal.g:876:2: ( ( rule__Case_statement__Group__0 ) )
            // InternalPascal.g:877:3: ( rule__Case_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getGroup()); 
            }
            // InternalPascal.g:878:3: ( rule__Case_statement__Group__0 )
            // InternalPascal.g:878:4: rule__Case_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecase_statement"


    // $ANTLR start "entryRulecase_limb"
    // InternalPascal.g:887:1: entryRulecase_limb : rulecase_limb EOF ;
    public final void entryRulecase_limb() throws RecognitionException {
        try {
            // InternalPascal.g:888:1: ( rulecase_limb EOF )
            // InternalPascal.g:889:1: rulecase_limb EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecase_limb();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecase_limb"


    // $ANTLR start "rulecase_limb"
    // InternalPascal.g:896:1: rulecase_limb : ( ( rule__Case_limb__Group__0 ) ) ;
    public final void rulecase_limb() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:900:2: ( ( ( rule__Case_limb__Group__0 ) ) )
            // InternalPascal.g:901:2: ( ( rule__Case_limb__Group__0 ) )
            {
            // InternalPascal.g:901:2: ( ( rule__Case_limb__Group__0 ) )
            // InternalPascal.g:902:3: ( rule__Case_limb__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbAccess().getGroup()); 
            }
            // InternalPascal.g:903:3: ( rule__Case_limb__Group__0 )
            // InternalPascal.g:903:4: rule__Case_limb__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Case_limb__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecase_limb"


    // $ANTLR start "entryRulecase_label_list"
    // InternalPascal.g:912:1: entryRulecase_label_list : rulecase_label_list EOF ;
    public final void entryRulecase_label_list() throws RecognitionException {
        try {
            // InternalPascal.g:913:1: ( rulecase_label_list EOF )
            // InternalPascal.g:914:1: rulecase_label_list EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecase_label_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecase_label_list"


    // $ANTLR start "rulecase_label_list"
    // InternalPascal.g:921:1: rulecase_label_list : ( ( rule__Case_label_list__Group__0 ) ) ;
    public final void rulecase_label_list() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:925:2: ( ( ( rule__Case_label_list__Group__0 ) ) )
            // InternalPascal.g:926:2: ( ( rule__Case_label_list__Group__0 ) )
            {
            // InternalPascal.g:926:2: ( ( rule__Case_label_list__Group__0 ) )
            // InternalPascal.g:927:3: ( rule__Case_label_list__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getGroup()); 
            }
            // InternalPascal.g:928:3: ( rule__Case_label_list__Group__0 )
            // InternalPascal.g:928:4: rule__Case_label_list__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Case_label_list__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecase_label_list"


    // $ANTLR start "entryRuleconstant"
    // InternalPascal.g:937:1: entryRuleconstant : ruleconstant EOF ;
    public final void entryRuleconstant() throws RecognitionException {
        try {
            // InternalPascal.g:938:1: ( ruleconstant EOF )
            // InternalPascal.g:939:1: ruleconstant EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconstant"


    // $ANTLR start "ruleconstant"
    // InternalPascal.g:946:1: ruleconstant : ( ( rule__Constant__Alternatives ) ) ;
    public final void ruleconstant() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:950:2: ( ( ( rule__Constant__Alternatives ) ) )
            // InternalPascal.g:951:2: ( ( rule__Constant__Alternatives ) )
            {
            // InternalPascal.g:951:2: ( ( rule__Constant__Alternatives ) )
            // InternalPascal.g:952:3: ( rule__Constant__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getAlternatives()); 
            }
            // InternalPascal.g:953:3: ( rule__Constant__Alternatives )
            // InternalPascal.g:953:4: rule__Constant__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Constant__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconstant"


    // $ANTLR start "entryRulewith_statement"
    // InternalPascal.g:962:1: entryRulewith_statement : rulewith_statement EOF ;
    public final void entryRulewith_statement() throws RecognitionException {
        try {
            // InternalPascal.g:963:1: ( rulewith_statement EOF )
            // InternalPascal.g:964:1: rulewith_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulewith_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulewith_statement"


    // $ANTLR start "rulewith_statement"
    // InternalPascal.g:971:1: rulewith_statement : ( ( rule__With_statement__Group__0 ) ) ;
    public final void rulewith_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:975:2: ( ( ( rule__With_statement__Group__0 ) ) )
            // InternalPascal.g:976:2: ( ( rule__With_statement__Group__0 ) )
            {
            // InternalPascal.g:976:2: ( ( rule__With_statement__Group__0 ) )
            // InternalPascal.g:977:3: ( rule__With_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getGroup()); 
            }
            // InternalPascal.g:978:3: ( rule__With_statement__Group__0 )
            // InternalPascal.g:978:4: rule__With_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__With_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulewith_statement"


    // $ANTLR start "entryRulegoto_statement"
    // InternalPascal.g:987:1: entryRulegoto_statement : rulegoto_statement EOF ;
    public final void entryRulegoto_statement() throws RecognitionException {
        try {
            // InternalPascal.g:988:1: ( rulegoto_statement EOF )
            // InternalPascal.g:989:1: rulegoto_statement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoto_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulegoto_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoto_statementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulegoto_statement"


    // $ANTLR start "rulegoto_statement"
    // InternalPascal.g:996:1: rulegoto_statement : ( ( rule__Goto_statement__Group__0 ) ) ;
    public final void rulegoto_statement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1000:2: ( ( ( rule__Goto_statement__Group__0 ) ) )
            // InternalPascal.g:1001:2: ( ( rule__Goto_statement__Group__0 ) )
            {
            // InternalPascal.g:1001:2: ( ( rule__Goto_statement__Group__0 ) )
            // InternalPascal.g:1002:3: ( rule__Goto_statement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoto_statementAccess().getGroup()); 
            }
            // InternalPascal.g:1003:3: ( rule__Goto_statement__Group__0 )
            // InternalPascal.g:1003:4: rule__Goto_statement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Goto_statement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoto_statementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulegoto_statement"


    // $ANTLR start "entryRulelabel_declaration_part"
    // InternalPascal.g:1012:1: entryRulelabel_declaration_part : rulelabel_declaration_part EOF ;
    public final void entryRulelabel_declaration_part() throws RecognitionException {
        try {
            // InternalPascal.g:1013:1: ( rulelabel_declaration_part EOF )
            // InternalPascal.g:1014:1: rulelabel_declaration_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partRule()); 
            }
            pushFollow(FOLLOW_1);
            rulelabel_declaration_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulelabel_declaration_part"


    // $ANTLR start "rulelabel_declaration_part"
    // InternalPascal.g:1021:1: rulelabel_declaration_part : ( ( rule__Label_declaration_part__Group__0 ) ) ;
    public final void rulelabel_declaration_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1025:2: ( ( ( rule__Label_declaration_part__Group__0 ) ) )
            // InternalPascal.g:1026:2: ( ( rule__Label_declaration_part__Group__0 ) )
            {
            // InternalPascal.g:1026:2: ( ( rule__Label_declaration_part__Group__0 ) )
            // InternalPascal.g:1027:3: ( rule__Label_declaration_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getGroup()); 
            }
            // InternalPascal.g:1028:3: ( rule__Label_declaration_part__Group__0 )
            // InternalPascal.g:1028:4: rule__Label_declaration_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulelabel_declaration_part"


    // $ANTLR start "entryRuleconstant_definition_part"
    // InternalPascal.g:1037:1: entryRuleconstant_definition_part : ruleconstant_definition_part EOF ;
    public final void entryRuleconstant_definition_part() throws RecognitionException {
        try {
            // InternalPascal.g:1038:1: ( ruleconstant_definition_part EOF )
            // InternalPascal.g:1039:1: ruleconstant_definition_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconstant_definition_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconstant_definition_part"


    // $ANTLR start "ruleconstant_definition_part"
    // InternalPascal.g:1046:1: ruleconstant_definition_part : ( ( rule__Constant_definition_part__Group__0 ) ) ;
    public final void ruleconstant_definition_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1050:2: ( ( ( rule__Constant_definition_part__Group__0 ) ) )
            // InternalPascal.g:1051:2: ( ( rule__Constant_definition_part__Group__0 ) )
            {
            // InternalPascal.g:1051:2: ( ( rule__Constant_definition_part__Group__0 ) )
            // InternalPascal.g:1052:3: ( rule__Constant_definition_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getGroup()); 
            }
            // InternalPascal.g:1053:3: ( rule__Constant_definition_part__Group__0 )
            // InternalPascal.g:1053:4: rule__Constant_definition_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconstant_definition_part"


    // $ANTLR start "entryRuleconstant_definition"
    // InternalPascal.g:1062:1: entryRuleconstant_definition : ruleconstant_definition EOF ;
    public final void entryRuleconstant_definition() throws RecognitionException {
        try {
            // InternalPascal.g:1063:1: ( ruleconstant_definition EOF )
            // InternalPascal.g:1064:1: ruleconstant_definition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconstant_definition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconstant_definition"


    // $ANTLR start "ruleconstant_definition"
    // InternalPascal.g:1071:1: ruleconstant_definition : ( ( rule__Constant_definition__Group__0 ) ) ;
    public final void ruleconstant_definition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1075:2: ( ( ( rule__Constant_definition__Group__0 ) ) )
            // InternalPascal.g:1076:2: ( ( rule__Constant_definition__Group__0 ) )
            {
            // InternalPascal.g:1076:2: ( ( rule__Constant_definition__Group__0 ) )
            // InternalPascal.g:1077:3: ( rule__Constant_definition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionAccess().getGroup()); 
            }
            // InternalPascal.g:1078:3: ( rule__Constant_definition__Group__0 )
            // InternalPascal.g:1078:4: rule__Constant_definition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconstant_definition"


    // $ANTLR start "entryRuletype_definition_part"
    // InternalPascal.g:1087:1: entryRuletype_definition_part : ruletype_definition_part EOF ;
    public final void entryRuletype_definition_part() throws RecognitionException {
        try {
            // InternalPascal.g:1088:1: ( ruletype_definition_part EOF )
            // InternalPascal.g:1089:1: ruletype_definition_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletype_definition_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletype_definition_part"


    // $ANTLR start "ruletype_definition_part"
    // InternalPascal.g:1096:1: ruletype_definition_part : ( ( rule__Type_definition_part__Group__0 ) ) ;
    public final void ruletype_definition_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1100:2: ( ( ( rule__Type_definition_part__Group__0 ) ) )
            // InternalPascal.g:1101:2: ( ( rule__Type_definition_part__Group__0 ) )
            {
            // InternalPascal.g:1101:2: ( ( rule__Type_definition_part__Group__0 ) )
            // InternalPascal.g:1102:3: ( rule__Type_definition_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getGroup()); 
            }
            // InternalPascal.g:1103:3: ( rule__Type_definition_part__Group__0 )
            // InternalPascal.g:1103:4: rule__Type_definition_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletype_definition_part"


    // $ANTLR start "entryRuletype_definition"
    // InternalPascal.g:1112:1: entryRuletype_definition : ruletype_definition EOF ;
    public final void entryRuletype_definition() throws RecognitionException {
        try {
            // InternalPascal.g:1113:1: ( ruletype_definition EOF )
            // InternalPascal.g:1114:1: ruletype_definition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletype_definition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletype_definition"


    // $ANTLR start "ruletype_definition"
    // InternalPascal.g:1121:1: ruletype_definition : ( ( rule__Type_definition__Group__0 ) ) ;
    public final void ruletype_definition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1125:2: ( ( ( rule__Type_definition__Group__0 ) ) )
            // InternalPascal.g:1126:2: ( ( rule__Type_definition__Group__0 ) )
            {
            // InternalPascal.g:1126:2: ( ( rule__Type_definition__Group__0 ) )
            // InternalPascal.g:1127:3: ( rule__Type_definition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionAccess().getGroup()); 
            }
            // InternalPascal.g:1128:3: ( rule__Type_definition__Group__0 )
            // InternalPascal.g:1128:4: rule__Type_definition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletype_definition"


    // $ANTLR start "entryRuletype"
    // InternalPascal.g:1137:1: entryRuletype : ruletype EOF ;
    public final void entryRuletype() throws RecognitionException {
        try {
            // InternalPascal.g:1138:1: ( ruletype EOF )
            // InternalPascal.g:1139:1: ruletype EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletype"


    // $ANTLR start "ruletype"
    // InternalPascal.g:1146:1: ruletype : ( ( rule__Type__Alternatives ) ) ;
    public final void ruletype() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1150:2: ( ( ( rule__Type__Alternatives ) ) )
            // InternalPascal.g:1151:2: ( ( rule__Type__Alternatives ) )
            {
            // InternalPascal.g:1151:2: ( ( rule__Type__Alternatives ) )
            // InternalPascal.g:1152:3: ( rule__Type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getAlternatives()); 
            }
            // InternalPascal.g:1153:3: ( rule__Type__Alternatives )
            // InternalPascal.g:1153:4: rule__Type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletype"


    // $ANTLR start "entryRulesimple_type"
    // InternalPascal.g:1162:1: entryRulesimple_type : rulesimple_type EOF ;
    public final void entryRulesimple_type() throws RecognitionException {
        try {
            // InternalPascal.g:1163:1: ( rulesimple_type EOF )
            // InternalPascal.g:1164:1: rulesimple_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesimple_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesimple_type"


    // $ANTLR start "rulesimple_type"
    // InternalPascal.g:1171:1: rulesimple_type : ( ( rule__Simple_type__Alternatives ) ) ;
    public final void rulesimple_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1175:2: ( ( ( rule__Simple_type__Alternatives ) ) )
            // InternalPascal.g:1176:2: ( ( rule__Simple_type__Alternatives ) )
            {
            // InternalPascal.g:1176:2: ( ( rule__Simple_type__Alternatives ) )
            // InternalPascal.g:1177:3: ( rule__Simple_type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_typeAccess().getAlternatives()); 
            }
            // InternalPascal.g:1178:3: ( rule__Simple_type__Alternatives )
            // InternalPascal.g:1178:4: rule__Simple_type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Simple_type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_typeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesimple_type"


    // $ANTLR start "entryRulesubrange_type"
    // InternalPascal.g:1187:1: entryRulesubrange_type : rulesubrange_type EOF ;
    public final void entryRulesubrange_type() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalPascal.g:1191:1: ( rulesubrange_type EOF )
            // InternalPascal.g:1192:1: rulesubrange_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesubrange_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulesubrange_type"


    // $ANTLR start "rulesubrange_type"
    // InternalPascal.g:1202:1: rulesubrange_type : ( ( rule__Subrange_type__Alternatives ) ) ;
    public final void rulesubrange_type() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1207:2: ( ( ( rule__Subrange_type__Alternatives ) ) )
            // InternalPascal.g:1208:2: ( ( rule__Subrange_type__Alternatives ) )
            {
            // InternalPascal.g:1208:2: ( ( rule__Subrange_type__Alternatives ) )
            // InternalPascal.g:1209:3: ( rule__Subrange_type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getAlternatives()); 
            }
            // InternalPascal.g:1210:3: ( rule__Subrange_type__Alternatives )
            // InternalPascal.g:1210:4: rule__Subrange_type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulesubrange_type"


    // $ANTLR start "entryRuleenumerated_type"
    // InternalPascal.g:1220:1: entryRuleenumerated_type : ruleenumerated_type EOF ;
    public final void entryRuleenumerated_type() throws RecognitionException {
        try {
            // InternalPascal.g:1221:1: ( ruleenumerated_type EOF )
            // InternalPascal.g:1222:1: ruleenumerated_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumerated_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleenumerated_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumerated_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleenumerated_type"


    // $ANTLR start "ruleenumerated_type"
    // InternalPascal.g:1229:1: ruleenumerated_type : ( ( rule__Enumerated_type__Group__0 ) ) ;
    public final void ruleenumerated_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1233:2: ( ( ( rule__Enumerated_type__Group__0 ) ) )
            // InternalPascal.g:1234:2: ( ( rule__Enumerated_type__Group__0 ) )
            {
            // InternalPascal.g:1234:2: ( ( rule__Enumerated_type__Group__0 ) )
            // InternalPascal.g:1235:3: ( rule__Enumerated_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumerated_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1236:3: ( rule__Enumerated_type__Group__0 )
            // InternalPascal.g:1236:4: rule__Enumerated_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Enumerated_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumerated_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleenumerated_type"


    // $ANTLR start "entryRulestructured_type"
    // InternalPascal.g:1245:1: entryRulestructured_type : rulestructured_type EOF ;
    public final void entryRulestructured_type() throws RecognitionException {
        try {
            // InternalPascal.g:1246:1: ( rulestructured_type EOF )
            // InternalPascal.g:1247:1: rulestructured_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestructured_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestructured_type"


    // $ANTLR start "rulestructured_type"
    // InternalPascal.g:1254:1: rulestructured_type : ( ( rule__Structured_type__Group__0 ) ) ;
    public final void rulestructured_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1258:2: ( ( ( rule__Structured_type__Group__0 ) ) )
            // InternalPascal.g:1259:2: ( ( rule__Structured_type__Group__0 ) )
            {
            // InternalPascal.g:1259:2: ( ( rule__Structured_type__Group__0 ) )
            // InternalPascal.g:1260:3: ( rule__Structured_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1261:3: ( rule__Structured_type__Group__0 )
            // InternalPascal.g:1261:4: rule__Structured_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Structured_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestructured_type"


    // $ANTLR start "entryRuleunpacked_structured_type"
    // InternalPascal.g:1270:1: entryRuleunpacked_structured_type : ruleunpacked_structured_type EOF ;
    public final void entryRuleunpacked_structured_type() throws RecognitionException {
        try {
            // InternalPascal.g:1271:1: ( ruleunpacked_structured_type EOF )
            // InternalPascal.g:1272:1: ruleunpacked_structured_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleunpacked_structured_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleunpacked_structured_type"


    // $ANTLR start "ruleunpacked_structured_type"
    // InternalPascal.g:1279:1: ruleunpacked_structured_type : ( ( rule__Unpacked_structured_type__Alternatives ) ) ;
    public final void ruleunpacked_structured_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1283:2: ( ( ( rule__Unpacked_structured_type__Alternatives ) ) )
            // InternalPascal.g:1284:2: ( ( rule__Unpacked_structured_type__Alternatives ) )
            {
            // InternalPascal.g:1284:2: ( ( rule__Unpacked_structured_type__Alternatives ) )
            // InternalPascal.g:1285:3: ( rule__Unpacked_structured_type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives()); 
            }
            // InternalPascal.g:1286:3: ( rule__Unpacked_structured_type__Alternatives )
            // InternalPascal.g:1286:4: rule__Unpacked_structured_type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_structured_type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleunpacked_structured_type"


    // $ANTLR start "entryRulearray_type"
    // InternalPascal.g:1295:1: entryRulearray_type : rulearray_type EOF ;
    public final void entryRulearray_type() throws RecognitionException {
        try {
            // InternalPascal.g:1296:1: ( rulearray_type EOF )
            // InternalPascal.g:1297:1: rulearray_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulearray_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulearray_type"


    // $ANTLR start "rulearray_type"
    // InternalPascal.g:1304:1: rulearray_type : ( ( rule__Array_type__Group__0 ) ) ;
    public final void rulearray_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1308:2: ( ( ( rule__Array_type__Group__0 ) ) )
            // InternalPascal.g:1309:2: ( ( rule__Array_type__Group__0 ) )
            {
            // InternalPascal.g:1309:2: ( ( rule__Array_type__Group__0 ) )
            // InternalPascal.g:1310:3: ( rule__Array_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1311:3: ( rule__Array_type__Group__0 )
            // InternalPascal.g:1311:4: rule__Array_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulearray_type"


    // $ANTLR start "entryRuledynamic_array_type"
    // InternalPascal.g:1320:1: entryRuledynamic_array_type : ruledynamic_array_type EOF ;
    public final void entryRuledynamic_array_type() throws RecognitionException {
        try {
            // InternalPascal.g:1321:1: ( ruledynamic_array_type EOF )
            // InternalPascal.g:1322:1: ruledynamic_array_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDynamic_array_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruledynamic_array_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDynamic_array_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuledynamic_array_type"


    // $ANTLR start "ruledynamic_array_type"
    // InternalPascal.g:1329:1: ruledynamic_array_type : ( ( rule__Dynamic_array_type__Group__0 ) ) ;
    public final void ruledynamic_array_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1333:2: ( ( ( rule__Dynamic_array_type__Group__0 ) ) )
            // InternalPascal.g:1334:2: ( ( rule__Dynamic_array_type__Group__0 ) )
            {
            // InternalPascal.g:1334:2: ( ( rule__Dynamic_array_type__Group__0 ) )
            // InternalPascal.g:1335:3: ( rule__Dynamic_array_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDynamic_array_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1336:3: ( rule__Dynamic_array_type__Group__0 )
            // InternalPascal.g:1336:4: rule__Dynamic_array_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dynamic_array_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDynamic_array_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruledynamic_array_type"


    // $ANTLR start "entryRuleindex_type"
    // InternalPascal.g:1345:1: entryRuleindex_type : ruleindex_type EOF ;
    public final void entryRuleindex_type() throws RecognitionException {
        try {
            // InternalPascal.g:1346:1: ( ruleindex_type EOF )
            // InternalPascal.g:1347:1: ruleindex_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndex_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleindex_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndex_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleindex_type"


    // $ANTLR start "ruleindex_type"
    // InternalPascal.g:1354:1: ruleindex_type : ( ( rule__Index_type__TypeAssignment ) ) ;
    public final void ruleindex_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1358:2: ( ( ( rule__Index_type__TypeAssignment ) ) )
            // InternalPascal.g:1359:2: ( ( rule__Index_type__TypeAssignment ) )
            {
            // InternalPascal.g:1359:2: ( ( rule__Index_type__TypeAssignment ) )
            // InternalPascal.g:1360:3: ( rule__Index_type__TypeAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndex_typeAccess().getTypeAssignment()); 
            }
            // InternalPascal.g:1361:3: ( rule__Index_type__TypeAssignment )
            // InternalPascal.g:1361:4: rule__Index_type__TypeAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Index_type__TypeAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndex_typeAccess().getTypeAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleindex_type"


    // $ANTLR start "entryRulerecord_type"
    // InternalPascal.g:1370:1: entryRulerecord_type : rulerecord_type EOF ;
    public final void entryRulerecord_type() throws RecognitionException {
        try {
            // InternalPascal.g:1371:1: ( rulerecord_type EOF )
            // InternalPascal.g:1372:1: rulerecord_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerecord_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerecord_type"


    // $ANTLR start "rulerecord_type"
    // InternalPascal.g:1379:1: rulerecord_type : ( ( rule__Record_type__Group__0 ) ) ;
    public final void rulerecord_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1383:2: ( ( ( rule__Record_type__Group__0 ) ) )
            // InternalPascal.g:1384:2: ( ( rule__Record_type__Group__0 ) )
            {
            // InternalPascal.g:1384:2: ( ( rule__Record_type__Group__0 ) )
            // InternalPascal.g:1385:3: ( rule__Record_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1386:3: ( rule__Record_type__Group__0 )
            // InternalPascal.g:1386:4: rule__Record_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Record_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerecord_type"


    // $ANTLR start "entryRulefield_list"
    // InternalPascal.g:1395:1: entryRulefield_list : rulefield_list EOF ;
    public final void entryRulefield_list() throws RecognitionException {
        try {
            // InternalPascal.g:1396:1: ( rulefield_list EOF )
            // InternalPascal.g:1397:1: rulefield_list EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefield_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefield_list"


    // $ANTLR start "rulefield_list"
    // InternalPascal.g:1404:1: rulefield_list : ( ( rule__Field_list__Group__0 ) ) ;
    public final void rulefield_list() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1408:2: ( ( ( rule__Field_list__Group__0 ) ) )
            // InternalPascal.g:1409:2: ( ( rule__Field_list__Group__0 ) )
            {
            // InternalPascal.g:1409:2: ( ( rule__Field_list__Group__0 ) )
            // InternalPascal.g:1410:3: ( rule__Field_list__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getGroup()); 
            }
            // InternalPascal.g:1411:3: ( rule__Field_list__Group__0 )
            // InternalPascal.g:1411:4: rule__Field_list__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefield_list"


    // $ANTLR start "entryRulefixed_part"
    // InternalPascal.g:1420:1: entryRulefixed_part : rulefixed_part EOF ;
    public final void entryRulefixed_part() throws RecognitionException {
        try {
            // InternalPascal.g:1421:1: ( rulefixed_part EOF )
            // InternalPascal.g:1422:1: rulefixed_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefixed_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefixed_part"


    // $ANTLR start "rulefixed_part"
    // InternalPascal.g:1429:1: rulefixed_part : ( ( rule__Fixed_part__Group__0 ) ) ;
    public final void rulefixed_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1433:2: ( ( ( rule__Fixed_part__Group__0 ) ) )
            // InternalPascal.g:1434:2: ( ( rule__Fixed_part__Group__0 ) )
            {
            // InternalPascal.g:1434:2: ( ( rule__Fixed_part__Group__0 ) )
            // InternalPascal.g:1435:3: ( rule__Fixed_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getGroup()); 
            }
            // InternalPascal.g:1436:3: ( rule__Fixed_part__Group__0 )
            // InternalPascal.g:1436:4: rule__Fixed_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Fixed_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefixed_part"


    // $ANTLR start "entryRulevariable_identifier_list"
    // InternalPascal.g:1445:1: entryRulevariable_identifier_list : rulevariable_identifier_list EOF ;
    public final void entryRulevariable_identifier_list() throws RecognitionException {
        try {
            // InternalPascal.g:1446:1: ( rulevariable_identifier_list EOF )
            // InternalPascal.g:1447:1: rulevariable_identifier_list EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariable_identifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariable_identifier_list"


    // $ANTLR start "rulevariable_identifier_list"
    // InternalPascal.g:1454:1: rulevariable_identifier_list : ( ( rule__Variable_identifier_list__Group__0 ) ) ;
    public final void rulevariable_identifier_list() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1458:2: ( ( ( rule__Variable_identifier_list__Group__0 ) ) )
            // InternalPascal.g:1459:2: ( ( rule__Variable_identifier_list__Group__0 ) )
            {
            // InternalPascal.g:1459:2: ( ( rule__Variable_identifier_list__Group__0 ) )
            // InternalPascal.g:1460:3: ( rule__Variable_identifier_list__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getGroup()); 
            }
            // InternalPascal.g:1461:3: ( rule__Variable_identifier_list__Group__0 )
            // InternalPascal.g:1461:4: rule__Variable_identifier_list__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariable_identifier_list"


    // $ANTLR start "entryRulevariable_section"
    // InternalPascal.g:1470:1: entryRulevariable_section : rulevariable_section EOF ;
    public final void entryRulevariable_section() throws RecognitionException {
        try {
            // InternalPascal.g:1471:1: ( rulevariable_section EOF )
            // InternalPascal.g:1472:1: rulevariable_section EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariable_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariable_section"


    // $ANTLR start "rulevariable_section"
    // InternalPascal.g:1479:1: rulevariable_section : ( ( rule__Variable_section__Group__0 ) ) ;
    public final void rulevariable_section() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1483:2: ( ( ( rule__Variable_section__Group__0 ) ) )
            // InternalPascal.g:1484:2: ( ( rule__Variable_section__Group__0 ) )
            {
            // InternalPascal.g:1484:2: ( ( rule__Variable_section__Group__0 ) )
            // InternalPascal.g:1485:3: ( rule__Variable_section__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionAccess().getGroup()); 
            }
            // InternalPascal.g:1486:3: ( rule__Variable_section__Group__0 )
            // InternalPascal.g:1486:4: rule__Variable_section__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_section__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariable_section"


    // $ANTLR start "entryRulerecord_section"
    // InternalPascal.g:1495:1: entryRulerecord_section : rulerecord_section EOF ;
    public final void entryRulerecord_section() throws RecognitionException {
        try {
            // InternalPascal.g:1496:1: ( rulerecord_section EOF )
            // InternalPascal.g:1497:1: rulerecord_section EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerecord_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerecord_section"


    // $ANTLR start "rulerecord_section"
    // InternalPascal.g:1504:1: rulerecord_section : ( ( rule__Record_section__Group__0 ) ) ;
    public final void rulerecord_section() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1508:2: ( ( ( rule__Record_section__Group__0 ) ) )
            // InternalPascal.g:1509:2: ( ( rule__Record_section__Group__0 ) )
            {
            // InternalPascal.g:1509:2: ( ( rule__Record_section__Group__0 ) )
            // InternalPascal.g:1510:3: ( rule__Record_section__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionAccess().getGroup()); 
            }
            // InternalPascal.g:1511:3: ( rule__Record_section__Group__0 )
            // InternalPascal.g:1511:4: rule__Record_section__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Record_section__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerecord_section"


    // $ANTLR start "entryRulevariant_part"
    // InternalPascal.g:1520:1: entryRulevariant_part : rulevariant_part EOF ;
    public final void entryRulevariant_part() throws RecognitionException {
        try {
            // InternalPascal.g:1521:1: ( rulevariant_part EOF )
            // InternalPascal.g:1522:1: rulevariant_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariant_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariant_part"


    // $ANTLR start "rulevariant_part"
    // InternalPascal.g:1529:1: rulevariant_part : ( ( rule__Variant_part__Group__0 ) ) ;
    public final void rulevariant_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1533:2: ( ( ( rule__Variant_part__Group__0 ) ) )
            // InternalPascal.g:1534:2: ( ( rule__Variant_part__Group__0 ) )
            {
            // InternalPascal.g:1534:2: ( ( rule__Variant_part__Group__0 ) )
            // InternalPascal.g:1535:3: ( rule__Variant_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getGroup()); 
            }
            // InternalPascal.g:1536:3: ( rule__Variant_part__Group__0 )
            // InternalPascal.g:1536:4: rule__Variant_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariant_part"


    // $ANTLR start "entryRuletag_field"
    // InternalPascal.g:1545:1: entryRuletag_field : ruletag_field EOF ;
    public final void entryRuletag_field() throws RecognitionException {
        try {
            // InternalPascal.g:1546:1: ( ruletag_field EOF )
            // InternalPascal.g:1547:1: ruletag_field EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTag_fieldRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletag_field();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTag_fieldRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletag_field"


    // $ANTLR start "ruletag_field"
    // InternalPascal.g:1554:1: ruletag_field : ( ( rule__Tag_field__Group__0 ) ) ;
    public final void ruletag_field() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1558:2: ( ( ( rule__Tag_field__Group__0 ) ) )
            // InternalPascal.g:1559:2: ( ( rule__Tag_field__Group__0 ) )
            {
            // InternalPascal.g:1559:2: ( ( rule__Tag_field__Group__0 ) )
            // InternalPascal.g:1560:3: ( rule__Tag_field__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTag_fieldAccess().getGroup()); 
            }
            // InternalPascal.g:1561:3: ( rule__Tag_field__Group__0 )
            // InternalPascal.g:1561:4: rule__Tag_field__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tag_field__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTag_fieldAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletag_field"


    // $ANTLR start "entryRulevariant"
    // InternalPascal.g:1570:1: entryRulevariant : rulevariant EOF ;
    public final void entryRulevariant() throws RecognitionException {
        try {
            // InternalPascal.g:1571:1: ( rulevariant EOF )
            // InternalPascal.g:1572:1: rulevariant EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariant"


    // $ANTLR start "rulevariant"
    // InternalPascal.g:1579:1: rulevariant : ( ( rule__Variant__Group__0 ) ) ;
    public final void rulevariant() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1583:2: ( ( ( rule__Variant__Group__0 ) ) )
            // InternalPascal.g:1584:2: ( ( rule__Variant__Group__0 ) )
            {
            // InternalPascal.g:1584:2: ( ( rule__Variant__Group__0 ) )
            // InternalPascal.g:1585:3: ( rule__Variant__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getGroup()); 
            }
            // InternalPascal.g:1586:3: ( rule__Variant__Group__0 )
            // InternalPascal.g:1586:4: rule__Variant__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variant__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariant"


    // $ANTLR start "entryRuleset_type"
    // InternalPascal.g:1595:1: entryRuleset_type : ruleset_type EOF ;
    public final void entryRuleset_type() throws RecognitionException {
        try {
            // InternalPascal.g:1596:1: ( ruleset_type EOF )
            // InternalPascal.g:1597:1: ruleset_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSet_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleset_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSet_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleset_type"


    // $ANTLR start "ruleset_type"
    // InternalPascal.g:1604:1: ruleset_type : ( ( rule__Set_type__Group__0 ) ) ;
    public final void ruleset_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1608:2: ( ( ( rule__Set_type__Group__0 ) ) )
            // InternalPascal.g:1609:2: ( ( rule__Set_type__Group__0 ) )
            {
            // InternalPascal.g:1609:2: ( ( rule__Set_type__Group__0 ) )
            // InternalPascal.g:1610:3: ( rule__Set_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSet_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1611:3: ( rule__Set_type__Group__0 )
            // InternalPascal.g:1611:4: rule__Set_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Set_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSet_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleset_type"


    // $ANTLR start "entryRulefile_type"
    // InternalPascal.g:1620:1: entryRulefile_type : rulefile_type EOF ;
    public final void entryRulefile_type() throws RecognitionException {
        try {
            // InternalPascal.g:1621:1: ( rulefile_type EOF )
            // InternalPascal.g:1622:1: rulefile_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFile_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefile_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFile_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefile_type"


    // $ANTLR start "rulefile_type"
    // InternalPascal.g:1629:1: rulefile_type : ( ( rule__File_type__Group__0 ) ) ;
    public final void rulefile_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1633:2: ( ( ( rule__File_type__Group__0 ) ) )
            // InternalPascal.g:1634:2: ( ( rule__File_type__Group__0 ) )
            {
            // InternalPascal.g:1634:2: ( ( rule__File_type__Group__0 ) )
            // InternalPascal.g:1635:3: ( rule__File_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFile_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1636:3: ( rule__File_type__Group__0 )
            // InternalPascal.g:1636:4: rule__File_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__File_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFile_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefile_type"


    // $ANTLR start "entryRulepointer_type"
    // InternalPascal.g:1645:1: entryRulepointer_type : rulepointer_type EOF ;
    public final void entryRulepointer_type() throws RecognitionException {
        try {
            // InternalPascal.g:1646:1: ( rulepointer_type EOF )
            // InternalPascal.g:1647:1: rulepointer_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointer_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepointer_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointer_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepointer_type"


    // $ANTLR start "rulepointer_type"
    // InternalPascal.g:1654:1: rulepointer_type : ( ( rule__Pointer_type__Group__0 ) ) ;
    public final void rulepointer_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1658:2: ( ( ( rule__Pointer_type__Group__0 ) ) )
            // InternalPascal.g:1659:2: ( ( rule__Pointer_type__Group__0 ) )
            {
            // InternalPascal.g:1659:2: ( ( rule__Pointer_type__Group__0 ) )
            // InternalPascal.g:1660:3: ( rule__Pointer_type__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointer_typeAccess().getGroup()); 
            }
            // InternalPascal.g:1661:3: ( rule__Pointer_type__Group__0 )
            // InternalPascal.g:1661:4: rule__Pointer_type__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Pointer_type__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointer_typeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepointer_type"


    // $ANTLR start "entryRulevariable_declaration_part"
    // InternalPascal.g:1670:1: entryRulevariable_declaration_part : rulevariable_declaration_part EOF ;
    public final void entryRulevariable_declaration_part() throws RecognitionException {
        try {
            // InternalPascal.g:1671:1: ( rulevariable_declaration_part EOF )
            // InternalPascal.g:1672:1: rulevariable_declaration_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariable_declaration_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariable_declaration_part"


    // $ANTLR start "rulevariable_declaration_part"
    // InternalPascal.g:1679:1: rulevariable_declaration_part : ( ( rule__Variable_declaration_part__Group__0 ) ) ;
    public final void rulevariable_declaration_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1683:2: ( ( ( rule__Variable_declaration_part__Group__0 ) ) )
            // InternalPascal.g:1684:2: ( ( rule__Variable_declaration_part__Group__0 ) )
            {
            // InternalPascal.g:1684:2: ( ( rule__Variable_declaration_part__Group__0 ) )
            // InternalPascal.g:1685:3: ( rule__Variable_declaration_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getGroup()); 
            }
            // InternalPascal.g:1686:3: ( rule__Variable_declaration_part__Group__0 )
            // InternalPascal.g:1686:4: rule__Variable_declaration_part__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariable_declaration_part"


    // $ANTLR start "entryRuleprocedure_and_function_declaration_part"
    // InternalPascal.g:1695:1: entryRuleprocedure_and_function_declaration_part : ruleprocedure_and_function_declaration_part EOF ;
    public final void entryRuleprocedure_and_function_declaration_part() throws RecognitionException {
        try {
            // InternalPascal.g:1696:1: ( ruleprocedure_and_function_declaration_part EOF )
            // InternalPascal.g:1697:1: ruleprocedure_and_function_declaration_part EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprocedure_and_function_declaration_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprocedure_and_function_declaration_part"


    // $ANTLR start "ruleprocedure_and_function_declaration_part"
    // InternalPascal.g:1704:1: ruleprocedure_and_function_declaration_part : ( ( ( rule__Procedure_and_function_declaration_part__Group__0 ) ) ( ( rule__Procedure_and_function_declaration_part__Group__0 )* ) ) ;
    public final void ruleprocedure_and_function_declaration_part() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1708:2: ( ( ( ( rule__Procedure_and_function_declaration_part__Group__0 ) ) ( ( rule__Procedure_and_function_declaration_part__Group__0 )* ) ) )
            // InternalPascal.g:1709:2: ( ( ( rule__Procedure_and_function_declaration_part__Group__0 ) ) ( ( rule__Procedure_and_function_declaration_part__Group__0 )* ) )
            {
            // InternalPascal.g:1709:2: ( ( ( rule__Procedure_and_function_declaration_part__Group__0 ) ) ( ( rule__Procedure_and_function_declaration_part__Group__0 )* ) )
            // InternalPascal.g:1710:3: ( ( rule__Procedure_and_function_declaration_part__Group__0 ) ) ( ( rule__Procedure_and_function_declaration_part__Group__0 )* )
            {
            // InternalPascal.g:1710:3: ( ( rule__Procedure_and_function_declaration_part__Group__0 ) )
            // InternalPascal.g:1711:4: ( rule__Procedure_and_function_declaration_part__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); 
            }
            // InternalPascal.g:1712:4: ( rule__Procedure_and_function_declaration_part__Group__0 )
            // InternalPascal.g:1712:5: rule__Procedure_and_function_declaration_part__Group__0
            {
            pushFollow(FOLLOW_3);
            rule__Procedure_and_function_declaration_part__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); 
            }

            }

            // InternalPascal.g:1715:3: ( ( rule__Procedure_and_function_declaration_part__Group__0 )* )
            // InternalPascal.g:1716:4: ( rule__Procedure_and_function_declaration_part__Group__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); 
            }
            // InternalPascal.g:1717:4: ( rule__Procedure_and_function_declaration_part__Group__0 )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==59||LA3_0==61) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalPascal.g:1717:5: rule__Procedure_and_function_declaration_part__Group__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Procedure_and_function_declaration_part__Group__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprocedure_and_function_declaration_part"


    // $ANTLR start "entryRuleprocedure_declaration"
    // InternalPascal.g:1727:1: entryRuleprocedure_declaration : ruleprocedure_declaration EOF ;
    public final void entryRuleprocedure_declaration() throws RecognitionException {
        try {
            // InternalPascal.g:1728:1: ( ruleprocedure_declaration EOF )
            // InternalPascal.g:1729:1: ruleprocedure_declaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprocedure_declaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprocedure_declaration"


    // $ANTLR start "ruleprocedure_declaration"
    // InternalPascal.g:1736:1: ruleprocedure_declaration : ( ( rule__Procedure_declaration__Group__0 ) ) ;
    public final void ruleprocedure_declaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1740:2: ( ( ( rule__Procedure_declaration__Group__0 ) ) )
            // InternalPascal.g:1741:2: ( ( rule__Procedure_declaration__Group__0 ) )
            {
            // InternalPascal.g:1741:2: ( ( rule__Procedure_declaration__Group__0 ) )
            // InternalPascal.g:1742:3: ( rule__Procedure_declaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getGroup()); 
            }
            // InternalPascal.g:1743:3: ( rule__Procedure_declaration__Group__0 )
            // InternalPascal.g:1743:4: rule__Procedure_declaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_declaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprocedure_declaration"


    // $ANTLR start "entryRuleprocedure_heading"
    // InternalPascal.g:1752:1: entryRuleprocedure_heading : ruleprocedure_heading EOF ;
    public final void entryRuleprocedure_heading() throws RecognitionException {
        try {
            // InternalPascal.g:1753:1: ( ruleprocedure_heading EOF )
            // InternalPascal.g:1754:1: ruleprocedure_heading EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprocedure_heading();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprocedure_heading"


    // $ANTLR start "ruleprocedure_heading"
    // InternalPascal.g:1761:1: ruleprocedure_heading : ( ( rule__Procedure_heading__Group__0 ) ) ;
    public final void ruleprocedure_heading() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1765:2: ( ( ( rule__Procedure_heading__Group__0 ) ) )
            // InternalPascal.g:1766:2: ( ( rule__Procedure_heading__Group__0 ) )
            {
            // InternalPascal.g:1766:2: ( ( rule__Procedure_heading__Group__0 ) )
            // InternalPascal.g:1767:3: ( rule__Procedure_heading__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingAccess().getGroup()); 
            }
            // InternalPascal.g:1768:3: ( rule__Procedure_heading__Group__0 )
            // InternalPascal.g:1768:4: rule__Procedure_heading__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_heading__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprocedure_heading"


    // $ANTLR start "entryRuleformal_parameter_list"
    // InternalPascal.g:1777:1: entryRuleformal_parameter_list : ruleformal_parameter_list EOF ;
    public final void entryRuleformal_parameter_list() throws RecognitionException {
        try {
            // InternalPascal.g:1778:1: ( ruleformal_parameter_list EOF )
            // InternalPascal.g:1779:1: ruleformal_parameter_list EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleformal_parameter_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleformal_parameter_list"


    // $ANTLR start "ruleformal_parameter_list"
    // InternalPascal.g:1786:1: ruleformal_parameter_list : ( ( rule__Formal_parameter_list__Group__0 ) ) ;
    public final void ruleformal_parameter_list() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1790:2: ( ( ( rule__Formal_parameter_list__Group__0 ) ) )
            // InternalPascal.g:1791:2: ( ( rule__Formal_parameter_list__Group__0 ) )
            {
            // InternalPascal.g:1791:2: ( ( rule__Formal_parameter_list__Group__0 ) )
            // InternalPascal.g:1792:3: ( rule__Formal_parameter_list__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getGroup()); 
            }
            // InternalPascal.g:1793:3: ( rule__Formal_parameter_list__Group__0 )
            // InternalPascal.g:1793:4: rule__Formal_parameter_list__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleformal_parameter_list"


    // $ANTLR start "entryRuleformal_parameter_section"
    // InternalPascal.g:1802:1: entryRuleformal_parameter_section : ruleformal_parameter_section EOF ;
    public final void entryRuleformal_parameter_section() throws RecognitionException {
        try {
            // InternalPascal.g:1803:1: ( ruleformal_parameter_section EOF )
            // InternalPascal.g:1804:1: ruleformal_parameter_section EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_sectionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleformal_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_sectionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleformal_parameter_section"


    // $ANTLR start "ruleformal_parameter_section"
    // InternalPascal.g:1811:1: ruleformal_parameter_section : ( ( rule__Formal_parameter_section__Alternatives ) ) ;
    public final void ruleformal_parameter_section() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1815:2: ( ( ( rule__Formal_parameter_section__Alternatives ) ) )
            // InternalPascal.g:1816:2: ( ( rule__Formal_parameter_section__Alternatives ) )
            {
            // InternalPascal.g:1816:2: ( ( rule__Formal_parameter_section__Alternatives ) )
            // InternalPascal.g:1817:3: ( rule__Formal_parameter_section__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); 
            }
            // InternalPascal.g:1818:3: ( rule__Formal_parameter_section__Alternatives )
            // InternalPascal.g:1818:4: rule__Formal_parameter_section__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_section__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleformal_parameter_section"


    // $ANTLR start "entryRulevalue_parameter_section"
    // InternalPascal.g:1827:1: entryRulevalue_parameter_section : rulevalue_parameter_section EOF ;
    public final void entryRulevalue_parameter_section() throws RecognitionException {
        try {
            // InternalPascal.g:1828:1: ( rulevalue_parameter_section EOF )
            // InternalPascal.g:1829:1: rulevalue_parameter_section EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevalue_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevalue_parameter_section"


    // $ANTLR start "rulevalue_parameter_section"
    // InternalPascal.g:1836:1: rulevalue_parameter_section : ( ( rule__Value_parameter_section__Group__0 ) ) ;
    public final void rulevalue_parameter_section() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1840:2: ( ( ( rule__Value_parameter_section__Group__0 ) ) )
            // InternalPascal.g:1841:2: ( ( rule__Value_parameter_section__Group__0 ) )
            {
            // InternalPascal.g:1841:2: ( ( rule__Value_parameter_section__Group__0 ) )
            // InternalPascal.g:1842:3: ( rule__Value_parameter_section__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionAccess().getGroup()); 
            }
            // InternalPascal.g:1843:3: ( rule__Value_parameter_section__Group__0 )
            // InternalPascal.g:1843:4: rule__Value_parameter_section__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Value_parameter_section__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevalue_parameter_section"


    // $ANTLR start "entryRuleparameter_type"
    // InternalPascal.g:1852:1: entryRuleparameter_type : ruleparameter_type EOF ;
    public final void entryRuleparameter_type() throws RecognitionException {
        try {
            // InternalPascal.g:1853:1: ( ruleparameter_type EOF )
            // InternalPascal.g:1854:1: ruleparameter_type EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameter_typeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleparameter_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameter_typeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleparameter_type"


    // $ANTLR start "ruleparameter_type"
    // InternalPascal.g:1861:1: ruleparameter_type : ( ( rule__Parameter_type__Alternatives ) ) ;
    public final void ruleparameter_type() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1865:2: ( ( ( rule__Parameter_type__Alternatives ) ) )
            // InternalPascal.g:1866:2: ( ( rule__Parameter_type__Alternatives ) )
            {
            // InternalPascal.g:1866:2: ( ( rule__Parameter_type__Alternatives ) )
            // InternalPascal.g:1867:3: ( rule__Parameter_type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameter_typeAccess().getAlternatives()); 
            }
            // InternalPascal.g:1868:3: ( rule__Parameter_type__Alternatives )
            // InternalPascal.g:1868:4: rule__Parameter_type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Parameter_type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameter_typeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleparameter_type"


    // $ANTLR start "entryRuleconformant_array_schema"
    // InternalPascal.g:1877:1: entryRuleconformant_array_schema : ruleconformant_array_schema EOF ;
    public final void entryRuleconformant_array_schema() throws RecognitionException {
        try {
            // InternalPascal.g:1878:1: ( ruleconformant_array_schema EOF )
            // InternalPascal.g:1879:1: ruleconformant_array_schema EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConformant_array_schemaRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconformant_array_schema();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConformant_array_schemaRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconformant_array_schema"


    // $ANTLR start "ruleconformant_array_schema"
    // InternalPascal.g:1886:1: ruleconformant_array_schema : ( ( rule__Conformant_array_schema__Alternatives ) ) ;
    public final void ruleconformant_array_schema() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1890:2: ( ( ( rule__Conformant_array_schema__Alternatives ) ) )
            // InternalPascal.g:1891:2: ( ( rule__Conformant_array_schema__Alternatives ) )
            {
            // InternalPascal.g:1891:2: ( ( rule__Conformant_array_schema__Alternatives ) )
            // InternalPascal.g:1892:3: ( rule__Conformant_array_schema__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConformant_array_schemaAccess().getAlternatives()); 
            }
            // InternalPascal.g:1893:3: ( rule__Conformant_array_schema__Alternatives )
            // InternalPascal.g:1893:4: rule__Conformant_array_schema__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Conformant_array_schema__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConformant_array_schemaAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconformant_array_schema"


    // $ANTLR start "entryRulepacked_conformant_array_schema"
    // InternalPascal.g:1902:1: entryRulepacked_conformant_array_schema : rulepacked_conformant_array_schema EOF ;
    public final void entryRulepacked_conformant_array_schema() throws RecognitionException {
        try {
            // InternalPascal.g:1903:1: ( rulepacked_conformant_array_schema EOF )
            // InternalPascal.g:1904:1: rulepacked_conformant_array_schema EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepacked_conformant_array_schema();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepacked_conformant_array_schema"


    // $ANTLR start "rulepacked_conformant_array_schema"
    // InternalPascal.g:1911:1: rulepacked_conformant_array_schema : ( ( rule__Packed_conformant_array_schema__Group__0 ) ) ;
    public final void rulepacked_conformant_array_schema() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1915:2: ( ( ( rule__Packed_conformant_array_schema__Group__0 ) ) )
            // InternalPascal.g:1916:2: ( ( rule__Packed_conformant_array_schema__Group__0 ) )
            {
            // InternalPascal.g:1916:2: ( ( rule__Packed_conformant_array_schema__Group__0 ) )
            // InternalPascal.g:1917:3: ( rule__Packed_conformant_array_schema__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getGroup()); 
            }
            // InternalPascal.g:1918:3: ( rule__Packed_conformant_array_schema__Group__0 )
            // InternalPascal.g:1918:4: rule__Packed_conformant_array_schema__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepacked_conformant_array_schema"


    // $ANTLR start "entryRulebound_specification"
    // InternalPascal.g:1927:1: entryRulebound_specification : rulebound_specification EOF ;
    public final void entryRulebound_specification() throws RecognitionException {
        try {
            // InternalPascal.g:1928:1: ( rulebound_specification EOF )
            // InternalPascal.g:1929:1: rulebound_specification EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationRule()); 
            }
            pushFollow(FOLLOW_1);
            rulebound_specification();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulebound_specification"


    // $ANTLR start "rulebound_specification"
    // InternalPascal.g:1936:1: rulebound_specification : ( ( rule__Bound_specification__Group__0 ) ) ;
    public final void rulebound_specification() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1940:2: ( ( ( rule__Bound_specification__Group__0 ) ) )
            // InternalPascal.g:1941:2: ( ( rule__Bound_specification__Group__0 ) )
            {
            // InternalPascal.g:1941:2: ( ( rule__Bound_specification__Group__0 ) )
            // InternalPascal.g:1942:3: ( rule__Bound_specification__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getGroup()); 
            }
            // InternalPascal.g:1943:3: ( rule__Bound_specification__Group__0 )
            // InternalPascal.g:1943:4: rule__Bound_specification__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Bound_specification__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulebound_specification"


    // $ANTLR start "entryRuleunpacked_conformant_array_schema"
    // InternalPascal.g:1952:1: entryRuleunpacked_conformant_array_schema : ruleunpacked_conformant_array_schema EOF ;
    public final void entryRuleunpacked_conformant_array_schema() throws RecognitionException {
        try {
            // InternalPascal.g:1953:1: ( ruleunpacked_conformant_array_schema EOF )
            // InternalPascal.g:1954:1: ruleunpacked_conformant_array_schema EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleunpacked_conformant_array_schema();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleunpacked_conformant_array_schema"


    // $ANTLR start "ruleunpacked_conformant_array_schema"
    // InternalPascal.g:1961:1: ruleunpacked_conformant_array_schema : ( ( rule__Unpacked_conformant_array_schema__Group__0 ) ) ;
    public final void ruleunpacked_conformant_array_schema() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1965:2: ( ( ( rule__Unpacked_conformant_array_schema__Group__0 ) ) )
            // InternalPascal.g:1966:2: ( ( rule__Unpacked_conformant_array_schema__Group__0 ) )
            {
            // InternalPascal.g:1966:2: ( ( rule__Unpacked_conformant_array_schema__Group__0 ) )
            // InternalPascal.g:1967:3: ( rule__Unpacked_conformant_array_schema__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup()); 
            }
            // InternalPascal.g:1968:3: ( rule__Unpacked_conformant_array_schema__Group__0 )
            // InternalPascal.g:1968:4: rule__Unpacked_conformant_array_schema__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleunpacked_conformant_array_schema"


    // $ANTLR start "entryRulevariable_parameter_section"
    // InternalPascal.g:1977:1: entryRulevariable_parameter_section : rulevariable_parameter_section EOF ;
    public final void entryRulevariable_parameter_section() throws RecognitionException {
        try {
            // InternalPascal.g:1978:1: ( rulevariable_parameter_section EOF )
            // InternalPascal.g:1979:1: rulevariable_parameter_section EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevariable_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevariable_parameter_section"


    // $ANTLR start "rulevariable_parameter_section"
    // InternalPascal.g:1986:1: rulevariable_parameter_section : ( ( rule__Variable_parameter_section__Group__0 ) ) ;
    public final void rulevariable_parameter_section() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:1990:2: ( ( ( rule__Variable_parameter_section__Group__0 ) ) )
            // InternalPascal.g:1991:2: ( ( rule__Variable_parameter_section__Group__0 ) )
            {
            // InternalPascal.g:1991:2: ( ( rule__Variable_parameter_section__Group__0 ) )
            // InternalPascal.g:1992:3: ( rule__Variable_parameter_section__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getGroup()); 
            }
            // InternalPascal.g:1993:3: ( rule__Variable_parameter_section__Group__0 )
            // InternalPascal.g:1993:4: rule__Variable_parameter_section__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevariable_parameter_section"


    // $ANTLR start "entryRulefunction_heading"
    // InternalPascal.g:2002:1: entryRulefunction_heading : rulefunction_heading EOF ;
    public final void entryRulefunction_heading() throws RecognitionException {
        try {
            // InternalPascal.g:2003:1: ( rulefunction_heading EOF )
            // InternalPascal.g:2004:1: rulefunction_heading EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunction_heading();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunction_heading"


    // $ANTLR start "rulefunction_heading"
    // InternalPascal.g:2011:1: rulefunction_heading : ( ( rule__Function_heading__Group__0 ) ) ;
    public final void rulefunction_heading() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2015:2: ( ( ( rule__Function_heading__Group__0 ) ) )
            // InternalPascal.g:2016:2: ( ( rule__Function_heading__Group__0 ) )
            {
            // InternalPascal.g:2016:2: ( ( rule__Function_heading__Group__0 ) )
            // InternalPascal.g:2017:3: ( rule__Function_heading__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getGroup()); 
            }
            // InternalPascal.g:2018:3: ( rule__Function_heading__Group__0 )
            // InternalPascal.g:2018:4: rule__Function_heading__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function_heading__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunction_heading"


    // $ANTLR start "entryRulefunction_declaration"
    // InternalPascal.g:2027:1: entryRulefunction_declaration : rulefunction_declaration EOF ;
    public final void entryRulefunction_declaration() throws RecognitionException {
        try {
            // InternalPascal.g:2028:1: ( rulefunction_declaration EOF )
            // InternalPascal.g:2029:1: rulefunction_declaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunction_declaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunction_declaration"


    // $ANTLR start "rulefunction_declaration"
    // InternalPascal.g:2036:1: rulefunction_declaration : ( ( rule__Function_declaration__Group__0 ) ) ;
    public final void rulefunction_declaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2040:2: ( ( ( rule__Function_declaration__Group__0 ) ) )
            // InternalPascal.g:2041:2: ( ( rule__Function_declaration__Group__0 ) )
            {
            // InternalPascal.g:2041:2: ( ( rule__Function_declaration__Group__0 ) )
            // InternalPascal.g:2042:3: ( rule__Function_declaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getGroup()); 
            }
            // InternalPascal.g:2043:3: ( rule__Function_declaration__Group__0 )
            // InternalPascal.g:2043:4: rule__Function_declaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function_declaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunction_declaration"


    // $ANTLR start "rule__Statement__Alternatives_1"
    // InternalPascal.g:2051:1: rule__Statement__Alternatives_1 : ( ( ( rule__Statement__SimpleAssignment_1_0 ) ) | ( ( rule__Statement__StructuredAssignment_1_1 ) ) );
    public final void rule__Statement__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2055:1: ( ( ( rule__Statement__SimpleAssignment_1_0 ) ) | ( ( rule__Statement__StructuredAssignment_1_1 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==EOF||LA4_0==RULE_ID||LA4_0==26||LA4_0==31||LA4_0==41||LA4_0==45||LA4_0==49) ) {
                alt4=1;
            }
            else if ( (LA4_0==30||LA4_0==38||LA4_0==40||(LA4_0>=42 && LA4_0<=43)||LA4_0==46||LA4_0==48) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalPascal.g:2056:2: ( ( rule__Statement__SimpleAssignment_1_0 ) )
                    {
                    // InternalPascal.g:2056:2: ( ( rule__Statement__SimpleAssignment_1_0 ) )
                    // InternalPascal.g:2057:3: ( rule__Statement__SimpleAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSimpleAssignment_1_0()); 
                    }
                    // InternalPascal.g:2058:3: ( rule__Statement__SimpleAssignment_1_0 )
                    // InternalPascal.g:2058:4: rule__Statement__SimpleAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__SimpleAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSimpleAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2062:2: ( ( rule__Statement__StructuredAssignment_1_1 ) )
                    {
                    // InternalPascal.g:2062:2: ( ( rule__Statement__StructuredAssignment_1_1 ) )
                    // InternalPascal.g:2063:3: ( rule__Statement__StructuredAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getStructuredAssignment_1_1()); 
                    }
                    // InternalPascal.g:2064:3: ( rule__Statement__StructuredAssignment_1_1 )
                    // InternalPascal.g:2064:4: rule__Statement__StructuredAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__StructuredAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getStructuredAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives_1"


    // $ANTLR start "rule__Label__Alternatives"
    // InternalPascal.g:2072:1: rule__Label__Alternatives : ( ( ( rule__Label__NumberAssignment_0 ) ) | ( ( rule__Label__NumberAssignment_1 ) ) );
    public final void rule__Label__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2076:1: ( ( ( rule__Label__NumberAssignment_0 ) ) | ( ( rule__Label__NumberAssignment_1 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_SIGNED_INTEGER_NUMBER) ) {
                alt5=1;
            }
            else if ( (LA5_0==RULE_INTEGER_NUMBER) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalPascal.g:2077:2: ( ( rule__Label__NumberAssignment_0 ) )
                    {
                    // InternalPascal.g:2077:2: ( ( rule__Label__NumberAssignment_0 ) )
                    // InternalPascal.g:2078:3: ( rule__Label__NumberAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLabelAccess().getNumberAssignment_0()); 
                    }
                    // InternalPascal.g:2079:3: ( rule__Label__NumberAssignment_0 )
                    // InternalPascal.g:2079:4: rule__Label__NumberAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Label__NumberAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLabelAccess().getNumberAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2083:2: ( ( rule__Label__NumberAssignment_1 ) )
                    {
                    // InternalPascal.g:2083:2: ( ( rule__Label__NumberAssignment_1 ) )
                    // InternalPascal.g:2084:3: ( rule__Label__NumberAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLabelAccess().getNumberAssignment_1()); 
                    }
                    // InternalPascal.g:2085:3: ( rule__Label__NumberAssignment_1 )
                    // InternalPascal.g:2085:4: rule__Label__NumberAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Label__NumberAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLabelAccess().getNumberAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Alternatives"


    // $ANTLR start "rule__Simple_statement__Alternatives"
    // InternalPascal.g:2093:1: rule__Simple_statement__Alternatives : ( ( ( rule__Simple_statement__AssignmentAssignment_0 ) ) | ( ( rule__Simple_statement__FunctionAssignment_1 ) ) | ( ( rule__Simple_statement__GotoAssignment_2 ) ) | ( ( rule__Simple_statement__Function_noargsAssignment_3 ) ) );
    public final void rule__Simple_statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2097:1: ( ( ( rule__Simple_statement__AssignmentAssignment_0 ) ) | ( ( rule__Simple_statement__FunctionAssignment_1 ) ) | ( ( rule__Simple_statement__GotoAssignment_2 ) ) | ( ( rule__Simple_statement__Function_noargsAssignment_3 ) ) )
            int alt6=4;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                switch ( input.LA(2) ) {
                case 24:
                case 33:
                case 34:
                case 36:
                    {
                    alt6=1;
                    }
                    break;
                case EOF:
                case 26:
                case 31:
                case 41:
                case 45:
                    {
                    alt6=4;
                    }
                    break;
                case 27:
                    {
                    alt6=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA6_0==49) ) {
                alt6=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalPascal.g:2098:2: ( ( rule__Simple_statement__AssignmentAssignment_0 ) )
                    {
                    // InternalPascal.g:2098:2: ( ( rule__Simple_statement__AssignmentAssignment_0 ) )
                    // InternalPascal.g:2099:3: ( rule__Simple_statement__AssignmentAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); 
                    }
                    // InternalPascal.g:2100:3: ( rule__Simple_statement__AssignmentAssignment_0 )
                    // InternalPascal.g:2100:4: rule__Simple_statement__AssignmentAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_statement__AssignmentAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2104:2: ( ( rule__Simple_statement__FunctionAssignment_1 ) )
                    {
                    // InternalPascal.g:2104:2: ( ( rule__Simple_statement__FunctionAssignment_1 ) )
                    // InternalPascal.g:2105:3: ( rule__Simple_statement__FunctionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_statementAccess().getFunctionAssignment_1()); 
                    }
                    // InternalPascal.g:2106:3: ( rule__Simple_statement__FunctionAssignment_1 )
                    // InternalPascal.g:2106:4: rule__Simple_statement__FunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_statement__FunctionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_statementAccess().getFunctionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2110:2: ( ( rule__Simple_statement__GotoAssignment_2 ) )
                    {
                    // InternalPascal.g:2110:2: ( ( rule__Simple_statement__GotoAssignment_2 ) )
                    // InternalPascal.g:2111:3: ( rule__Simple_statement__GotoAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_statementAccess().getGotoAssignment_2()); 
                    }
                    // InternalPascal.g:2112:3: ( rule__Simple_statement__GotoAssignment_2 )
                    // InternalPascal.g:2112:4: rule__Simple_statement__GotoAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_statement__GotoAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_statementAccess().getGotoAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2116:2: ( ( rule__Simple_statement__Function_noargsAssignment_3 ) )
                    {
                    // InternalPascal.g:2116:2: ( ( rule__Simple_statement__Function_noargsAssignment_3 ) )
                    // InternalPascal.g:2117:3: ( rule__Simple_statement__Function_noargsAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_statementAccess().getFunction_noargsAssignment_3()); 
                    }
                    // InternalPascal.g:2118:3: ( rule__Simple_statement__Function_noargsAssignment_3 )
                    // InternalPascal.g:2118:4: rule__Simple_statement__Function_noargsAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_statement__Function_noargsAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_statementAccess().getFunction_noargsAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_statement__Alternatives"


    // $ANTLR start "rule__Var___Alternatives"
    // InternalPascal.g:2126:1: rule__Var___Alternatives : ( ( ( rule__Var___Group_0__0 ) ) | ( ( rule__Var___Group_1__0 ) ) | ( ( rule__Var___Group_2__0 ) ) );
    public final void rule__Var___Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2130:1: ( ( ( rule__Var___Group_0__0 ) ) | ( ( rule__Var___Group_1__0 ) ) | ( ( rule__Var___Group_2__0 ) ) )
            int alt7=3;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt7=1;
                }
                break;
            case 24:
                {
                alt7=2;
                }
                break;
            case 36:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalPascal.g:2131:2: ( ( rule__Var___Group_0__0 ) )
                    {
                    // InternalPascal.g:2131:2: ( ( rule__Var___Group_0__0 ) )
                    // InternalPascal.g:2132:3: ( rule__Var___Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVar_Access().getGroup_0()); 
                    }
                    // InternalPascal.g:2133:3: ( rule__Var___Group_0__0 )
                    // InternalPascal.g:2133:4: rule__Var___Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Var___Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVar_Access().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2137:2: ( ( rule__Var___Group_1__0 ) )
                    {
                    // InternalPascal.g:2137:2: ( ( rule__Var___Group_1__0 ) )
                    // InternalPascal.g:2138:3: ( rule__Var___Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVar_Access().getGroup_1()); 
                    }
                    // InternalPascal.g:2139:3: ( rule__Var___Group_1__0 )
                    // InternalPascal.g:2139:4: rule__Var___Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Var___Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVar_Access().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2143:2: ( ( rule__Var___Group_2__0 ) )
                    {
                    // InternalPascal.g:2143:2: ( ( rule__Var___Group_2__0 ) )
                    // InternalPascal.g:2144:3: ( rule__Var___Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVar_Access().getGroup_2()); 
                    }
                    // InternalPascal.g:2145:3: ( rule__Var___Group_2__0 )
                    // InternalPascal.g:2145:4: rule__Var___Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Var___Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVar_Access().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Alternatives"


    // $ANTLR start "rule__Expression__Alternatives_1_0"
    // InternalPascal.g:2153:1: rule__Expression__Alternatives_1_0 : ( ( ( rule__Expression__OperatorsAssignment_1_0_0 ) ) | ( ( rule__Expression__OperatorsAssignment_1_0_1 ) ) | ( ( rule__Expression__OperatorsAssignment_1_0_2 ) ) );
    public final void rule__Expression__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2157:1: ( ( ( rule__Expression__OperatorsAssignment_1_0_0 ) ) | ( ( rule__Expression__OperatorsAssignment_1_0_1 ) ) | ( ( rule__Expression__OperatorsAssignment_1_0_2 ) ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case RULE_RELATIONAL_OPERATOR:
                {
                alt8=1;
                }
                break;
            case 62:
                {
                alt8=2;
                }
                break;
            case 52:
                {
                alt8=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalPascal.g:2158:2: ( ( rule__Expression__OperatorsAssignment_1_0_0 ) )
                    {
                    // InternalPascal.g:2158:2: ( ( rule__Expression__OperatorsAssignment_1_0_0 ) )
                    // InternalPascal.g:2159:3: ( rule__Expression__OperatorsAssignment_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_0()); 
                    }
                    // InternalPascal.g:2160:3: ( rule__Expression__OperatorsAssignment_1_0_0 )
                    // InternalPascal.g:2160:4: rule__Expression__OperatorsAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__OperatorsAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2164:2: ( ( rule__Expression__OperatorsAssignment_1_0_1 ) )
                    {
                    // InternalPascal.g:2164:2: ( ( rule__Expression__OperatorsAssignment_1_0_1 ) )
                    // InternalPascal.g:2165:3: ( rule__Expression__OperatorsAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_1()); 
                    }
                    // InternalPascal.g:2166:3: ( rule__Expression__OperatorsAssignment_1_0_1 )
                    // InternalPascal.g:2166:4: rule__Expression__OperatorsAssignment_1_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__OperatorsAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2170:2: ( ( rule__Expression__OperatorsAssignment_1_0_2 ) )
                    {
                    // InternalPascal.g:2170:2: ( ( rule__Expression__OperatorsAssignment_1_0_2 ) )
                    // InternalPascal.g:2171:3: ( rule__Expression__OperatorsAssignment_1_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_2()); 
                    }
                    // InternalPascal.g:2172:3: ( rule__Expression__OperatorsAssignment_1_0_2 )
                    // InternalPascal.g:2172:4: rule__Expression__OperatorsAssignment_1_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__OperatorsAssignment_1_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1_0"


    // $ANTLR start "rule__Simple_expression__Alternatives_2"
    // InternalPascal.g:2180:1: rule__Simple_expression__Alternatives_2 : ( ( ( rule__Simple_expression__Group_2_0__0 ) ) | ( ( rule__Simple_expression__TermsAssignment_2_1 ) ) );
    public final void rule__Simple_expression__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2184:1: ( ( ( rule__Simple_expression__Group_2_0__0 ) ) | ( ( rule__Simple_expression__TermsAssignment_2_1 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ADDITION_OPERATOR||LA9_0==63) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_INTEGER_NUMBER||LA9_0==RULE_REAL_NUMBER) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalPascal.g:2185:2: ( ( rule__Simple_expression__Group_2_0__0 ) )
                    {
                    // InternalPascal.g:2185:2: ( ( rule__Simple_expression__Group_2_0__0 ) )
                    // InternalPascal.g:2186:3: ( rule__Simple_expression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_expressionAccess().getGroup_2_0()); 
                    }
                    // InternalPascal.g:2187:3: ( rule__Simple_expression__Group_2_0__0 )
                    // InternalPascal.g:2187:4: rule__Simple_expression__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_expression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_expressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2191:2: ( ( rule__Simple_expression__TermsAssignment_2_1 ) )
                    {
                    // InternalPascal.g:2191:2: ( ( rule__Simple_expression__TermsAssignment_2_1 ) )
                    // InternalPascal.g:2192:3: ( rule__Simple_expression__TermsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_1()); 
                    }
                    // InternalPascal.g:2193:3: ( rule__Simple_expression__TermsAssignment_2_1 )
                    // InternalPascal.g:2193:4: rule__Simple_expression__TermsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_expression__TermsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Alternatives_2"


    // $ANTLR start "rule__Simple_expression__Alternatives_2_0_0"
    // InternalPascal.g:2201:1: rule__Simple_expression__Alternatives_2_0_0 : ( ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_0 ) ) | ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_1 ) ) );
    public final void rule__Simple_expression__Alternatives_2_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2205:1: ( ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_0 ) ) | ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ADDITION_OPERATOR) ) {
                alt10=1;
            }
            else if ( (LA10_0==63) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalPascal.g:2206:2: ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_0 ) )
                    {
                    // InternalPascal.g:2206:2: ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_0 ) )
                    // InternalPascal.g:2207:3: ( rule__Simple_expression__OperatorsAssignment_2_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_0()); 
                    }
                    // InternalPascal.g:2208:3: ( rule__Simple_expression__OperatorsAssignment_2_0_0_0 )
                    // InternalPascal.g:2208:4: rule__Simple_expression__OperatorsAssignment_2_0_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_expression__OperatorsAssignment_2_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2212:2: ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_1 ) )
                    {
                    // InternalPascal.g:2212:2: ( ( rule__Simple_expression__OperatorsAssignment_2_0_0_1 ) )
                    // InternalPascal.g:2213:3: ( rule__Simple_expression__OperatorsAssignment_2_0_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_1()); 
                    }
                    // InternalPascal.g:2214:3: ( rule__Simple_expression__OperatorsAssignment_2_0_0_1 )
                    // InternalPascal.g:2214:4: rule__Simple_expression__OperatorsAssignment_2_0_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_expression__OperatorsAssignment_2_0_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Alternatives_2_0_0"


    // $ANTLR start "rule__Term__Alternatives_1_0"
    // InternalPascal.g:2222:1: rule__Term__Alternatives_1_0 : ( ( ( rule__Term__OperatorsAssignment_1_0_0 ) ) | ( ( rule__Term__OperatorsAssignment_1_0_1 ) ) | ( ( rule__Term__OperatorsAssignment_1_0_2 ) ) | ( ( rule__Term__OperatorsAssignment_1_0_3 ) ) );
    public final void rule__Term__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2226:1: ( ( ( rule__Term__OperatorsAssignment_1_0_0 ) ) | ( ( rule__Term__OperatorsAssignment_1_0_1 ) ) | ( ( rule__Term__OperatorsAssignment_1_0_2 ) ) | ( ( rule__Term__OperatorsAssignment_1_0_3 ) ) )
            int alt11=4;
            switch ( input.LA(1) ) {
            case RULE_MULTIPLICATION_OPERATOR:
                {
                alt11=1;
                }
                break;
            case 64:
                {
                alt11=2;
                }
                break;
            case 65:
                {
                alt11=3;
                }
                break;
            case 66:
                {
                alt11=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalPascal.g:2227:2: ( ( rule__Term__OperatorsAssignment_1_0_0 ) )
                    {
                    // InternalPascal.g:2227:2: ( ( rule__Term__OperatorsAssignment_1_0_0 ) )
                    // InternalPascal.g:2228:3: ( rule__Term__OperatorsAssignment_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_0()); 
                    }
                    // InternalPascal.g:2229:3: ( rule__Term__OperatorsAssignment_1_0_0 )
                    // InternalPascal.g:2229:4: rule__Term__OperatorsAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Term__OperatorsAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2233:2: ( ( rule__Term__OperatorsAssignment_1_0_1 ) )
                    {
                    // InternalPascal.g:2233:2: ( ( rule__Term__OperatorsAssignment_1_0_1 ) )
                    // InternalPascal.g:2234:3: ( rule__Term__OperatorsAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_1()); 
                    }
                    // InternalPascal.g:2235:3: ( rule__Term__OperatorsAssignment_1_0_1 )
                    // InternalPascal.g:2235:4: rule__Term__OperatorsAssignment_1_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Term__OperatorsAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2239:2: ( ( rule__Term__OperatorsAssignment_1_0_2 ) )
                    {
                    // InternalPascal.g:2239:2: ( ( rule__Term__OperatorsAssignment_1_0_2 ) )
                    // InternalPascal.g:2240:3: ( rule__Term__OperatorsAssignment_1_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_2()); 
                    }
                    // InternalPascal.g:2241:3: ( rule__Term__OperatorsAssignment_1_0_2 )
                    // InternalPascal.g:2241:4: rule__Term__OperatorsAssignment_1_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Term__OperatorsAssignment_1_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2245:2: ( ( rule__Term__OperatorsAssignment_1_0_3 ) )
                    {
                    // InternalPascal.g:2245:2: ( ( rule__Term__OperatorsAssignment_1_0_3 ) )
                    // InternalPascal.g:2246:3: ( rule__Term__OperatorsAssignment_1_0_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_3()); 
                    }
                    // InternalPascal.g:2247:3: ( rule__Term__OperatorsAssignment_1_0_3 )
                    // InternalPascal.g:2247:4: rule__Term__OperatorsAssignment_1_0_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Term__OperatorsAssignment_1_0_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Alternatives_1_0"


    // $ANTLR start "rule__Factor__Alternatives"
    // InternalPascal.g:2255:1: rule__Factor__Alternatives : ( ( ( rule__Factor__VariableAssignment_0 ) ) | ( ( rule__Factor__NumberAssignment_1 ) ) | ( ( rule__Factor__StringAssignment_2 ) ) | ( ( rule__Factor__SetAssignment_3 ) ) | ( ( rule__Factor__NilAssignment_4 ) ) | ( ( rule__Factor__BooleanAssignment_5 ) ) | ( ( rule__Factor__BooleanAssignment_6 ) ) | ( ( rule__Factor__FunctionAssignment_7 ) ) | ( ( rule__Factor__Group_8__0 ) ) | ( ( rule__Factor__Group_9__0 ) ) );
    public final void rule__Factor__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2259:1: ( ( ( rule__Factor__VariableAssignment_0 ) ) | ( ( rule__Factor__NumberAssignment_1 ) ) | ( ( rule__Factor__StringAssignment_2 ) ) | ( ( rule__Factor__SetAssignment_3 ) ) | ( ( rule__Factor__NilAssignment_4 ) ) | ( ( rule__Factor__BooleanAssignment_5 ) ) | ( ( rule__Factor__BooleanAssignment_6 ) ) | ( ( rule__Factor__FunctionAssignment_7 ) ) | ( ( rule__Factor__Group_8__0 ) ) | ( ( rule__Factor__Group_9__0 ) ) )
            int alt12=10;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalPascal.g:2260:2: ( ( rule__Factor__VariableAssignment_0 ) )
                    {
                    // InternalPascal.g:2260:2: ( ( rule__Factor__VariableAssignment_0 ) )
                    // InternalPascal.g:2261:3: ( rule__Factor__VariableAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getVariableAssignment_0()); 
                    }
                    // InternalPascal.g:2262:3: ( rule__Factor__VariableAssignment_0 )
                    // InternalPascal.g:2262:4: rule__Factor__VariableAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__VariableAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getVariableAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2266:2: ( ( rule__Factor__NumberAssignment_1 ) )
                    {
                    // InternalPascal.g:2266:2: ( ( rule__Factor__NumberAssignment_1 ) )
                    // InternalPascal.g:2267:3: ( rule__Factor__NumberAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getNumberAssignment_1()); 
                    }
                    // InternalPascal.g:2268:3: ( rule__Factor__NumberAssignment_1 )
                    // InternalPascal.g:2268:4: rule__Factor__NumberAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__NumberAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getNumberAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2272:2: ( ( rule__Factor__StringAssignment_2 ) )
                    {
                    // InternalPascal.g:2272:2: ( ( rule__Factor__StringAssignment_2 ) )
                    // InternalPascal.g:2273:3: ( rule__Factor__StringAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getStringAssignment_2()); 
                    }
                    // InternalPascal.g:2274:3: ( rule__Factor__StringAssignment_2 )
                    // InternalPascal.g:2274:4: rule__Factor__StringAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__StringAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getStringAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2278:2: ( ( rule__Factor__SetAssignment_3 ) )
                    {
                    // InternalPascal.g:2278:2: ( ( rule__Factor__SetAssignment_3 ) )
                    // InternalPascal.g:2279:3: ( rule__Factor__SetAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getSetAssignment_3()); 
                    }
                    // InternalPascal.g:2280:3: ( rule__Factor__SetAssignment_3 )
                    // InternalPascal.g:2280:4: rule__Factor__SetAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__SetAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getSetAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalPascal.g:2284:2: ( ( rule__Factor__NilAssignment_4 ) )
                    {
                    // InternalPascal.g:2284:2: ( ( rule__Factor__NilAssignment_4 ) )
                    // InternalPascal.g:2285:3: ( rule__Factor__NilAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getNilAssignment_4()); 
                    }
                    // InternalPascal.g:2286:3: ( rule__Factor__NilAssignment_4 )
                    // InternalPascal.g:2286:4: rule__Factor__NilAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__NilAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getNilAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalPascal.g:2290:2: ( ( rule__Factor__BooleanAssignment_5 ) )
                    {
                    // InternalPascal.g:2290:2: ( ( rule__Factor__BooleanAssignment_5 ) )
                    // InternalPascal.g:2291:3: ( rule__Factor__BooleanAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getBooleanAssignment_5()); 
                    }
                    // InternalPascal.g:2292:3: ( rule__Factor__BooleanAssignment_5 )
                    // InternalPascal.g:2292:4: rule__Factor__BooleanAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__BooleanAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getBooleanAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalPascal.g:2296:2: ( ( rule__Factor__BooleanAssignment_6 ) )
                    {
                    // InternalPascal.g:2296:2: ( ( rule__Factor__BooleanAssignment_6 ) )
                    // InternalPascal.g:2297:3: ( rule__Factor__BooleanAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getBooleanAssignment_6()); 
                    }
                    // InternalPascal.g:2298:3: ( rule__Factor__BooleanAssignment_6 )
                    // InternalPascal.g:2298:4: rule__Factor__BooleanAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__BooleanAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getBooleanAssignment_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalPascal.g:2302:2: ( ( rule__Factor__FunctionAssignment_7 ) )
                    {
                    // InternalPascal.g:2302:2: ( ( rule__Factor__FunctionAssignment_7 ) )
                    // InternalPascal.g:2303:3: ( rule__Factor__FunctionAssignment_7 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getFunctionAssignment_7()); 
                    }
                    // InternalPascal.g:2304:3: ( rule__Factor__FunctionAssignment_7 )
                    // InternalPascal.g:2304:4: rule__Factor__FunctionAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__FunctionAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getFunctionAssignment_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalPascal.g:2308:2: ( ( rule__Factor__Group_8__0 ) )
                    {
                    // InternalPascal.g:2308:2: ( ( rule__Factor__Group_8__0 ) )
                    // InternalPascal.g:2309:3: ( rule__Factor__Group_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getGroup_8()); 
                    }
                    // InternalPascal.g:2310:3: ( rule__Factor__Group_8__0 )
                    // InternalPascal.g:2310:4: rule__Factor__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getGroup_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalPascal.g:2314:2: ( ( rule__Factor__Group_9__0 ) )
                    {
                    // InternalPascal.g:2314:2: ( ( rule__Factor__Group_9__0 ) )
                    // InternalPascal.g:2315:3: ( rule__Factor__Group_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFactorAccess().getGroup_9()); 
                    }
                    // InternalPascal.g:2316:3: ( rule__Factor__Group_9__0 )
                    // InternalPascal.g:2316:4: rule__Factor__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Factor__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFactorAccess().getGroup_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Alternatives"


    // $ANTLR start "rule__Any_number__Alternatives"
    // InternalPascal.g:2324:1: rule__Any_number__Alternatives : ( ( ruleunsigned_number ) | ( rulesigned_number ) );
    public final void rule__Any_number__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2328:1: ( ( ruleunsigned_number ) | ( rulesigned_number ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_INTEGER_NUMBER||LA13_0==RULE_REAL_NUMBER) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_SIGNED_INTEGER_NUMBER||LA13_0==RULE_SIGNED_REAL_NUMBER) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalPascal.g:2329:2: ( ruleunsigned_number )
                    {
                    // InternalPascal.g:2329:2: ( ruleunsigned_number )
                    // InternalPascal.g:2330:3: ruleunsigned_number
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAny_numberAccess().getUnsigned_numberParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleunsigned_number();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAny_numberAccess().getUnsigned_numberParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2335:2: ( rulesigned_number )
                    {
                    // InternalPascal.g:2335:2: ( rulesigned_number )
                    // InternalPascal.g:2336:3: rulesigned_number
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAny_numberAccess().getSigned_numberParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulesigned_number();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAny_numberAccess().getSigned_numberParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any_number__Alternatives"


    // $ANTLR start "rule__Unsigned_number__Alternatives"
    // InternalPascal.g:2345:1: rule__Unsigned_number__Alternatives : ( ( ( rule__Unsigned_number__IntegerAssignment_0 ) ) | ( ( rule__Unsigned_number__RealAssignment_1 ) ) );
    public final void rule__Unsigned_number__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2349:1: ( ( ( rule__Unsigned_number__IntegerAssignment_0 ) ) | ( ( rule__Unsigned_number__RealAssignment_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_INTEGER_NUMBER) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_REAL_NUMBER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalPascal.g:2350:2: ( ( rule__Unsigned_number__IntegerAssignment_0 ) )
                    {
                    // InternalPascal.g:2350:2: ( ( rule__Unsigned_number__IntegerAssignment_0 ) )
                    // InternalPascal.g:2351:3: ( rule__Unsigned_number__IntegerAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnsigned_numberAccess().getIntegerAssignment_0()); 
                    }
                    // InternalPascal.g:2352:3: ( rule__Unsigned_number__IntegerAssignment_0 )
                    // InternalPascal.g:2352:4: rule__Unsigned_number__IntegerAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unsigned_number__IntegerAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnsigned_numberAccess().getIntegerAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2356:2: ( ( rule__Unsigned_number__RealAssignment_1 ) )
                    {
                    // InternalPascal.g:2356:2: ( ( rule__Unsigned_number__RealAssignment_1 ) )
                    // InternalPascal.g:2357:3: ( rule__Unsigned_number__RealAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnsigned_numberAccess().getRealAssignment_1()); 
                    }
                    // InternalPascal.g:2358:3: ( rule__Unsigned_number__RealAssignment_1 )
                    // InternalPascal.g:2358:4: rule__Unsigned_number__RealAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unsigned_number__RealAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnsigned_numberAccess().getRealAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unsigned_number__Alternatives"


    // $ANTLR start "rule__Signed_number__Alternatives"
    // InternalPascal.g:2366:1: rule__Signed_number__Alternatives : ( ( ( rule__Signed_number__IntegerAssignment_0 ) ) | ( ( rule__Signed_number__RealAssignment_1 ) ) );
    public final void rule__Signed_number__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2370:1: ( ( ( rule__Signed_number__IntegerAssignment_0 ) ) | ( ( rule__Signed_number__RealAssignment_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_SIGNED_INTEGER_NUMBER) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_SIGNED_REAL_NUMBER) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalPascal.g:2371:2: ( ( rule__Signed_number__IntegerAssignment_0 ) )
                    {
                    // InternalPascal.g:2371:2: ( ( rule__Signed_number__IntegerAssignment_0 ) )
                    // InternalPascal.g:2372:3: ( rule__Signed_number__IntegerAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSigned_numberAccess().getIntegerAssignment_0()); 
                    }
                    // InternalPascal.g:2373:3: ( rule__Signed_number__IntegerAssignment_0 )
                    // InternalPascal.g:2373:4: rule__Signed_number__IntegerAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Signed_number__IntegerAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSigned_numberAccess().getIntegerAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2377:2: ( ( rule__Signed_number__RealAssignment_1 ) )
                    {
                    // InternalPascal.g:2377:2: ( ( rule__Signed_number__RealAssignment_1 ) )
                    // InternalPascal.g:2378:3: ( rule__Signed_number__RealAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSigned_numberAccess().getRealAssignment_1()); 
                    }
                    // InternalPascal.g:2379:3: ( rule__Signed_number__RealAssignment_1 )
                    // InternalPascal.g:2379:4: rule__Signed_number__RealAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Signed_number__RealAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSigned_numberAccess().getRealAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signed_number__Alternatives"


    // $ANTLR start "rule__Structured_statement__Alternatives"
    // InternalPascal.g:2387:1: rule__Structured_statement__Alternatives : ( ( ( rule__Structured_statement__CompoundAssignment_0 ) ) | ( ( rule__Structured_statement__RepetitiveAssignment_1 ) ) | ( ( rule__Structured_statement__ConditionalAssignment_2 ) ) | ( ( rule__Structured_statement__WithStmtAssignment_3 ) ) );
    public final void rule__Structured_statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2391:1: ( ( ( rule__Structured_statement__CompoundAssignment_0 ) ) | ( ( rule__Structured_statement__RepetitiveAssignment_1 ) ) | ( ( rule__Structured_statement__ConditionalAssignment_2 ) ) | ( ( rule__Structured_statement__WithStmtAssignment_3 ) ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt16=1;
                }
                break;
            case 38:
            case 40:
            case 42:
                {
                alt16=2;
                }
                break;
            case 43:
            case 46:
                {
                alt16=3;
                }
                break;
            case 48:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalPascal.g:2392:2: ( ( rule__Structured_statement__CompoundAssignment_0 ) )
                    {
                    // InternalPascal.g:2392:2: ( ( rule__Structured_statement__CompoundAssignment_0 ) )
                    // InternalPascal.g:2393:3: ( rule__Structured_statement__CompoundAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStructured_statementAccess().getCompoundAssignment_0()); 
                    }
                    // InternalPascal.g:2394:3: ( rule__Structured_statement__CompoundAssignment_0 )
                    // InternalPascal.g:2394:4: rule__Structured_statement__CompoundAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Structured_statement__CompoundAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStructured_statementAccess().getCompoundAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2398:2: ( ( rule__Structured_statement__RepetitiveAssignment_1 ) )
                    {
                    // InternalPascal.g:2398:2: ( ( rule__Structured_statement__RepetitiveAssignment_1 ) )
                    // InternalPascal.g:2399:3: ( rule__Structured_statement__RepetitiveAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStructured_statementAccess().getRepetitiveAssignment_1()); 
                    }
                    // InternalPascal.g:2400:3: ( rule__Structured_statement__RepetitiveAssignment_1 )
                    // InternalPascal.g:2400:4: rule__Structured_statement__RepetitiveAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Structured_statement__RepetitiveAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStructured_statementAccess().getRepetitiveAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2404:2: ( ( rule__Structured_statement__ConditionalAssignment_2 ) )
                    {
                    // InternalPascal.g:2404:2: ( ( rule__Structured_statement__ConditionalAssignment_2 ) )
                    // InternalPascal.g:2405:3: ( rule__Structured_statement__ConditionalAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStructured_statementAccess().getConditionalAssignment_2()); 
                    }
                    // InternalPascal.g:2406:3: ( rule__Structured_statement__ConditionalAssignment_2 )
                    // InternalPascal.g:2406:4: rule__Structured_statement__ConditionalAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Structured_statement__ConditionalAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStructured_statementAccess().getConditionalAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2410:2: ( ( rule__Structured_statement__WithStmtAssignment_3 ) )
                    {
                    // InternalPascal.g:2410:2: ( ( rule__Structured_statement__WithStmtAssignment_3 ) )
                    // InternalPascal.g:2411:3: ( rule__Structured_statement__WithStmtAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStructured_statementAccess().getWithStmtAssignment_3()); 
                    }
                    // InternalPascal.g:2412:3: ( rule__Structured_statement__WithStmtAssignment_3 )
                    // InternalPascal.g:2412:4: rule__Structured_statement__WithStmtAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Structured_statement__WithStmtAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStructured_statementAccess().getWithStmtAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_statement__Alternatives"


    // $ANTLR start "rule__Repetitive_statement__Alternatives"
    // InternalPascal.g:2420:1: rule__Repetitive_statement__Alternatives : ( ( ( rule__Repetitive_statement__WhileStmtAssignment_0 ) ) | ( ( rule__Repetitive_statement__RepeatStmtAssignment_1 ) ) | ( ( rule__Repetitive_statement__ForStmtAssignment_2 ) ) );
    public final void rule__Repetitive_statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2424:1: ( ( ( rule__Repetitive_statement__WhileStmtAssignment_0 ) ) | ( ( rule__Repetitive_statement__RepeatStmtAssignment_1 ) ) | ( ( rule__Repetitive_statement__ForStmtAssignment_2 ) ) )
            int alt17=3;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt17=1;
                }
                break;
            case 40:
                {
                alt17=2;
                }
                break;
            case 42:
                {
                alt17=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalPascal.g:2425:2: ( ( rule__Repetitive_statement__WhileStmtAssignment_0 ) )
                    {
                    // InternalPascal.g:2425:2: ( ( rule__Repetitive_statement__WhileStmtAssignment_0 ) )
                    // InternalPascal.g:2426:3: ( rule__Repetitive_statement__WhileStmtAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRepetitive_statementAccess().getWhileStmtAssignment_0()); 
                    }
                    // InternalPascal.g:2427:3: ( rule__Repetitive_statement__WhileStmtAssignment_0 )
                    // InternalPascal.g:2427:4: rule__Repetitive_statement__WhileStmtAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Repetitive_statement__WhileStmtAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRepetitive_statementAccess().getWhileStmtAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2431:2: ( ( rule__Repetitive_statement__RepeatStmtAssignment_1 ) )
                    {
                    // InternalPascal.g:2431:2: ( ( rule__Repetitive_statement__RepeatStmtAssignment_1 ) )
                    // InternalPascal.g:2432:3: ( rule__Repetitive_statement__RepeatStmtAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRepetitive_statementAccess().getRepeatStmtAssignment_1()); 
                    }
                    // InternalPascal.g:2433:3: ( rule__Repetitive_statement__RepeatStmtAssignment_1 )
                    // InternalPascal.g:2433:4: rule__Repetitive_statement__RepeatStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Repetitive_statement__RepeatStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRepetitive_statementAccess().getRepeatStmtAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2437:2: ( ( rule__Repetitive_statement__ForStmtAssignment_2 ) )
                    {
                    // InternalPascal.g:2437:2: ( ( rule__Repetitive_statement__ForStmtAssignment_2 ) )
                    // InternalPascal.g:2438:3: ( rule__Repetitive_statement__ForStmtAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRepetitive_statementAccess().getForStmtAssignment_2()); 
                    }
                    // InternalPascal.g:2439:3: ( rule__Repetitive_statement__ForStmtAssignment_2 )
                    // InternalPascal.g:2439:4: rule__Repetitive_statement__ForStmtAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Repetitive_statement__ForStmtAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRepetitive_statementAccess().getForStmtAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repetitive_statement__Alternatives"


    // $ANTLR start "rule__For_statement__Alternatives_2"
    // InternalPascal.g:2447:1: rule__For_statement__Alternatives_2 : ( ( 'to' ) | ( 'downto' ) );
    public final void rule__For_statement__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2451:1: ( ( 'to' ) | ( 'downto' ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==22) ) {
                alt18=1;
            }
            else if ( (LA18_0==23) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalPascal.g:2452:2: ( 'to' )
                    {
                    // InternalPascal.g:2452:2: ( 'to' )
                    // InternalPascal.g:2453:3: 'to'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFor_statementAccess().getToKeyword_2_0()); 
                    }
                    match(input,22,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFor_statementAccess().getToKeyword_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2458:2: ( 'downto' )
                    {
                    // InternalPascal.g:2458:2: ( 'downto' )
                    // InternalPascal.g:2459:3: 'downto'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFor_statementAccess().getDowntoKeyword_2_1()); 
                    }
                    match(input,23,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFor_statementAccess().getDowntoKeyword_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Alternatives_2"


    // $ANTLR start "rule__Conditional_statement__Alternatives"
    // InternalPascal.g:2468:1: rule__Conditional_statement__Alternatives : ( ( ( rule__Conditional_statement__IfStmtAssignment_0 ) ) | ( ( rule__Conditional_statement__CaseStmtAssignment_1 ) ) );
    public final void rule__Conditional_statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2472:1: ( ( ( rule__Conditional_statement__IfStmtAssignment_0 ) ) | ( ( rule__Conditional_statement__CaseStmtAssignment_1 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==43) ) {
                alt19=1;
            }
            else if ( (LA19_0==46) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalPascal.g:2473:2: ( ( rule__Conditional_statement__IfStmtAssignment_0 ) )
                    {
                    // InternalPascal.g:2473:2: ( ( rule__Conditional_statement__IfStmtAssignment_0 ) )
                    // InternalPascal.g:2474:3: ( rule__Conditional_statement__IfStmtAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConditional_statementAccess().getIfStmtAssignment_0()); 
                    }
                    // InternalPascal.g:2475:3: ( rule__Conditional_statement__IfStmtAssignment_0 )
                    // InternalPascal.g:2475:4: rule__Conditional_statement__IfStmtAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Conditional_statement__IfStmtAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConditional_statementAccess().getIfStmtAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2479:2: ( ( rule__Conditional_statement__CaseStmtAssignment_1 ) )
                    {
                    // InternalPascal.g:2479:2: ( ( rule__Conditional_statement__CaseStmtAssignment_1 ) )
                    // InternalPascal.g:2480:3: ( rule__Conditional_statement__CaseStmtAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConditional_statementAccess().getCaseStmtAssignment_1()); 
                    }
                    // InternalPascal.g:2481:3: ( rule__Conditional_statement__CaseStmtAssignment_1 )
                    // InternalPascal.g:2481:4: rule__Conditional_statement__CaseStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Conditional_statement__CaseStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConditional_statementAccess().getCaseStmtAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conditional_statement__Alternatives"


    // $ANTLR start "rule__Constant__Alternatives"
    // InternalPascal.g:2489:1: rule__Constant__Alternatives : ( ( ( rule__Constant__Group_0__0 ) ) | ( ( rule__Constant__StringAssignment_1 ) ) | ( ( rule__Constant__BoolLiteralAssignment_2 ) ) | ( ( rule__Constant__BoolLiteralAssignment_3 ) ) | ( ( rule__Constant__NilAssignment_4 ) ) );
    public final void rule__Constant__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2493:1: ( ( ( rule__Constant__Group_0__0 ) ) | ( ( rule__Constant__StringAssignment_1 ) ) | ( ( rule__Constant__BoolLiteralAssignment_2 ) ) | ( ( rule__Constant__BoolLiteralAssignment_3 ) ) | ( ( rule__Constant__NilAssignment_4 ) ) )
            int alt20=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_SIGNED_INTEGER_NUMBER:
            case RULE_INTEGER_NUMBER:
            case RULE_ADDITION_OPERATOR:
            case RULE_REAL_NUMBER:
            case RULE_SIGNED_REAL_NUMBER:
                {
                alt20=1;
                }
                break;
            case RULE_STRING:
                {
                alt20=2;
                }
                break;
            case 68:
                {
                alt20=3;
                }
                break;
            case 69:
                {
                alt20=4;
                }
                break;
            case 67:
                {
                alt20=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalPascal.g:2494:2: ( ( rule__Constant__Group_0__0 ) )
                    {
                    // InternalPascal.g:2494:2: ( ( rule__Constant__Group_0__0 ) )
                    // InternalPascal.g:2495:3: ( rule__Constant__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getGroup_0()); 
                    }
                    // InternalPascal.g:2496:3: ( rule__Constant__Group_0__0 )
                    // InternalPascal.g:2496:4: rule__Constant__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2500:2: ( ( rule__Constant__StringAssignment_1 ) )
                    {
                    // InternalPascal.g:2500:2: ( ( rule__Constant__StringAssignment_1 ) )
                    // InternalPascal.g:2501:3: ( rule__Constant__StringAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getStringAssignment_1()); 
                    }
                    // InternalPascal.g:2502:3: ( rule__Constant__StringAssignment_1 )
                    // InternalPascal.g:2502:4: rule__Constant__StringAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__StringAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getStringAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2506:2: ( ( rule__Constant__BoolLiteralAssignment_2 ) )
                    {
                    // InternalPascal.g:2506:2: ( ( rule__Constant__BoolLiteralAssignment_2 ) )
                    // InternalPascal.g:2507:3: ( rule__Constant__BoolLiteralAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getBoolLiteralAssignment_2()); 
                    }
                    // InternalPascal.g:2508:3: ( rule__Constant__BoolLiteralAssignment_2 )
                    // InternalPascal.g:2508:4: rule__Constant__BoolLiteralAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__BoolLiteralAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getBoolLiteralAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2512:2: ( ( rule__Constant__BoolLiteralAssignment_3 ) )
                    {
                    // InternalPascal.g:2512:2: ( ( rule__Constant__BoolLiteralAssignment_3 ) )
                    // InternalPascal.g:2513:3: ( rule__Constant__BoolLiteralAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getBoolLiteralAssignment_3()); 
                    }
                    // InternalPascal.g:2514:3: ( rule__Constant__BoolLiteralAssignment_3 )
                    // InternalPascal.g:2514:4: rule__Constant__BoolLiteralAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__BoolLiteralAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getBoolLiteralAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalPascal.g:2518:2: ( ( rule__Constant__NilAssignment_4 ) )
                    {
                    // InternalPascal.g:2518:2: ( ( rule__Constant__NilAssignment_4 ) )
                    // InternalPascal.g:2519:3: ( rule__Constant__NilAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getNilAssignment_4()); 
                    }
                    // InternalPascal.g:2520:3: ( rule__Constant__NilAssignment_4 )
                    // InternalPascal.g:2520:4: rule__Constant__NilAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__NilAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getNilAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__Alternatives"


    // $ANTLR start "rule__Constant__Alternatives_0_1"
    // InternalPascal.g:2528:1: rule__Constant__Alternatives_0_1 : ( ( ( rule__Constant__NameAssignment_0_1_0 ) ) | ( ( rule__Constant__NumberAssignment_0_1_1 ) ) );
    public final void rule__Constant__Alternatives_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2532:1: ( ( ( rule__Constant__NameAssignment_0_1_0 ) ) | ( ( rule__Constant__NumberAssignment_0_1_1 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID) ) {
                alt21=1;
            }
            else if ( ((LA21_0>=RULE_SIGNED_INTEGER_NUMBER && LA21_0<=RULE_INTEGER_NUMBER)||(LA21_0>=RULE_REAL_NUMBER && LA21_0<=RULE_SIGNED_REAL_NUMBER)) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalPascal.g:2533:2: ( ( rule__Constant__NameAssignment_0_1_0 ) )
                    {
                    // InternalPascal.g:2533:2: ( ( rule__Constant__NameAssignment_0_1_0 ) )
                    // InternalPascal.g:2534:3: ( rule__Constant__NameAssignment_0_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getNameAssignment_0_1_0()); 
                    }
                    // InternalPascal.g:2535:3: ( rule__Constant__NameAssignment_0_1_0 )
                    // InternalPascal.g:2535:4: rule__Constant__NameAssignment_0_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__NameAssignment_0_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getNameAssignment_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2539:2: ( ( rule__Constant__NumberAssignment_0_1_1 ) )
                    {
                    // InternalPascal.g:2539:2: ( ( rule__Constant__NumberAssignment_0_1_1 ) )
                    // InternalPascal.g:2540:3: ( rule__Constant__NumberAssignment_0_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstantAccess().getNumberAssignment_0_1_1()); 
                    }
                    // InternalPascal.g:2541:3: ( rule__Constant__NumberAssignment_0_1_1 )
                    // InternalPascal.g:2541:4: rule__Constant__NumberAssignment_0_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__NumberAssignment_0_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstantAccess().getNumberAssignment_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__Alternatives_0_1"


    // $ANTLR start "rule__Type__Alternatives"
    // InternalPascal.g:2549:1: rule__Type__Alternatives : ( ( ( rule__Type__SimpleAssignment_0 ) ) | ( ( rule__Type__StructuredAssignment_1 ) ) | ( ( rule__Type__PointerAssignment_2 ) ) );
    public final void rule__Type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2553:1: ( ( ( rule__Type__SimpleAssignment_0 ) ) | ( ( rule__Type__StructuredAssignment_1 ) ) | ( ( rule__Type__PointerAssignment_2 ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_SIGNED_INTEGER_NUMBER:
            case RULE_INTEGER_NUMBER:
            case RULE_ADDITION_OPERATOR:
            case RULE_STRING:
            case RULE_REAL_NUMBER:
            case RULE_SIGNED_REAL_NUMBER:
            case RULE_NUMERIC_SUBRANGE:
            case 27:
            case 67:
            case 68:
            case 69:
                {
                alt22=1;
                }
                break;
            case 55:
            case 56:
            case 57:
            case 60:
            case 70:
                {
                alt22=2;
                }
                break;
            case 36:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalPascal.g:2554:2: ( ( rule__Type__SimpleAssignment_0 ) )
                    {
                    // InternalPascal.g:2554:2: ( ( rule__Type__SimpleAssignment_0 ) )
                    // InternalPascal.g:2555:3: ( rule__Type__SimpleAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getSimpleAssignment_0()); 
                    }
                    // InternalPascal.g:2556:3: ( rule__Type__SimpleAssignment_0 )
                    // InternalPascal.g:2556:4: rule__Type__SimpleAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Type__SimpleAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getSimpleAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2560:2: ( ( rule__Type__StructuredAssignment_1 ) )
                    {
                    // InternalPascal.g:2560:2: ( ( rule__Type__StructuredAssignment_1 ) )
                    // InternalPascal.g:2561:3: ( rule__Type__StructuredAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getStructuredAssignment_1()); 
                    }
                    // InternalPascal.g:2562:3: ( rule__Type__StructuredAssignment_1 )
                    // InternalPascal.g:2562:4: rule__Type__StructuredAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Type__StructuredAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getStructuredAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2566:2: ( ( rule__Type__PointerAssignment_2 ) )
                    {
                    // InternalPascal.g:2566:2: ( ( rule__Type__PointerAssignment_2 ) )
                    // InternalPascal.g:2567:3: ( rule__Type__PointerAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getPointerAssignment_2()); 
                    }
                    // InternalPascal.g:2568:3: ( rule__Type__PointerAssignment_2 )
                    // InternalPascal.g:2568:4: rule__Type__PointerAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Type__PointerAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getPointerAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Alternatives"


    // $ANTLR start "rule__Simple_type__Alternatives"
    // InternalPascal.g:2576:1: rule__Simple_type__Alternatives : ( ( ( rule__Simple_type__SubrangeAssignment_0 ) ) | ( ( rule__Simple_type__EnumeratedAssignment_1 ) ) | ( ( rule__Simple_type__NameAssignment_2 ) ) );
    public final void rule__Simple_type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2580:1: ( ( ( rule__Simple_type__SubrangeAssignment_0 ) ) | ( ( rule__Simple_type__EnumeratedAssignment_1 ) ) | ( ( rule__Simple_type__NameAssignment_2 ) ) )
            int alt23=3;
            switch ( input.LA(1) ) {
            case RULE_SIGNED_INTEGER_NUMBER:
            case RULE_INTEGER_NUMBER:
            case RULE_ADDITION_OPERATOR:
            case RULE_STRING:
            case RULE_REAL_NUMBER:
            case RULE_SIGNED_REAL_NUMBER:
            case RULE_NUMERIC_SUBRANGE:
            case 67:
            case 68:
            case 69:
                {
                alt23=1;
                }
                break;
            case RULE_ID:
                {
                int LA23_2 = input.LA(2);

                if ( (LA23_2==54) ) {
                    alt23=1;
                }
                else if ( (LA23_2==EOF||LA23_2==26||(LA23_2>=28 && LA23_2<=29)||LA23_2==31||LA23_2==35) ) {
                    alt23=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 2, input);

                    throw nvae;
                }
                }
                break;
            case 27:
                {
                alt23=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalPascal.g:2581:2: ( ( rule__Simple_type__SubrangeAssignment_0 ) )
                    {
                    // InternalPascal.g:2581:2: ( ( rule__Simple_type__SubrangeAssignment_0 ) )
                    // InternalPascal.g:2582:3: ( rule__Simple_type__SubrangeAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_typeAccess().getSubrangeAssignment_0()); 
                    }
                    // InternalPascal.g:2583:3: ( rule__Simple_type__SubrangeAssignment_0 )
                    // InternalPascal.g:2583:4: rule__Simple_type__SubrangeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_type__SubrangeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_typeAccess().getSubrangeAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2587:2: ( ( rule__Simple_type__EnumeratedAssignment_1 ) )
                    {
                    // InternalPascal.g:2587:2: ( ( rule__Simple_type__EnumeratedAssignment_1 ) )
                    // InternalPascal.g:2588:3: ( rule__Simple_type__EnumeratedAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_typeAccess().getEnumeratedAssignment_1()); 
                    }
                    // InternalPascal.g:2589:3: ( rule__Simple_type__EnumeratedAssignment_1 )
                    // InternalPascal.g:2589:4: rule__Simple_type__EnumeratedAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_type__EnumeratedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_typeAccess().getEnumeratedAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2593:2: ( ( rule__Simple_type__NameAssignment_2 ) )
                    {
                    // InternalPascal.g:2593:2: ( ( rule__Simple_type__NameAssignment_2 ) )
                    // InternalPascal.g:2594:3: ( rule__Simple_type__NameAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimple_typeAccess().getNameAssignment_2()); 
                    }
                    // InternalPascal.g:2595:3: ( rule__Simple_type__NameAssignment_2 )
                    // InternalPascal.g:2595:4: rule__Simple_type__NameAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_type__NameAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimple_typeAccess().getNameAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_type__Alternatives"


    // $ANTLR start "rule__Subrange_type__Alternatives"
    // InternalPascal.g:2603:1: rule__Subrange_type__Alternatives : ( ( ( rule__Subrange_type__Group_0__0 ) ) | ( ( rule__Subrange_type__Group_1__0 ) ) );
    public final void rule__Subrange_type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2607:1: ( ( ( rule__Subrange_type__Group_0__0 ) ) | ( ( rule__Subrange_type__Group_1__0 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_ID && LA24_0<=RULE_INTEGER_NUMBER)||LA24_0==RULE_ADDITION_OPERATOR||(LA24_0>=RULE_STRING && LA24_0<=RULE_SIGNED_REAL_NUMBER)||(LA24_0>=67 && LA24_0<=69)) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_NUMERIC_SUBRANGE) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalPascal.g:2608:2: ( ( rule__Subrange_type__Group_0__0 ) )
                    {
                    // InternalPascal.g:2608:2: ( ( rule__Subrange_type__Group_0__0 ) )
                    // InternalPascal.g:2609:3: ( rule__Subrange_type__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubrange_typeAccess().getGroup_0()); 
                    }
                    // InternalPascal.g:2610:3: ( rule__Subrange_type__Group_0__0 )
                    // InternalPascal.g:2610:4: rule__Subrange_type__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Subrange_type__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubrange_typeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2614:2: ( ( rule__Subrange_type__Group_1__0 ) )
                    {
                    // InternalPascal.g:2614:2: ( ( rule__Subrange_type__Group_1__0 ) )
                    // InternalPascal.g:2615:3: ( rule__Subrange_type__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubrange_typeAccess().getGroup_1()); 
                    }
                    // InternalPascal.g:2616:3: ( rule__Subrange_type__Group_1__0 )
                    // InternalPascal.g:2616:4: rule__Subrange_type__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Subrange_type__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubrange_typeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Alternatives"


    // $ANTLR start "rule__Unpacked_structured_type__Alternatives"
    // InternalPascal.g:2624:1: rule__Unpacked_structured_type__Alternatives : ( ( ( rule__Unpacked_structured_type__ArrayAssignment_0 ) ) | ( ( rule__Unpacked_structured_type__DynamicAssignment_1 ) ) | ( ( rule__Unpacked_structured_type__RecordAssignment_2 ) ) | ( ( rule__Unpacked_structured_type__SetAssignment_3 ) ) | ( ( rule__Unpacked_structured_type__FileAssignment_4 ) ) );
    public final void rule__Unpacked_structured_type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2628:1: ( ( ( rule__Unpacked_structured_type__ArrayAssignment_0 ) ) | ( ( rule__Unpacked_structured_type__DynamicAssignment_1 ) ) | ( ( rule__Unpacked_structured_type__RecordAssignment_2 ) ) | ( ( rule__Unpacked_structured_type__SetAssignment_3 ) ) | ( ( rule__Unpacked_structured_type__FileAssignment_4 ) ) )
            int alt25=5;
            switch ( input.LA(1) ) {
            case 55:
                {
                int LA25_1 = input.LA(2);

                if ( (LA25_1==47) ) {
                    alt25=2;
                }
                else if ( (LA25_1==34) ) {
                    alt25=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 1, input);

                    throw nvae;
                }
                }
                break;
            case 70:
                {
                alt25=3;
                }
                break;
            case 56:
                {
                alt25=4;
                }
                break;
            case 57:
                {
                alt25=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalPascal.g:2629:2: ( ( rule__Unpacked_structured_type__ArrayAssignment_0 ) )
                    {
                    // InternalPascal.g:2629:2: ( ( rule__Unpacked_structured_type__ArrayAssignment_0 ) )
                    // InternalPascal.g:2630:3: ( rule__Unpacked_structured_type__ArrayAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpacked_structured_typeAccess().getArrayAssignment_0()); 
                    }
                    // InternalPascal.g:2631:3: ( rule__Unpacked_structured_type__ArrayAssignment_0 )
                    // InternalPascal.g:2631:4: rule__Unpacked_structured_type__ArrayAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unpacked_structured_type__ArrayAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpacked_structured_typeAccess().getArrayAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2635:2: ( ( rule__Unpacked_structured_type__DynamicAssignment_1 ) )
                    {
                    // InternalPascal.g:2635:2: ( ( rule__Unpacked_structured_type__DynamicAssignment_1 ) )
                    // InternalPascal.g:2636:3: ( rule__Unpacked_structured_type__DynamicAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpacked_structured_typeAccess().getDynamicAssignment_1()); 
                    }
                    // InternalPascal.g:2637:3: ( rule__Unpacked_structured_type__DynamicAssignment_1 )
                    // InternalPascal.g:2637:4: rule__Unpacked_structured_type__DynamicAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unpacked_structured_type__DynamicAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpacked_structured_typeAccess().getDynamicAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2641:2: ( ( rule__Unpacked_structured_type__RecordAssignment_2 ) )
                    {
                    // InternalPascal.g:2641:2: ( ( rule__Unpacked_structured_type__RecordAssignment_2 ) )
                    // InternalPascal.g:2642:3: ( rule__Unpacked_structured_type__RecordAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpacked_structured_typeAccess().getRecordAssignment_2()); 
                    }
                    // InternalPascal.g:2643:3: ( rule__Unpacked_structured_type__RecordAssignment_2 )
                    // InternalPascal.g:2643:4: rule__Unpacked_structured_type__RecordAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unpacked_structured_type__RecordAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpacked_structured_typeAccess().getRecordAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2647:2: ( ( rule__Unpacked_structured_type__SetAssignment_3 ) )
                    {
                    // InternalPascal.g:2647:2: ( ( rule__Unpacked_structured_type__SetAssignment_3 ) )
                    // InternalPascal.g:2648:3: ( rule__Unpacked_structured_type__SetAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpacked_structured_typeAccess().getSetAssignment_3()); 
                    }
                    // InternalPascal.g:2649:3: ( rule__Unpacked_structured_type__SetAssignment_3 )
                    // InternalPascal.g:2649:4: rule__Unpacked_structured_type__SetAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unpacked_structured_type__SetAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpacked_structured_typeAccess().getSetAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalPascal.g:2653:2: ( ( rule__Unpacked_structured_type__FileAssignment_4 ) )
                    {
                    // InternalPascal.g:2653:2: ( ( rule__Unpacked_structured_type__FileAssignment_4 ) )
                    // InternalPascal.g:2654:3: ( rule__Unpacked_structured_type__FileAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpacked_structured_typeAccess().getFileAssignment_4()); 
                    }
                    // InternalPascal.g:2655:3: ( rule__Unpacked_structured_type__FileAssignment_4 )
                    // InternalPascal.g:2655:4: rule__Unpacked_structured_type__FileAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Unpacked_structured_type__FileAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpacked_structured_typeAccess().getFileAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_structured_type__Alternatives"


    // $ANTLR start "rule__Field_list__Alternatives_0"
    // InternalPascal.g:2663:1: rule__Field_list__Alternatives_0 : ( ( ( rule__Field_list__Group_0_0__0 ) ) | ( ( rule__Field_list__VariantsAssignment_0_1 ) ) );
    public final void rule__Field_list__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2667:1: ( ( ( rule__Field_list__Group_0_0__0 ) ) | ( ( rule__Field_list__VariantsAssignment_0_1 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_ID) ) {
                alt26=1;
            }
            else if ( (LA26_0==46) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalPascal.g:2668:2: ( ( rule__Field_list__Group_0_0__0 ) )
                    {
                    // InternalPascal.g:2668:2: ( ( rule__Field_list__Group_0_0__0 ) )
                    // InternalPascal.g:2669:3: ( rule__Field_list__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getField_listAccess().getGroup_0_0()); 
                    }
                    // InternalPascal.g:2670:3: ( rule__Field_list__Group_0_0__0 )
                    // InternalPascal.g:2670:4: rule__Field_list__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Field_list__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getField_listAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2674:2: ( ( rule__Field_list__VariantsAssignment_0_1 ) )
                    {
                    // InternalPascal.g:2674:2: ( ( rule__Field_list__VariantsAssignment_0_1 ) )
                    // InternalPascal.g:2675:3: ( rule__Field_list__VariantsAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getField_listAccess().getVariantsAssignment_0_1()); 
                    }
                    // InternalPascal.g:2676:3: ( rule__Field_list__VariantsAssignment_0_1 )
                    // InternalPascal.g:2676:4: rule__Field_list__VariantsAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Field_list__VariantsAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getField_listAccess().getVariantsAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Alternatives_0"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__Alternatives_0"
    // InternalPascal.g:2684:1: rule__Procedure_and_function_declaration_part__Alternatives_0 : ( ( ( rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 ) ) | ( ( rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 ) ) );
    public final void rule__Procedure_and_function_declaration_part__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2688:1: ( ( ( rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 ) ) | ( ( rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==59) ) {
                alt27=1;
            }
            else if ( (LA27_0==61) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalPascal.g:2689:2: ( ( rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 ) )
                    {
                    // InternalPascal.g:2689:2: ( ( rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 ) )
                    // InternalPascal.g:2690:3: ( rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcedure_and_function_declaration_partAccess().getProceduresAssignment_0_0()); 
                    }
                    // InternalPascal.g:2691:3: ( rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 )
                    // InternalPascal.g:2691:4: rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcedure_and_function_declaration_partAccess().getProceduresAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2695:2: ( ( rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 ) )
                    {
                    // InternalPascal.g:2695:2: ( ( rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 ) )
                    // InternalPascal.g:2696:3: ( rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunctionsAssignment_0_1()); 
                    }
                    // InternalPascal.g:2697:3: ( rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 )
                    // InternalPascal.g:2697:4: rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunctionsAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__Alternatives_0"


    // $ANTLR start "rule__Procedure_declaration__Alternatives_2"
    // InternalPascal.g:2705:1: rule__Procedure_declaration__Alternatives_2 : ( ( ( rule__Procedure_declaration__BlockAssignment_2_0 ) ) | ( ( rule__Procedure_declaration__ForwardAssignment_2_1 ) ) );
    public final void rule__Procedure_declaration__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2709:1: ( ( ( rule__Procedure_declaration__BlockAssignment_2_0 ) ) | ( ( rule__Procedure_declaration__ForwardAssignment_2_1 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==30||(LA28_0>=50 && LA28_0<=51)||LA28_0==53||(LA28_0>=58 && LA28_0<=59)||LA28_0==61) ) {
                alt28=1;
            }
            else if ( (LA28_0==71) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalPascal.g:2710:2: ( ( rule__Procedure_declaration__BlockAssignment_2_0 ) )
                    {
                    // InternalPascal.g:2710:2: ( ( rule__Procedure_declaration__BlockAssignment_2_0 ) )
                    // InternalPascal.g:2711:3: ( rule__Procedure_declaration__BlockAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_2_0()); 
                    }
                    // InternalPascal.g:2712:3: ( rule__Procedure_declaration__BlockAssignment_2_0 )
                    // InternalPascal.g:2712:4: rule__Procedure_declaration__BlockAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Procedure_declaration__BlockAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2716:2: ( ( rule__Procedure_declaration__ForwardAssignment_2_1 ) )
                    {
                    // InternalPascal.g:2716:2: ( ( rule__Procedure_declaration__ForwardAssignment_2_1 ) )
                    // InternalPascal.g:2717:3: ( rule__Procedure_declaration__ForwardAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcedure_declarationAccess().getForwardAssignment_2_1()); 
                    }
                    // InternalPascal.g:2718:3: ( rule__Procedure_declaration__ForwardAssignment_2_1 )
                    // InternalPascal.g:2718:4: rule__Procedure_declaration__ForwardAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Procedure_declaration__ForwardAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcedure_declarationAccess().getForwardAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Alternatives_2"


    // $ANTLR start "rule__Formal_parameter_section__Alternatives"
    // InternalPascal.g:2726:1: rule__Formal_parameter_section__Alternatives : ( ( ( rule__Formal_parameter_section__ValueAssignment_0 ) ) | ( ( rule__Formal_parameter_section__VariableAssignment_1 ) ) | ( ( rule__Formal_parameter_section__ProcedureAssignment_2 ) ) | ( ( rule__Formal_parameter_section__FunctionAssignment_3 ) ) );
    public final void rule__Formal_parameter_section__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2730:1: ( ( ( rule__Formal_parameter_section__ValueAssignment_0 ) ) | ( ( rule__Formal_parameter_section__VariableAssignment_1 ) ) | ( ( rule__Formal_parameter_section__ProcedureAssignment_2 ) ) | ( ( rule__Formal_parameter_section__FunctionAssignment_3 ) ) )
            int alt29=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt29=1;
                }
                break;
            case 58:
                {
                alt29=2;
                }
                break;
            case 59:
                {
                alt29=3;
                }
                break;
            case 61:
                {
                alt29=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalPascal.g:2731:2: ( ( rule__Formal_parameter_section__ValueAssignment_0 ) )
                    {
                    // InternalPascal.g:2731:2: ( ( rule__Formal_parameter_section__ValueAssignment_0 ) )
                    // InternalPascal.g:2732:3: ( rule__Formal_parameter_section__ValueAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormal_parameter_sectionAccess().getValueAssignment_0()); 
                    }
                    // InternalPascal.g:2733:3: ( rule__Formal_parameter_section__ValueAssignment_0 )
                    // InternalPascal.g:2733:4: rule__Formal_parameter_section__ValueAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Formal_parameter_section__ValueAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormal_parameter_sectionAccess().getValueAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2737:2: ( ( rule__Formal_parameter_section__VariableAssignment_1 ) )
                    {
                    // InternalPascal.g:2737:2: ( ( rule__Formal_parameter_section__VariableAssignment_1 ) )
                    // InternalPascal.g:2738:3: ( rule__Formal_parameter_section__VariableAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormal_parameter_sectionAccess().getVariableAssignment_1()); 
                    }
                    // InternalPascal.g:2739:3: ( rule__Formal_parameter_section__VariableAssignment_1 )
                    // InternalPascal.g:2739:4: rule__Formal_parameter_section__VariableAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Formal_parameter_section__VariableAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormal_parameter_sectionAccess().getVariableAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalPascal.g:2743:2: ( ( rule__Formal_parameter_section__ProcedureAssignment_2 ) )
                    {
                    // InternalPascal.g:2743:2: ( ( rule__Formal_parameter_section__ProcedureAssignment_2 ) )
                    // InternalPascal.g:2744:3: ( rule__Formal_parameter_section__ProcedureAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormal_parameter_sectionAccess().getProcedureAssignment_2()); 
                    }
                    // InternalPascal.g:2745:3: ( rule__Formal_parameter_section__ProcedureAssignment_2 )
                    // InternalPascal.g:2745:4: rule__Formal_parameter_section__ProcedureAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Formal_parameter_section__ProcedureAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormal_parameter_sectionAccess().getProcedureAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalPascal.g:2749:2: ( ( rule__Formal_parameter_section__FunctionAssignment_3 ) )
                    {
                    // InternalPascal.g:2749:2: ( ( rule__Formal_parameter_section__FunctionAssignment_3 ) )
                    // InternalPascal.g:2750:3: ( rule__Formal_parameter_section__FunctionAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFormal_parameter_sectionAccess().getFunctionAssignment_3()); 
                    }
                    // InternalPascal.g:2751:3: ( rule__Formal_parameter_section__FunctionAssignment_3 )
                    // InternalPascal.g:2751:4: rule__Formal_parameter_section__FunctionAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Formal_parameter_section__FunctionAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFormal_parameter_sectionAccess().getFunctionAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_section__Alternatives"


    // $ANTLR start "rule__Parameter_type__Alternatives"
    // InternalPascal.g:2759:1: rule__Parameter_type__Alternatives : ( ( ( rule__Parameter_type__ArrayAssignment_0 ) ) | ( ( rule__Parameter_type__NameAssignment_1 ) ) );
    public final void rule__Parameter_type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2763:1: ( ( ( rule__Parameter_type__ArrayAssignment_0 ) ) | ( ( rule__Parameter_type__NameAssignment_1 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==55||LA30_0==60) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_ID) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalPascal.g:2764:2: ( ( rule__Parameter_type__ArrayAssignment_0 ) )
                    {
                    // InternalPascal.g:2764:2: ( ( rule__Parameter_type__ArrayAssignment_0 ) )
                    // InternalPascal.g:2765:3: ( rule__Parameter_type__ArrayAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameter_typeAccess().getArrayAssignment_0()); 
                    }
                    // InternalPascal.g:2766:3: ( rule__Parameter_type__ArrayAssignment_0 )
                    // InternalPascal.g:2766:4: rule__Parameter_type__ArrayAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Parameter_type__ArrayAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameter_typeAccess().getArrayAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2770:2: ( ( rule__Parameter_type__NameAssignment_1 ) )
                    {
                    // InternalPascal.g:2770:2: ( ( rule__Parameter_type__NameAssignment_1 ) )
                    // InternalPascal.g:2771:3: ( rule__Parameter_type__NameAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameter_typeAccess().getNameAssignment_1()); 
                    }
                    // InternalPascal.g:2772:3: ( rule__Parameter_type__NameAssignment_1 )
                    // InternalPascal.g:2772:4: rule__Parameter_type__NameAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Parameter_type__NameAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameter_typeAccess().getNameAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter_type__Alternatives"


    // $ANTLR start "rule__Conformant_array_schema__Alternatives"
    // InternalPascal.g:2780:1: rule__Conformant_array_schema__Alternatives : ( ( ( rule__Conformant_array_schema__PackedAssignment_0 ) ) | ( ( rule__Conformant_array_schema__UnpackedAssignment_1 ) ) );
    public final void rule__Conformant_array_schema__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2784:1: ( ( ( rule__Conformant_array_schema__PackedAssignment_0 ) ) | ( ( rule__Conformant_array_schema__UnpackedAssignment_1 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==60) ) {
                alt31=1;
            }
            else if ( (LA31_0==55) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalPascal.g:2785:2: ( ( rule__Conformant_array_schema__PackedAssignment_0 ) )
                    {
                    // InternalPascal.g:2785:2: ( ( rule__Conformant_array_schema__PackedAssignment_0 ) )
                    // InternalPascal.g:2786:3: ( rule__Conformant_array_schema__PackedAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConformant_array_schemaAccess().getPackedAssignment_0()); 
                    }
                    // InternalPascal.g:2787:3: ( rule__Conformant_array_schema__PackedAssignment_0 )
                    // InternalPascal.g:2787:4: rule__Conformant_array_schema__PackedAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Conformant_array_schema__PackedAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConformant_array_schemaAccess().getPackedAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2791:2: ( ( rule__Conformant_array_schema__UnpackedAssignment_1 ) )
                    {
                    // InternalPascal.g:2791:2: ( ( rule__Conformant_array_schema__UnpackedAssignment_1 ) )
                    // InternalPascal.g:2792:3: ( rule__Conformant_array_schema__UnpackedAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConformant_array_schemaAccess().getUnpackedAssignment_1()); 
                    }
                    // InternalPascal.g:2793:3: ( rule__Conformant_array_schema__UnpackedAssignment_1 )
                    // InternalPascal.g:2793:4: rule__Conformant_array_schema__UnpackedAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Conformant_array_schema__UnpackedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConformant_array_schemaAccess().getUnpackedAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conformant_array_schema__Alternatives"


    // $ANTLR start "rule__Function_declaration__Alternatives_2"
    // InternalPascal.g:2801:1: rule__Function_declaration__Alternatives_2 : ( ( ( rule__Function_declaration__BlockAssignment_2_0 ) ) | ( ( rule__Function_declaration__ForwardAssignment_2_1 ) ) );
    public final void rule__Function_declaration__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2805:1: ( ( ( rule__Function_declaration__BlockAssignment_2_0 ) ) | ( ( rule__Function_declaration__ForwardAssignment_2_1 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==30||(LA32_0>=50 && LA32_0<=51)||LA32_0==53||(LA32_0>=58 && LA32_0<=59)||LA32_0==61) ) {
                alt32=1;
            }
            else if ( (LA32_0==71) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalPascal.g:2806:2: ( ( rule__Function_declaration__BlockAssignment_2_0 ) )
                    {
                    // InternalPascal.g:2806:2: ( ( rule__Function_declaration__BlockAssignment_2_0 ) )
                    // InternalPascal.g:2807:3: ( rule__Function_declaration__BlockAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunction_declarationAccess().getBlockAssignment_2_0()); 
                    }
                    // InternalPascal.g:2808:3: ( rule__Function_declaration__BlockAssignment_2_0 )
                    // InternalPascal.g:2808:4: rule__Function_declaration__BlockAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function_declaration__BlockAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunction_declarationAccess().getBlockAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalPascal.g:2812:2: ( ( rule__Function_declaration__ForwardAssignment_2_1 ) )
                    {
                    // InternalPascal.g:2812:2: ( ( rule__Function_declaration__ForwardAssignment_2_1 ) )
                    // InternalPascal.g:2813:3: ( rule__Function_declaration__ForwardAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunction_declarationAccess().getForwardAssignment_2_1()); 
                    }
                    // InternalPascal.g:2814:3: ( rule__Function_declaration__ForwardAssignment_2_1 )
                    // InternalPascal.g:2814:4: rule__Function_declaration__ForwardAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function_declaration__ForwardAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunction_declarationAccess().getForwardAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Alternatives_2"


    // $ANTLR start "rule__Program__Group__0"
    // InternalPascal.g:2822:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2826:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // InternalPascal.g:2827:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__Program__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // InternalPascal.g:2834:1: rule__Program__Group__0__Impl : ( ( rule__Program__HeadingAssignment_0 ) ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2838:1: ( ( ( rule__Program__HeadingAssignment_0 ) ) )
            // InternalPascal.g:2839:1: ( ( rule__Program__HeadingAssignment_0 ) )
            {
            // InternalPascal.g:2839:1: ( ( rule__Program__HeadingAssignment_0 ) )
            // InternalPascal.g:2840:2: ( rule__Program__HeadingAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getHeadingAssignment_0()); 
            }
            // InternalPascal.g:2841:2: ( rule__Program__HeadingAssignment_0 )
            // InternalPascal.g:2841:3: rule__Program__HeadingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Program__HeadingAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getHeadingAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // InternalPascal.g:2849:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2853:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // InternalPascal.g:2854:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Program__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // InternalPascal.g:2861:1: rule__Program__Group__1__Impl : ( ( rule__Program__BlockAssignment_1 ) ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2865:1: ( ( ( rule__Program__BlockAssignment_1 ) ) )
            // InternalPascal.g:2866:1: ( ( rule__Program__BlockAssignment_1 ) )
            {
            // InternalPascal.g:2866:1: ( ( rule__Program__BlockAssignment_1 ) )
            // InternalPascal.g:2867:2: ( rule__Program__BlockAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getBlockAssignment_1()); 
            }
            // InternalPascal.g:2868:2: ( rule__Program__BlockAssignment_1 )
            // InternalPascal.g:2868:3: rule__Program__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Program__BlockAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getBlockAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // InternalPascal.g:2876:1: rule__Program__Group__2 : rule__Program__Group__2__Impl ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2880:1: ( rule__Program__Group__2__Impl )
            // InternalPascal.g:2881:2: rule__Program__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // InternalPascal.g:2887:1: rule__Program__Group__2__Impl : ( '.' ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2891:1: ( ( '.' ) )
            // InternalPascal.g:2892:1: ( '.' )
            {
            // InternalPascal.g:2892:1: ( '.' )
            // InternalPascal.g:2893:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getFullStopKeyword_2()); 
            }
            match(input,24,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getFullStopKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program_heading_block__Group__0"
    // InternalPascal.g:2903:1: rule__Program_heading_block__Group__0 : rule__Program_heading_block__Group__0__Impl rule__Program_heading_block__Group__1 ;
    public final void rule__Program_heading_block__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2907:1: ( rule__Program_heading_block__Group__0__Impl rule__Program_heading_block__Group__1 )
            // InternalPascal.g:2908:2: rule__Program_heading_block__Group__0__Impl rule__Program_heading_block__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Program_heading_block__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__0"


    // $ANTLR start "rule__Program_heading_block__Group__0__Impl"
    // InternalPascal.g:2915:1: rule__Program_heading_block__Group__0__Impl : ( 'program' ) ;
    public final void rule__Program_heading_block__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2919:1: ( ( 'program' ) )
            // InternalPascal.g:2920:1: ( 'program' )
            {
            // InternalPascal.g:2920:1: ( 'program' )
            // InternalPascal.g:2921:2: 'program'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); 
            }
            match(input,25,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__0__Impl"


    // $ANTLR start "rule__Program_heading_block__Group__1"
    // InternalPascal.g:2930:1: rule__Program_heading_block__Group__1 : rule__Program_heading_block__Group__1__Impl rule__Program_heading_block__Group__2 ;
    public final void rule__Program_heading_block__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2934:1: ( rule__Program_heading_block__Group__1__Impl rule__Program_heading_block__Group__2 )
            // InternalPascal.g:2935:2: rule__Program_heading_block__Group__1__Impl rule__Program_heading_block__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Program_heading_block__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__1"


    // $ANTLR start "rule__Program_heading_block__Group__1__Impl"
    // InternalPascal.g:2942:1: rule__Program_heading_block__Group__1__Impl : ( ( rule__Program_heading_block__NameAssignment_1 ) ) ;
    public final void rule__Program_heading_block__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2946:1: ( ( ( rule__Program_heading_block__NameAssignment_1 ) ) )
            // InternalPascal.g:2947:1: ( ( rule__Program_heading_block__NameAssignment_1 ) )
            {
            // InternalPascal.g:2947:1: ( ( rule__Program_heading_block__NameAssignment_1 ) )
            // InternalPascal.g:2948:2: ( rule__Program_heading_block__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); 
            }
            // InternalPascal.g:2949:2: ( rule__Program_heading_block__NameAssignment_1 )
            // InternalPascal.g:2949:3: rule__Program_heading_block__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__1__Impl"


    // $ANTLR start "rule__Program_heading_block__Group__2"
    // InternalPascal.g:2957:1: rule__Program_heading_block__Group__2 : rule__Program_heading_block__Group__2__Impl rule__Program_heading_block__Group__3 ;
    public final void rule__Program_heading_block__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2961:1: ( rule__Program_heading_block__Group__2__Impl rule__Program_heading_block__Group__3 )
            // InternalPascal.g:2962:2: rule__Program_heading_block__Group__2__Impl rule__Program_heading_block__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__Program_heading_block__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__2"


    // $ANTLR start "rule__Program_heading_block__Group__2__Impl"
    // InternalPascal.g:2969:1: rule__Program_heading_block__Group__2__Impl : ( ( rule__Program_heading_block__Group_2__0 )? ) ;
    public final void rule__Program_heading_block__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2973:1: ( ( ( rule__Program_heading_block__Group_2__0 )? ) )
            // InternalPascal.g:2974:1: ( ( rule__Program_heading_block__Group_2__0 )? )
            {
            // InternalPascal.g:2974:1: ( ( rule__Program_heading_block__Group_2__0 )? )
            // InternalPascal.g:2975:2: ( rule__Program_heading_block__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getGroup_2()); 
            }
            // InternalPascal.g:2976:2: ( rule__Program_heading_block__Group_2__0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==27) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalPascal.g:2976:3: rule__Program_heading_block__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program_heading_block__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__2__Impl"


    // $ANTLR start "rule__Program_heading_block__Group__3"
    // InternalPascal.g:2984:1: rule__Program_heading_block__Group__3 : rule__Program_heading_block__Group__3__Impl ;
    public final void rule__Program_heading_block__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2988:1: ( rule__Program_heading_block__Group__3__Impl )
            // InternalPascal.g:2989:2: rule__Program_heading_block__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__3"


    // $ANTLR start "rule__Program_heading_block__Group__3__Impl"
    // InternalPascal.g:2995:1: rule__Program_heading_block__Group__3__Impl : ( ';' ) ;
    public final void rule__Program_heading_block__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:2999:1: ( ( ';' ) )
            // InternalPascal.g:3000:1: ( ';' )
            {
            // InternalPascal.g:3000:1: ( ';' )
            // InternalPascal.g:3001:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_3()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group__3__Impl"


    // $ANTLR start "rule__Program_heading_block__Group_2__0"
    // InternalPascal.g:3011:1: rule__Program_heading_block__Group_2__0 : rule__Program_heading_block__Group_2__0__Impl rule__Program_heading_block__Group_2__1 ;
    public final void rule__Program_heading_block__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3015:1: ( rule__Program_heading_block__Group_2__0__Impl rule__Program_heading_block__Group_2__1 )
            // InternalPascal.g:3016:2: rule__Program_heading_block__Group_2__0__Impl rule__Program_heading_block__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Program_heading_block__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group_2__0"


    // $ANTLR start "rule__Program_heading_block__Group_2__0__Impl"
    // InternalPascal.g:3023:1: rule__Program_heading_block__Group_2__0__Impl : ( '(' ) ;
    public final void rule__Program_heading_block__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3027:1: ( ( '(' ) )
            // InternalPascal.g:3028:1: ( '(' )
            {
            // InternalPascal.g:3028:1: ( '(' )
            // InternalPascal.g:3029:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group_2__0__Impl"


    // $ANTLR start "rule__Program_heading_block__Group_2__1"
    // InternalPascal.g:3038:1: rule__Program_heading_block__Group_2__1 : rule__Program_heading_block__Group_2__1__Impl rule__Program_heading_block__Group_2__2 ;
    public final void rule__Program_heading_block__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3042:1: ( rule__Program_heading_block__Group_2__1__Impl rule__Program_heading_block__Group_2__2 )
            // InternalPascal.g:3043:2: rule__Program_heading_block__Group_2__1__Impl rule__Program_heading_block__Group_2__2
            {
            pushFollow(FOLLOW_8);
            rule__Program_heading_block__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group_2__1"


    // $ANTLR start "rule__Program_heading_block__Group_2__1__Impl"
    // InternalPascal.g:3050:1: rule__Program_heading_block__Group_2__1__Impl : ( ( rule__Program_heading_block__IdentifiersAssignment_2_1 ) ) ;
    public final void rule__Program_heading_block__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3054:1: ( ( ( rule__Program_heading_block__IdentifiersAssignment_2_1 ) ) )
            // InternalPascal.g:3055:1: ( ( rule__Program_heading_block__IdentifiersAssignment_2_1 ) )
            {
            // InternalPascal.g:3055:1: ( ( rule__Program_heading_block__IdentifiersAssignment_2_1 ) )
            // InternalPascal.g:3056:2: ( rule__Program_heading_block__IdentifiersAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getIdentifiersAssignment_2_1()); 
            }
            // InternalPascal.g:3057:2: ( rule__Program_heading_block__IdentifiersAssignment_2_1 )
            // InternalPascal.g:3057:3: rule__Program_heading_block__IdentifiersAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__IdentifiersAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getIdentifiersAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group_2__1__Impl"


    // $ANTLR start "rule__Program_heading_block__Group_2__2"
    // InternalPascal.g:3065:1: rule__Program_heading_block__Group_2__2 : rule__Program_heading_block__Group_2__2__Impl ;
    public final void rule__Program_heading_block__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3069:1: ( rule__Program_heading_block__Group_2__2__Impl )
            // InternalPascal.g:3070:2: rule__Program_heading_block__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program_heading_block__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group_2__2"


    // $ANTLR start "rule__Program_heading_block__Group_2__2__Impl"
    // InternalPascal.g:3076:1: rule__Program_heading_block__Group_2__2__Impl : ( ')' ) ;
    public final void rule__Program_heading_block__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3080:1: ( ( ')' ) )
            // InternalPascal.g:3081:1: ( ')' )
            {
            // InternalPascal.g:3081:1: ( ')' )
            // InternalPascal.g:3082:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__Group_2__2__Impl"


    // $ANTLR start "rule__Identifier_list__Group__0"
    // InternalPascal.g:3092:1: rule__Identifier_list__Group__0 : rule__Identifier_list__Group__0__Impl rule__Identifier_list__Group__1 ;
    public final void rule__Identifier_list__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3096:1: ( rule__Identifier_list__Group__0__Impl rule__Identifier_list__Group__1 )
            // InternalPascal.g:3097:2: rule__Identifier_list__Group__0__Impl rule__Identifier_list__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Identifier_list__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Identifier_list__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group__0"


    // $ANTLR start "rule__Identifier_list__Group__0__Impl"
    // InternalPascal.g:3104:1: rule__Identifier_list__Group__0__Impl : ( ( rule__Identifier_list__NamesAssignment_0 ) ) ;
    public final void rule__Identifier_list__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3108:1: ( ( ( rule__Identifier_list__NamesAssignment_0 ) ) )
            // InternalPascal.g:3109:1: ( ( rule__Identifier_list__NamesAssignment_0 ) )
            {
            // InternalPascal.g:3109:1: ( ( rule__Identifier_list__NamesAssignment_0 ) )
            // InternalPascal.g:3110:2: ( rule__Identifier_list__NamesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); 
            }
            // InternalPascal.g:3111:2: ( rule__Identifier_list__NamesAssignment_0 )
            // InternalPascal.g:3111:3: rule__Identifier_list__NamesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Identifier_list__NamesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group__0__Impl"


    // $ANTLR start "rule__Identifier_list__Group__1"
    // InternalPascal.g:3119:1: rule__Identifier_list__Group__1 : rule__Identifier_list__Group__1__Impl ;
    public final void rule__Identifier_list__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3123:1: ( rule__Identifier_list__Group__1__Impl )
            // InternalPascal.g:3124:2: rule__Identifier_list__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Identifier_list__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group__1"


    // $ANTLR start "rule__Identifier_list__Group__1__Impl"
    // InternalPascal.g:3130:1: rule__Identifier_list__Group__1__Impl : ( ( rule__Identifier_list__Group_1__0 )* ) ;
    public final void rule__Identifier_list__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3134:1: ( ( ( rule__Identifier_list__Group_1__0 )* ) )
            // InternalPascal.g:3135:1: ( ( rule__Identifier_list__Group_1__0 )* )
            {
            // InternalPascal.g:3135:1: ( ( rule__Identifier_list__Group_1__0 )* )
            // InternalPascal.g:3136:2: ( rule__Identifier_list__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getGroup_1()); 
            }
            // InternalPascal.g:3137:2: ( rule__Identifier_list__Group_1__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==29) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalPascal.g:3137:3: rule__Identifier_list__Group_1__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Identifier_list__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group__1__Impl"


    // $ANTLR start "rule__Identifier_list__Group_1__0"
    // InternalPascal.g:3146:1: rule__Identifier_list__Group_1__0 : rule__Identifier_list__Group_1__0__Impl rule__Identifier_list__Group_1__1 ;
    public final void rule__Identifier_list__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3150:1: ( rule__Identifier_list__Group_1__0__Impl rule__Identifier_list__Group_1__1 )
            // InternalPascal.g:3151:2: rule__Identifier_list__Group_1__0__Impl rule__Identifier_list__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Identifier_list__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Identifier_list__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group_1__0"


    // $ANTLR start "rule__Identifier_list__Group_1__0__Impl"
    // InternalPascal.g:3158:1: rule__Identifier_list__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Identifier_list__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3162:1: ( ( ',' ) )
            // InternalPascal.g:3163:1: ( ',' )
            {
            // InternalPascal.g:3163:1: ( ',' )
            // InternalPascal.g:3164:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group_1__0__Impl"


    // $ANTLR start "rule__Identifier_list__Group_1__1"
    // InternalPascal.g:3173:1: rule__Identifier_list__Group_1__1 : rule__Identifier_list__Group_1__1__Impl ;
    public final void rule__Identifier_list__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3177:1: ( rule__Identifier_list__Group_1__1__Impl )
            // InternalPascal.g:3178:2: rule__Identifier_list__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Identifier_list__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group_1__1"


    // $ANTLR start "rule__Identifier_list__Group_1__1__Impl"
    // InternalPascal.g:3184:1: rule__Identifier_list__Group_1__1__Impl : ( ( rule__Identifier_list__NamesAssignment_1_1 ) ) ;
    public final void rule__Identifier_list__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3188:1: ( ( ( rule__Identifier_list__NamesAssignment_1_1 ) ) )
            // InternalPascal.g:3189:1: ( ( rule__Identifier_list__NamesAssignment_1_1 ) )
            {
            // InternalPascal.g:3189:1: ( ( rule__Identifier_list__NamesAssignment_1_1 ) )
            // InternalPascal.g:3190:2: ( rule__Identifier_list__NamesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); 
            }
            // InternalPascal.g:3191:2: ( rule__Identifier_list__NamesAssignment_1_1 )
            // InternalPascal.g:3191:3: rule__Identifier_list__NamesAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Identifier_list__NamesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__Group_1__1__Impl"


    // $ANTLR start "rule__Block__Group__0"
    // InternalPascal.g:3200:1: rule__Block__Group__0 : rule__Block__Group__0__Impl rule__Block__Group__1 ;
    public final void rule__Block__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3204:1: ( rule__Block__Group__0__Impl rule__Block__Group__1 )
            // InternalPascal.g:3205:2: rule__Block__Group__0__Impl rule__Block__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__Block__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__0"


    // $ANTLR start "rule__Block__Group__0__Impl"
    // InternalPascal.g:3212:1: rule__Block__Group__0__Impl : ( ( rule__Block__LabelAssignment_0 )? ) ;
    public final void rule__Block__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3216:1: ( ( ( rule__Block__LabelAssignment_0 )? ) )
            // InternalPascal.g:3217:1: ( ( rule__Block__LabelAssignment_0 )? )
            {
            // InternalPascal.g:3217:1: ( ( rule__Block__LabelAssignment_0 )? )
            // InternalPascal.g:3218:2: ( rule__Block__LabelAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getLabelAssignment_0()); 
            }
            // InternalPascal.g:3219:2: ( rule__Block__LabelAssignment_0 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==50) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalPascal.g:3219:3: rule__Block__LabelAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Block__LabelAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getLabelAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__0__Impl"


    // $ANTLR start "rule__Block__Group__1"
    // InternalPascal.g:3227:1: rule__Block__Group__1 : rule__Block__Group__1__Impl rule__Block__Group__2 ;
    public final void rule__Block__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3231:1: ( rule__Block__Group__1__Impl rule__Block__Group__2 )
            // InternalPascal.g:3232:2: rule__Block__Group__1__Impl rule__Block__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__Block__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__1"


    // $ANTLR start "rule__Block__Group__1__Impl"
    // InternalPascal.g:3239:1: rule__Block__Group__1__Impl : ( ( rule__Block__ConstantAssignment_1 )? ) ;
    public final void rule__Block__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3243:1: ( ( ( rule__Block__ConstantAssignment_1 )? ) )
            // InternalPascal.g:3244:1: ( ( rule__Block__ConstantAssignment_1 )? )
            {
            // InternalPascal.g:3244:1: ( ( rule__Block__ConstantAssignment_1 )? )
            // InternalPascal.g:3245:2: ( rule__Block__ConstantAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getConstantAssignment_1()); 
            }
            // InternalPascal.g:3246:2: ( rule__Block__ConstantAssignment_1 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==51) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalPascal.g:3246:3: rule__Block__ConstantAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Block__ConstantAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getConstantAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__1__Impl"


    // $ANTLR start "rule__Block__Group__2"
    // InternalPascal.g:3254:1: rule__Block__Group__2 : rule__Block__Group__2__Impl rule__Block__Group__3 ;
    public final void rule__Block__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3258:1: ( rule__Block__Group__2__Impl rule__Block__Group__3 )
            // InternalPascal.g:3259:2: rule__Block__Group__2__Impl rule__Block__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__Block__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__2"


    // $ANTLR start "rule__Block__Group__2__Impl"
    // InternalPascal.g:3266:1: rule__Block__Group__2__Impl : ( ( rule__Block__TypeAssignment_2 )? ) ;
    public final void rule__Block__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3270:1: ( ( ( rule__Block__TypeAssignment_2 )? ) )
            // InternalPascal.g:3271:1: ( ( rule__Block__TypeAssignment_2 )? )
            {
            // InternalPascal.g:3271:1: ( ( rule__Block__TypeAssignment_2 )? )
            // InternalPascal.g:3272:2: ( rule__Block__TypeAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:3273:2: ( rule__Block__TypeAssignment_2 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==53) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalPascal.g:3273:3: rule__Block__TypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Block__TypeAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__2__Impl"


    // $ANTLR start "rule__Block__Group__3"
    // InternalPascal.g:3281:1: rule__Block__Group__3 : rule__Block__Group__3__Impl rule__Block__Group__4 ;
    public final void rule__Block__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3285:1: ( rule__Block__Group__3__Impl rule__Block__Group__4 )
            // InternalPascal.g:3286:2: rule__Block__Group__3__Impl rule__Block__Group__4
            {
            pushFollow(FOLLOW_4);
            rule__Block__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__3"


    // $ANTLR start "rule__Block__Group__3__Impl"
    // InternalPascal.g:3293:1: rule__Block__Group__3__Impl : ( ( rule__Block__VariableAssignment_3 )? ) ;
    public final void rule__Block__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3297:1: ( ( ( rule__Block__VariableAssignment_3 )? ) )
            // InternalPascal.g:3298:1: ( ( rule__Block__VariableAssignment_3 )? )
            {
            // InternalPascal.g:3298:1: ( ( rule__Block__VariableAssignment_3 )? )
            // InternalPascal.g:3299:2: ( rule__Block__VariableAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getVariableAssignment_3()); 
            }
            // InternalPascal.g:3300:2: ( rule__Block__VariableAssignment_3 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==58) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalPascal.g:3300:3: rule__Block__VariableAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Block__VariableAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getVariableAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__3__Impl"


    // $ANTLR start "rule__Block__Group__4"
    // InternalPascal.g:3308:1: rule__Block__Group__4 : rule__Block__Group__4__Impl rule__Block__Group__5 ;
    public final void rule__Block__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3312:1: ( rule__Block__Group__4__Impl rule__Block__Group__5 )
            // InternalPascal.g:3313:2: rule__Block__Group__4__Impl rule__Block__Group__5
            {
            pushFollow(FOLLOW_4);
            rule__Block__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__4"


    // $ANTLR start "rule__Block__Group__4__Impl"
    // InternalPascal.g:3320:1: rule__Block__Group__4__Impl : ( ( rule__Block__AbstractionAssignment_4 )? ) ;
    public final void rule__Block__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3324:1: ( ( ( rule__Block__AbstractionAssignment_4 )? ) )
            // InternalPascal.g:3325:1: ( ( rule__Block__AbstractionAssignment_4 )? )
            {
            // InternalPascal.g:3325:1: ( ( rule__Block__AbstractionAssignment_4 )? )
            // InternalPascal.g:3326:2: ( rule__Block__AbstractionAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getAbstractionAssignment_4()); 
            }
            // InternalPascal.g:3327:2: ( rule__Block__AbstractionAssignment_4 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==59||LA39_0==61) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalPascal.g:3327:3: rule__Block__AbstractionAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Block__AbstractionAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getAbstractionAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__4__Impl"


    // $ANTLR start "rule__Block__Group__5"
    // InternalPascal.g:3335:1: rule__Block__Group__5 : rule__Block__Group__5__Impl ;
    public final void rule__Block__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3339:1: ( rule__Block__Group__5__Impl )
            // InternalPascal.g:3340:2: rule__Block__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Block__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__5"


    // $ANTLR start "rule__Block__Group__5__Impl"
    // InternalPascal.g:3346:1: rule__Block__Group__5__Impl : ( ( rule__Block__StatementAssignment_5 ) ) ;
    public final void rule__Block__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3350:1: ( ( ( rule__Block__StatementAssignment_5 ) ) )
            // InternalPascal.g:3351:1: ( ( rule__Block__StatementAssignment_5 ) )
            {
            // InternalPascal.g:3351:1: ( ( rule__Block__StatementAssignment_5 ) )
            // InternalPascal.g:3352:2: ( rule__Block__StatementAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getStatementAssignment_5()); 
            }
            // InternalPascal.g:3353:2: ( rule__Block__StatementAssignment_5 )
            // InternalPascal.g:3353:3: rule__Block__StatementAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Block__StatementAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getStatementAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__5__Impl"


    // $ANTLR start "rule__Statement_part__Group__0"
    // InternalPascal.g:3362:1: rule__Statement_part__Group__0 : rule__Statement_part__Group__0__Impl rule__Statement_part__Group__1 ;
    public final void rule__Statement_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3366:1: ( rule__Statement_part__Group__0__Impl rule__Statement_part__Group__1 )
            // InternalPascal.g:3367:2: rule__Statement_part__Group__0__Impl rule__Statement_part__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__Statement_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__Group__0"


    // $ANTLR start "rule__Statement_part__Group__0__Impl"
    // InternalPascal.g:3374:1: rule__Statement_part__Group__0__Impl : ( 'begin' ) ;
    public final void rule__Statement_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3378:1: ( ( 'begin' ) )
            // InternalPascal.g:3379:1: ( 'begin' )
            {
            // InternalPascal.g:3379:1: ( 'begin' )
            // InternalPascal.g:3380:2: 'begin'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_partAccess().getBeginKeyword_0()); 
            }
            match(input,30,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_partAccess().getBeginKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__Group__0__Impl"


    // $ANTLR start "rule__Statement_part__Group__1"
    // InternalPascal.g:3389:1: rule__Statement_part__Group__1 : rule__Statement_part__Group__1__Impl rule__Statement_part__Group__2 ;
    public final void rule__Statement_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3393:1: ( rule__Statement_part__Group__1__Impl rule__Statement_part__Group__2 )
            // InternalPascal.g:3394:2: rule__Statement_part__Group__1__Impl rule__Statement_part__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__Statement_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement_part__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__Group__1"


    // $ANTLR start "rule__Statement_part__Group__1__Impl"
    // InternalPascal.g:3401:1: rule__Statement_part__Group__1__Impl : ( ( rule__Statement_part__SequenceAssignment_1 ) ) ;
    public final void rule__Statement_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3405:1: ( ( ( rule__Statement_part__SequenceAssignment_1 ) ) )
            // InternalPascal.g:3406:1: ( ( rule__Statement_part__SequenceAssignment_1 ) )
            {
            // InternalPascal.g:3406:1: ( ( rule__Statement_part__SequenceAssignment_1 ) )
            // InternalPascal.g:3407:2: ( rule__Statement_part__SequenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_partAccess().getSequenceAssignment_1()); 
            }
            // InternalPascal.g:3408:2: ( rule__Statement_part__SequenceAssignment_1 )
            // InternalPascal.g:3408:3: rule__Statement_part__SequenceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Statement_part__SequenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_partAccess().getSequenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__Group__1__Impl"


    // $ANTLR start "rule__Statement_part__Group__2"
    // InternalPascal.g:3416:1: rule__Statement_part__Group__2 : rule__Statement_part__Group__2__Impl ;
    public final void rule__Statement_part__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3420:1: ( rule__Statement_part__Group__2__Impl )
            // InternalPascal.g:3421:2: rule__Statement_part__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement_part__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__Group__2"


    // $ANTLR start "rule__Statement_part__Group__2__Impl"
    // InternalPascal.g:3427:1: rule__Statement_part__Group__2__Impl : ( 'end' ) ;
    public final void rule__Statement_part__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3431:1: ( ( 'end' ) )
            // InternalPascal.g:3432:1: ( 'end' )
            {
            // InternalPascal.g:3432:1: ( 'end' )
            // InternalPascal.g:3433:2: 'end'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_partAccess().getEndKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_partAccess().getEndKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__Group__2__Impl"


    // $ANTLR start "rule__Statement_sequence__Group__0"
    // InternalPascal.g:3443:1: rule__Statement_sequence__Group__0 : rule__Statement_sequence__Group__0__Impl rule__Statement_sequence__Group__1 ;
    public final void rule__Statement_sequence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3447:1: ( rule__Statement_sequence__Group__0__Impl rule__Statement_sequence__Group__1 )
            // InternalPascal.g:3448:2: rule__Statement_sequence__Group__0__Impl rule__Statement_sequence__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Statement_sequence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group__0"


    // $ANTLR start "rule__Statement_sequence__Group__0__Impl"
    // InternalPascal.g:3455:1: rule__Statement_sequence__Group__0__Impl : ( ( rule__Statement_sequence__StatementsAssignment_0 ) ) ;
    public final void rule__Statement_sequence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3459:1: ( ( ( rule__Statement_sequence__StatementsAssignment_0 ) ) )
            // InternalPascal.g:3460:1: ( ( rule__Statement_sequence__StatementsAssignment_0 ) )
            {
            // InternalPascal.g:3460:1: ( ( rule__Statement_sequence__StatementsAssignment_0 ) )
            // InternalPascal.g:3461:2: ( rule__Statement_sequence__StatementsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_0()); 
            }
            // InternalPascal.g:3462:2: ( rule__Statement_sequence__StatementsAssignment_0 )
            // InternalPascal.g:3462:3: rule__Statement_sequence__StatementsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__StatementsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group__0__Impl"


    // $ANTLR start "rule__Statement_sequence__Group__1"
    // InternalPascal.g:3470:1: rule__Statement_sequence__Group__1 : rule__Statement_sequence__Group__1__Impl ;
    public final void rule__Statement_sequence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3474:1: ( rule__Statement_sequence__Group__1__Impl )
            // InternalPascal.g:3475:2: rule__Statement_sequence__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group__1"


    // $ANTLR start "rule__Statement_sequence__Group__1__Impl"
    // InternalPascal.g:3481:1: rule__Statement_sequence__Group__1__Impl : ( ( rule__Statement_sequence__Group_1__0 )* ) ;
    public final void rule__Statement_sequence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3485:1: ( ( ( rule__Statement_sequence__Group_1__0 )* ) )
            // InternalPascal.g:3486:1: ( ( rule__Statement_sequence__Group_1__0 )* )
            {
            // InternalPascal.g:3486:1: ( ( rule__Statement_sequence__Group_1__0 )* )
            // InternalPascal.g:3487:2: ( rule__Statement_sequence__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getGroup_1()); 
            }
            // InternalPascal.g:3488:2: ( rule__Statement_sequence__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==26) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalPascal.g:3488:3: rule__Statement_sequence__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Statement_sequence__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group__1__Impl"


    // $ANTLR start "rule__Statement_sequence__Group_1__0"
    // InternalPascal.g:3497:1: rule__Statement_sequence__Group_1__0 : rule__Statement_sequence__Group_1__0__Impl rule__Statement_sequence__Group_1__1 ;
    public final void rule__Statement_sequence__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3501:1: ( rule__Statement_sequence__Group_1__0__Impl rule__Statement_sequence__Group_1__1 )
            // InternalPascal.g:3502:2: rule__Statement_sequence__Group_1__0__Impl rule__Statement_sequence__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Statement_sequence__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group_1__0"


    // $ANTLR start "rule__Statement_sequence__Group_1__0__Impl"
    // InternalPascal.g:3509:1: rule__Statement_sequence__Group_1__0__Impl : ( ';' ) ;
    public final void rule__Statement_sequence__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3513:1: ( ( ';' ) )
            // InternalPascal.g:3514:1: ( ';' )
            {
            // InternalPascal.g:3514:1: ( ';' )
            // InternalPascal.g:3515:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getSemicolonKeyword_1_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getSemicolonKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group_1__0__Impl"


    // $ANTLR start "rule__Statement_sequence__Group_1__1"
    // InternalPascal.g:3524:1: rule__Statement_sequence__Group_1__1 : rule__Statement_sequence__Group_1__1__Impl ;
    public final void rule__Statement_sequence__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3528:1: ( rule__Statement_sequence__Group_1__1__Impl )
            // InternalPascal.g:3529:2: rule__Statement_sequence__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group_1__1"


    // $ANTLR start "rule__Statement_sequence__Group_1__1__Impl"
    // InternalPascal.g:3535:1: rule__Statement_sequence__Group_1__1__Impl : ( ( rule__Statement_sequence__StatementsAssignment_1_1 ) ) ;
    public final void rule__Statement_sequence__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3539:1: ( ( ( rule__Statement_sequence__StatementsAssignment_1_1 ) ) )
            // InternalPascal.g:3540:1: ( ( rule__Statement_sequence__StatementsAssignment_1_1 ) )
            {
            // InternalPascal.g:3540:1: ( ( rule__Statement_sequence__StatementsAssignment_1_1 ) )
            // InternalPascal.g:3541:2: ( rule__Statement_sequence__StatementsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_1_1()); 
            }
            // InternalPascal.g:3542:2: ( rule__Statement_sequence__StatementsAssignment_1_1 )
            // InternalPascal.g:3542:3: rule__Statement_sequence__StatementsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Statement_sequence__StatementsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__Group_1__1__Impl"


    // $ANTLR start "rule__Statement__Group__0"
    // InternalPascal.g:3551:1: rule__Statement__Group__0 : rule__Statement__Group__0__Impl rule__Statement__Group__1 ;
    public final void rule__Statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3555:1: ( rule__Statement__Group__0__Impl rule__Statement__Group__1 )
            // InternalPascal.g:3556:2: rule__Statement__Group__0__Impl rule__Statement__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__Statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group__0"


    // $ANTLR start "rule__Statement__Group__0__Impl"
    // InternalPascal.g:3563:1: rule__Statement__Group__0__Impl : ( ( rule__Statement__Group_0__0 )? ) ;
    public final void rule__Statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3567:1: ( ( ( rule__Statement__Group_0__0 )? ) )
            // InternalPascal.g:3568:1: ( ( rule__Statement__Group_0__0 )? )
            {
            // InternalPascal.g:3568:1: ( ( rule__Statement__Group_0__0 )? )
            // InternalPascal.g:3569:2: ( rule__Statement__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getGroup_0()); 
            }
            // InternalPascal.g:3570:2: ( rule__Statement__Group_0__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=RULE_SIGNED_INTEGER_NUMBER && LA41_0<=RULE_INTEGER_NUMBER)) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalPascal.g:3570:3: rule__Statement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group__0__Impl"


    // $ANTLR start "rule__Statement__Group__1"
    // InternalPascal.g:3578:1: rule__Statement__Group__1 : rule__Statement__Group__1__Impl ;
    public final void rule__Statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3582:1: ( rule__Statement__Group__1__Impl )
            // InternalPascal.g:3583:2: rule__Statement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group__1"


    // $ANTLR start "rule__Statement__Group__1__Impl"
    // InternalPascal.g:3589:1: rule__Statement__Group__1__Impl : ( ( rule__Statement__Alternatives_1 ) ) ;
    public final void rule__Statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3593:1: ( ( ( rule__Statement__Alternatives_1 ) ) )
            // InternalPascal.g:3594:1: ( ( rule__Statement__Alternatives_1 ) )
            {
            // InternalPascal.g:3594:1: ( ( rule__Statement__Alternatives_1 ) )
            // InternalPascal.g:3595:2: ( rule__Statement__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getAlternatives_1()); 
            }
            // InternalPascal.g:3596:2: ( rule__Statement__Alternatives_1 )
            // InternalPascal.g:3596:3: rule__Statement__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group__1__Impl"


    // $ANTLR start "rule__Statement__Group_0__0"
    // InternalPascal.g:3605:1: rule__Statement__Group_0__0 : rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1 ;
    public final void rule__Statement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3609:1: ( rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1 )
            // InternalPascal.g:3610:2: rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1
            {
            pushFollow(FOLLOW_15);
            rule__Statement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__0"


    // $ANTLR start "rule__Statement__Group_0__0__Impl"
    // InternalPascal.g:3617:1: rule__Statement__Group_0__0__Impl : ( ( rule__Statement__LabelAssignment_0_0 ) ) ;
    public final void rule__Statement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3621:1: ( ( ( rule__Statement__LabelAssignment_0_0 ) ) )
            // InternalPascal.g:3622:1: ( ( rule__Statement__LabelAssignment_0_0 ) )
            {
            // InternalPascal.g:3622:1: ( ( rule__Statement__LabelAssignment_0_0 ) )
            // InternalPascal.g:3623:2: ( rule__Statement__LabelAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getLabelAssignment_0_0()); 
            }
            // InternalPascal.g:3624:2: ( rule__Statement__LabelAssignment_0_0 )
            // InternalPascal.g:3624:3: rule__Statement__LabelAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Statement__LabelAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getLabelAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__0__Impl"


    // $ANTLR start "rule__Statement__Group_0__1"
    // InternalPascal.g:3632:1: rule__Statement__Group_0__1 : rule__Statement__Group_0__1__Impl ;
    public final void rule__Statement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3636:1: ( rule__Statement__Group_0__1__Impl )
            // InternalPascal.g:3637:2: rule__Statement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__1"


    // $ANTLR start "rule__Statement__Group_0__1__Impl"
    // InternalPascal.g:3643:1: rule__Statement__Group_0__1__Impl : ( ':' ) ;
    public final void rule__Statement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3647:1: ( ( ':' ) )
            // InternalPascal.g:3648:1: ( ':' )
            {
            // InternalPascal.g:3648:1: ( ':' )
            // InternalPascal.g:3649:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getColonKeyword_0_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getColonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__1__Impl"


    // $ANTLR start "rule__Assignment_statement__Group__0"
    // InternalPascal.g:3659:1: rule__Assignment_statement__Group__0 : rule__Assignment_statement__Group__0__Impl rule__Assignment_statement__Group__1 ;
    public final void rule__Assignment_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3663:1: ( rule__Assignment_statement__Group__0__Impl rule__Assignment_statement__Group__1 )
            // InternalPascal.g:3664:2: rule__Assignment_statement__Group__0__Impl rule__Assignment_statement__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Assignment_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__Group__0"


    // $ANTLR start "rule__Assignment_statement__Group__0__Impl"
    // InternalPascal.g:3671:1: rule__Assignment_statement__Group__0__Impl : ( ( rule__Assignment_statement__VariableAssignment_0 ) ) ;
    public final void rule__Assignment_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3675:1: ( ( ( rule__Assignment_statement__VariableAssignment_0 ) ) )
            // InternalPascal.g:3676:1: ( ( rule__Assignment_statement__VariableAssignment_0 ) )
            {
            // InternalPascal.g:3676:1: ( ( rule__Assignment_statement__VariableAssignment_0 ) )
            // InternalPascal.g:3677:2: ( rule__Assignment_statement__VariableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0()); 
            }
            // InternalPascal.g:3678:2: ( rule__Assignment_statement__VariableAssignment_0 )
            // InternalPascal.g:3678:3: rule__Assignment_statement__VariableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Assignment_statement__VariableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__Group__0__Impl"


    // $ANTLR start "rule__Assignment_statement__Group__1"
    // InternalPascal.g:3686:1: rule__Assignment_statement__Group__1 : rule__Assignment_statement__Group__1__Impl rule__Assignment_statement__Group__2 ;
    public final void rule__Assignment_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3690:1: ( rule__Assignment_statement__Group__1__Impl rule__Assignment_statement__Group__2 )
            // InternalPascal.g:3691:2: rule__Assignment_statement__Group__1__Impl rule__Assignment_statement__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Assignment_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__Group__1"


    // $ANTLR start "rule__Assignment_statement__Group__1__Impl"
    // InternalPascal.g:3698:1: rule__Assignment_statement__Group__1__Impl : ( ':=' ) ;
    public final void rule__Assignment_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3702:1: ( ( ':=' ) )
            // InternalPascal.g:3703:1: ( ':=' )
            {
            // InternalPascal.g:3703:1: ( ':=' )
            // InternalPascal.g:3704:2: ':='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__Group__1__Impl"


    // $ANTLR start "rule__Assignment_statement__Group__2"
    // InternalPascal.g:3713:1: rule__Assignment_statement__Group__2 : rule__Assignment_statement__Group__2__Impl ;
    public final void rule__Assignment_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3717:1: ( rule__Assignment_statement__Group__2__Impl )
            // InternalPascal.g:3718:2: rule__Assignment_statement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Assignment_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__Group__2"


    // $ANTLR start "rule__Assignment_statement__Group__2__Impl"
    // InternalPascal.g:3724:1: rule__Assignment_statement__Group__2__Impl : ( ( rule__Assignment_statement__ExpressionAssignment_2 ) ) ;
    public final void rule__Assignment_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3728:1: ( ( ( rule__Assignment_statement__ExpressionAssignment_2 ) ) )
            // InternalPascal.g:3729:1: ( ( rule__Assignment_statement__ExpressionAssignment_2 ) )
            {
            // InternalPascal.g:3729:1: ( ( rule__Assignment_statement__ExpressionAssignment_2 ) )
            // InternalPascal.g:3730:2: ( rule__Assignment_statement__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); 
            }
            // InternalPascal.g:3731:2: ( rule__Assignment_statement__ExpressionAssignment_2 )
            // InternalPascal.g:3731:3: rule__Assignment_statement__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Assignment_statement__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__Group__2__Impl"


    // $ANTLR start "rule__Variable__Group__0"
    // InternalPascal.g:3740:1: rule__Variable__Group__0 : rule__Variable__Group__0__Impl rule__Variable__Group__1 ;
    public final void rule__Variable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3744:1: ( rule__Variable__Group__0__Impl rule__Variable__Group__1 )
            // InternalPascal.g:3745:2: rule__Variable__Group__0__Impl rule__Variable__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__Variable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__Group__0"


    // $ANTLR start "rule__Variable__Group__0__Impl"
    // InternalPascal.g:3752:1: rule__Variable__Group__0__Impl : ( ( rule__Variable__NameAssignment_0 ) ) ;
    public final void rule__Variable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3756:1: ( ( ( rule__Variable__NameAssignment_0 ) ) )
            // InternalPascal.g:3757:1: ( ( rule__Variable__NameAssignment_0 ) )
            {
            // InternalPascal.g:3757:1: ( ( rule__Variable__NameAssignment_0 ) )
            // InternalPascal.g:3758:2: ( rule__Variable__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getNameAssignment_0()); 
            }
            // InternalPascal.g:3759:2: ( rule__Variable__NameAssignment_0 )
            // InternalPascal.g:3759:3: rule__Variable__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Variable__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__Group__0__Impl"


    // $ANTLR start "rule__Variable__Group__1"
    // InternalPascal.g:3767:1: rule__Variable__Group__1 : rule__Variable__Group__1__Impl ;
    public final void rule__Variable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3771:1: ( rule__Variable__Group__1__Impl )
            // InternalPascal.g:3772:2: rule__Variable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__Group__1"


    // $ANTLR start "rule__Variable__Group__1__Impl"
    // InternalPascal.g:3778:1: rule__Variable__Group__1__Impl : ( ( rule__Variable__VariableAssignment_1 ) ) ;
    public final void rule__Variable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3782:1: ( ( ( rule__Variable__VariableAssignment_1 ) ) )
            // InternalPascal.g:3783:1: ( ( rule__Variable__VariableAssignment_1 ) )
            {
            // InternalPascal.g:3783:1: ( ( rule__Variable__VariableAssignment_1 ) )
            // InternalPascal.g:3784:2: ( rule__Variable__VariableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getVariableAssignment_1()); 
            }
            // InternalPascal.g:3785:2: ( rule__Variable__VariableAssignment_1 )
            // InternalPascal.g:3785:3: rule__Variable__VariableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Variable__VariableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getVariableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__Group__1__Impl"


    // $ANTLR start "rule__Var___Group_0__0"
    // InternalPascal.g:3794:1: rule__Var___Group_0__0 : rule__Var___Group_0__0__Impl rule__Var___Group_0__1 ;
    public final void rule__Var___Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3798:1: ( rule__Var___Group_0__0__Impl rule__Var___Group_0__1 )
            // InternalPascal.g:3799:2: rule__Var___Group_0__0__Impl rule__Var___Group_0__1
            {
            pushFollow(FOLLOW_17);
            rule__Var___Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Var___Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__0"


    // $ANTLR start "rule__Var___Group_0__0__Impl"
    // InternalPascal.g:3806:1: rule__Var___Group_0__0__Impl : ( '[' ) ;
    public final void rule__Var___Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3810:1: ( ( '[' ) )
            // InternalPascal.g:3811:1: ( '[' )
            {
            // InternalPascal.g:3811:1: ( '[' )
            // InternalPascal.g:3812:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getLeftSquareBracketKeyword_0_0()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getLeftSquareBracketKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__0__Impl"


    // $ANTLR start "rule__Var___Group_0__1"
    // InternalPascal.g:3821:1: rule__Var___Group_0__1 : rule__Var___Group_0__1__Impl rule__Var___Group_0__2 ;
    public final void rule__Var___Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3825:1: ( rule__Var___Group_0__1__Impl rule__Var___Group_0__2 )
            // InternalPascal.g:3826:2: rule__Var___Group_0__1__Impl rule__Var___Group_0__2
            {
            pushFollow(FOLLOW_19);
            rule__Var___Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Var___Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__1"


    // $ANTLR start "rule__Var___Group_0__1__Impl"
    // InternalPascal.g:3833:1: rule__Var___Group_0__1__Impl : ( ( rule__Var___ExpressionsAssignment_0_1 ) ) ;
    public final void rule__Var___Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3837:1: ( ( ( rule__Var___ExpressionsAssignment_0_1 ) ) )
            // InternalPascal.g:3838:1: ( ( rule__Var___ExpressionsAssignment_0_1 ) )
            {
            // InternalPascal.g:3838:1: ( ( rule__Var___ExpressionsAssignment_0_1 ) )
            // InternalPascal.g:3839:2: ( rule__Var___ExpressionsAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getExpressionsAssignment_0_1()); 
            }
            // InternalPascal.g:3840:2: ( rule__Var___ExpressionsAssignment_0_1 )
            // InternalPascal.g:3840:3: rule__Var___ExpressionsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Var___ExpressionsAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getExpressionsAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__1__Impl"


    // $ANTLR start "rule__Var___Group_0__2"
    // InternalPascal.g:3848:1: rule__Var___Group_0__2 : rule__Var___Group_0__2__Impl rule__Var___Group_0__3 ;
    public final void rule__Var___Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3852:1: ( rule__Var___Group_0__2__Impl rule__Var___Group_0__3 )
            // InternalPascal.g:3853:2: rule__Var___Group_0__2__Impl rule__Var___Group_0__3
            {
            pushFollow(FOLLOW_18);
            rule__Var___Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Var___Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__2"


    // $ANTLR start "rule__Var___Group_0__2__Impl"
    // InternalPascal.g:3860:1: rule__Var___Group_0__2__Impl : ( ']' ) ;
    public final void rule__Var___Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3864:1: ( ( ']' ) )
            // InternalPascal.g:3865:1: ( ']' )
            {
            // InternalPascal.g:3865:1: ( ']' )
            // InternalPascal.g:3866:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getRightSquareBracketKeyword_0_2()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getRightSquareBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__2__Impl"


    // $ANTLR start "rule__Var___Group_0__3"
    // InternalPascal.g:3875:1: rule__Var___Group_0__3 : rule__Var___Group_0__3__Impl ;
    public final void rule__Var___Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3879:1: ( rule__Var___Group_0__3__Impl )
            // InternalPascal.g:3880:2: rule__Var___Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Var___Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__3"


    // $ANTLR start "rule__Var___Group_0__3__Impl"
    // InternalPascal.g:3886:1: rule__Var___Group_0__3__Impl : ( ( rule__Var___ArrayAssignment_0_3 ) ) ;
    public final void rule__Var___Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3890:1: ( ( ( rule__Var___ArrayAssignment_0_3 ) ) )
            // InternalPascal.g:3891:1: ( ( rule__Var___ArrayAssignment_0_3 ) )
            {
            // InternalPascal.g:3891:1: ( ( rule__Var___ArrayAssignment_0_3 ) )
            // InternalPascal.g:3892:2: ( rule__Var___ArrayAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getArrayAssignment_0_3()); 
            }
            // InternalPascal.g:3893:2: ( rule__Var___ArrayAssignment_0_3 )
            // InternalPascal.g:3893:3: rule__Var___ArrayAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__Var___ArrayAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getArrayAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_0__3__Impl"


    // $ANTLR start "rule__Var___Group_1__0"
    // InternalPascal.g:3902:1: rule__Var___Group_1__0 : rule__Var___Group_1__0__Impl rule__Var___Group_1__1 ;
    public final void rule__Var___Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3906:1: ( rule__Var___Group_1__0__Impl rule__Var___Group_1__1 )
            // InternalPascal.g:3907:2: rule__Var___Group_1__0__Impl rule__Var___Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Var___Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Var___Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_1__0"


    // $ANTLR start "rule__Var___Group_1__0__Impl"
    // InternalPascal.g:3914:1: rule__Var___Group_1__0__Impl : ( ( rule__Var___AccessorAssignment_1_0 ) ) ;
    public final void rule__Var___Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3918:1: ( ( ( rule__Var___AccessorAssignment_1_0 ) ) )
            // InternalPascal.g:3919:1: ( ( rule__Var___AccessorAssignment_1_0 ) )
            {
            // InternalPascal.g:3919:1: ( ( rule__Var___AccessorAssignment_1_0 ) )
            // InternalPascal.g:3920:2: ( rule__Var___AccessorAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getAccessorAssignment_1_0()); 
            }
            // InternalPascal.g:3921:2: ( rule__Var___AccessorAssignment_1_0 )
            // InternalPascal.g:3921:3: rule__Var___AccessorAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Var___AccessorAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getAccessorAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_1__0__Impl"


    // $ANTLR start "rule__Var___Group_1__1"
    // InternalPascal.g:3929:1: rule__Var___Group_1__1 : rule__Var___Group_1__1__Impl rule__Var___Group_1__2 ;
    public final void rule__Var___Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3933:1: ( rule__Var___Group_1__1__Impl rule__Var___Group_1__2 )
            // InternalPascal.g:3934:2: rule__Var___Group_1__1__Impl rule__Var___Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__Var___Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Var___Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_1__1"


    // $ANTLR start "rule__Var___Group_1__1__Impl"
    // InternalPascal.g:3941:1: rule__Var___Group_1__1__Impl : ( ( rule__Var___NameAssignment_1_1 ) ) ;
    public final void rule__Var___Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3945:1: ( ( ( rule__Var___NameAssignment_1_1 ) ) )
            // InternalPascal.g:3946:1: ( ( rule__Var___NameAssignment_1_1 ) )
            {
            // InternalPascal.g:3946:1: ( ( rule__Var___NameAssignment_1_1 ) )
            // InternalPascal.g:3947:2: ( rule__Var___NameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getNameAssignment_1_1()); 
            }
            // InternalPascal.g:3948:2: ( rule__Var___NameAssignment_1_1 )
            // InternalPascal.g:3948:3: rule__Var___NameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Var___NameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_1__1__Impl"


    // $ANTLR start "rule__Var___Group_1__2"
    // InternalPascal.g:3956:1: rule__Var___Group_1__2 : rule__Var___Group_1__2__Impl ;
    public final void rule__Var___Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3960:1: ( rule__Var___Group_1__2__Impl )
            // InternalPascal.g:3961:2: rule__Var___Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Var___Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_1__2"


    // $ANTLR start "rule__Var___Group_1__2__Impl"
    // InternalPascal.g:3967:1: rule__Var___Group_1__2__Impl : ( ( rule__Var___VariableAssignment_1_2 ) ) ;
    public final void rule__Var___Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3971:1: ( ( ( rule__Var___VariableAssignment_1_2 ) ) )
            // InternalPascal.g:3972:1: ( ( rule__Var___VariableAssignment_1_2 ) )
            {
            // InternalPascal.g:3972:1: ( ( rule__Var___VariableAssignment_1_2 ) )
            // InternalPascal.g:3973:2: ( rule__Var___VariableAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getVariableAssignment_1_2()); 
            }
            // InternalPascal.g:3974:2: ( rule__Var___VariableAssignment_1_2 )
            // InternalPascal.g:3974:3: rule__Var___VariableAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Var___VariableAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getVariableAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_1__2__Impl"


    // $ANTLR start "rule__Var___Group_2__0"
    // InternalPascal.g:3983:1: rule__Var___Group_2__0 : rule__Var___Group_2__0__Impl rule__Var___Group_2__1 ;
    public final void rule__Var___Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3987:1: ( rule__Var___Group_2__0__Impl rule__Var___Group_2__1 )
            // InternalPascal.g:3988:2: rule__Var___Group_2__0__Impl rule__Var___Group_2__1
            {
            pushFollow(FOLLOW_18);
            rule__Var___Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Var___Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_2__0"


    // $ANTLR start "rule__Var___Group_2__0__Impl"
    // InternalPascal.g:3995:1: rule__Var___Group_2__0__Impl : ( '^' ) ;
    public final void rule__Var___Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:3999:1: ( ( '^' ) )
            // InternalPascal.g:4000:1: ( '^' )
            {
            // InternalPascal.g:4000:1: ( '^' )
            // InternalPascal.g:4001:2: '^'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getCircumflexAccentKeyword_2_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getCircumflexAccentKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_2__0__Impl"


    // $ANTLR start "rule__Var___Group_2__1"
    // InternalPascal.g:4010:1: rule__Var___Group_2__1 : rule__Var___Group_2__1__Impl ;
    public final void rule__Var___Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4014:1: ( rule__Var___Group_2__1__Impl )
            // InternalPascal.g:4015:2: rule__Var___Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Var___Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_2__1"


    // $ANTLR start "rule__Var___Group_2__1__Impl"
    // InternalPascal.g:4021:1: rule__Var___Group_2__1__Impl : ( ( rule__Var___PointerAssignment_2_1 ) ) ;
    public final void rule__Var___Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4025:1: ( ( ( rule__Var___PointerAssignment_2_1 ) ) )
            // InternalPascal.g:4026:1: ( ( rule__Var___PointerAssignment_2_1 ) )
            {
            // InternalPascal.g:4026:1: ( ( rule__Var___PointerAssignment_2_1 ) )
            // InternalPascal.g:4027:2: ( rule__Var___PointerAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getPointerAssignment_2_1()); 
            }
            // InternalPascal.g:4028:2: ( rule__Var___PointerAssignment_2_1 )
            // InternalPascal.g:4028:3: rule__Var___PointerAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Var___PointerAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getPointerAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___Group_2__1__Impl"


    // $ANTLR start "rule__Expression_list__Group__0"
    // InternalPascal.g:4037:1: rule__Expression_list__Group__0 : rule__Expression_list__Group__0__Impl rule__Expression_list__Group__1 ;
    public final void rule__Expression_list__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4041:1: ( rule__Expression_list__Group__0__Impl rule__Expression_list__Group__1 )
            // InternalPascal.g:4042:2: rule__Expression_list__Group__0__Impl rule__Expression_list__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Expression_list__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression_list__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group__0"


    // $ANTLR start "rule__Expression_list__Group__0__Impl"
    // InternalPascal.g:4049:1: rule__Expression_list__Group__0__Impl : ( ( rule__Expression_list__ExpressionsAssignment_0 ) ) ;
    public final void rule__Expression_list__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4053:1: ( ( ( rule__Expression_list__ExpressionsAssignment_0 ) ) )
            // InternalPascal.g:4054:1: ( ( rule__Expression_list__ExpressionsAssignment_0 ) )
            {
            // InternalPascal.g:4054:1: ( ( rule__Expression_list__ExpressionsAssignment_0 ) )
            // InternalPascal.g:4055:2: ( rule__Expression_list__ExpressionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getExpressionsAssignment_0()); 
            }
            // InternalPascal.g:4056:2: ( rule__Expression_list__ExpressionsAssignment_0 )
            // InternalPascal.g:4056:3: rule__Expression_list__ExpressionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression_list__ExpressionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getExpressionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group__0__Impl"


    // $ANTLR start "rule__Expression_list__Group__1"
    // InternalPascal.g:4064:1: rule__Expression_list__Group__1 : rule__Expression_list__Group__1__Impl ;
    public final void rule__Expression_list__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4068:1: ( rule__Expression_list__Group__1__Impl )
            // InternalPascal.g:4069:2: rule__Expression_list__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression_list__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group__1"


    // $ANTLR start "rule__Expression_list__Group__1__Impl"
    // InternalPascal.g:4075:1: rule__Expression_list__Group__1__Impl : ( ( rule__Expression_list__Group_1__0 )* ) ;
    public final void rule__Expression_list__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4079:1: ( ( ( rule__Expression_list__Group_1__0 )* ) )
            // InternalPascal.g:4080:1: ( ( rule__Expression_list__Group_1__0 )* )
            {
            // InternalPascal.g:4080:1: ( ( rule__Expression_list__Group_1__0 )* )
            // InternalPascal.g:4081:2: ( rule__Expression_list__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getGroup_1()); 
            }
            // InternalPascal.g:4082:2: ( rule__Expression_list__Group_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==29) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalPascal.g:4082:3: rule__Expression_list__Group_1__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Expression_list__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group__1__Impl"


    // $ANTLR start "rule__Expression_list__Group_1__0"
    // InternalPascal.g:4091:1: rule__Expression_list__Group_1__0 : rule__Expression_list__Group_1__0__Impl rule__Expression_list__Group_1__1 ;
    public final void rule__Expression_list__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4095:1: ( rule__Expression_list__Group_1__0__Impl rule__Expression_list__Group_1__1 )
            // InternalPascal.g:4096:2: rule__Expression_list__Group_1__0__Impl rule__Expression_list__Group_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Expression_list__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression_list__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group_1__0"


    // $ANTLR start "rule__Expression_list__Group_1__0__Impl"
    // InternalPascal.g:4103:1: rule__Expression_list__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Expression_list__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4107:1: ( ( ',' ) )
            // InternalPascal.g:4108:1: ( ',' )
            {
            // InternalPascal.g:4108:1: ( ',' )
            // InternalPascal.g:4109:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group_1__0__Impl"


    // $ANTLR start "rule__Expression_list__Group_1__1"
    // InternalPascal.g:4118:1: rule__Expression_list__Group_1__1 : rule__Expression_list__Group_1__1__Impl ;
    public final void rule__Expression_list__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4122:1: ( rule__Expression_list__Group_1__1__Impl )
            // InternalPascal.g:4123:2: rule__Expression_list__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression_list__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group_1__1"


    // $ANTLR start "rule__Expression_list__Group_1__1__Impl"
    // InternalPascal.g:4129:1: rule__Expression_list__Group_1__1__Impl : ( ( rule__Expression_list__ExpressionsAssignment_1_1 ) ) ;
    public final void rule__Expression_list__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4133:1: ( ( ( rule__Expression_list__ExpressionsAssignment_1_1 ) ) )
            // InternalPascal.g:4134:1: ( ( rule__Expression_list__ExpressionsAssignment_1_1 ) )
            {
            // InternalPascal.g:4134:1: ( ( rule__Expression_list__ExpressionsAssignment_1_1 ) )
            // InternalPascal.g:4135:2: ( rule__Expression_list__ExpressionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getExpressionsAssignment_1_1()); 
            }
            // InternalPascal.g:4136:2: ( rule__Expression_list__ExpressionsAssignment_1_1 )
            // InternalPascal.g:4136:3: rule__Expression_list__ExpressionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression_list__ExpressionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getExpressionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__Group_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalPascal.g:4145:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4149:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalPascal.g:4150:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalPascal.g:4157:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__ExpressionsAssignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4161:1: ( ( ( rule__Expression__ExpressionsAssignment_0 ) ) )
            // InternalPascal.g:4162:1: ( ( rule__Expression__ExpressionsAssignment_0 ) )
            {
            // InternalPascal.g:4162:1: ( ( rule__Expression__ExpressionsAssignment_0 ) )
            // InternalPascal.g:4163:2: ( rule__Expression__ExpressionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExpressionsAssignment_0()); 
            }
            // InternalPascal.g:4164:2: ( rule__Expression__ExpressionsAssignment_0 )
            // InternalPascal.g:4164:3: rule__Expression__ExpressionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__ExpressionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExpressionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalPascal.g:4172:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4176:1: ( rule__Expression__Group__1__Impl )
            // InternalPascal.g:4177:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalPascal.g:4183:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Group_1__0 )? ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4187:1: ( ( ( rule__Expression__Group_1__0 )? ) )
            // InternalPascal.g:4188:1: ( ( rule__Expression__Group_1__0 )? )
            {
            // InternalPascal.g:4188:1: ( ( rule__Expression__Group_1__0 )? )
            // InternalPascal.g:4189:2: ( rule__Expression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup_1()); 
            }
            // InternalPascal.g:4190:2: ( rule__Expression__Group_1__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_RELATIONAL_OPERATOR||LA43_0==52||LA43_0==62) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalPascal.g:4190:3: rule__Expression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__Expression__Group_1__0"
    // InternalPascal.g:4199:1: rule__Expression__Group_1__0 : rule__Expression__Group_1__0__Impl rule__Expression__Group_1__1 ;
    public final void rule__Expression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4203:1: ( rule__Expression__Group_1__0__Impl rule__Expression__Group_1__1 )
            // InternalPascal.g:4204:2: rule__Expression__Group_1__0__Impl rule__Expression__Group_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Expression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group_1__0"


    // $ANTLR start "rule__Expression__Group_1__0__Impl"
    // InternalPascal.g:4211:1: rule__Expression__Group_1__0__Impl : ( ( rule__Expression__Alternatives_1_0 ) ) ;
    public final void rule__Expression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4215:1: ( ( ( rule__Expression__Alternatives_1_0 ) ) )
            // InternalPascal.g:4216:1: ( ( rule__Expression__Alternatives_1_0 ) )
            {
            // InternalPascal.g:4216:1: ( ( rule__Expression__Alternatives_1_0 ) )
            // InternalPascal.g:4217:2: ( rule__Expression__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives_1_0()); 
            }
            // InternalPascal.g:4218:2: ( rule__Expression__Alternatives_1_0 )
            // InternalPascal.g:4218:3: rule__Expression__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group_1__0__Impl"


    // $ANTLR start "rule__Expression__Group_1__1"
    // InternalPascal.g:4226:1: rule__Expression__Group_1__1 : rule__Expression__Group_1__1__Impl ;
    public final void rule__Expression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4230:1: ( rule__Expression__Group_1__1__Impl )
            // InternalPascal.g:4231:2: rule__Expression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group_1__1"


    // $ANTLR start "rule__Expression__Group_1__1__Impl"
    // InternalPascal.g:4237:1: rule__Expression__Group_1__1__Impl : ( ( rule__Expression__ExpressionsAssignment_1_1 ) ) ;
    public final void rule__Expression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4241:1: ( ( ( rule__Expression__ExpressionsAssignment_1_1 ) ) )
            // InternalPascal.g:4242:1: ( ( rule__Expression__ExpressionsAssignment_1_1 ) )
            {
            // InternalPascal.g:4242:1: ( ( rule__Expression__ExpressionsAssignment_1_1 ) )
            // InternalPascal.g:4243:2: ( rule__Expression__ExpressionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExpressionsAssignment_1_1()); 
            }
            // InternalPascal.g:4244:2: ( rule__Expression__ExpressionsAssignment_1_1 )
            // InternalPascal.g:4244:3: rule__Expression__ExpressionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__ExpressionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExpressionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group_1__1__Impl"


    // $ANTLR start "rule__Simple_expression__Group__0"
    // InternalPascal.g:4253:1: rule__Simple_expression__Group__0 : rule__Simple_expression__Group__0__Impl rule__Simple_expression__Group__1 ;
    public final void rule__Simple_expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4257:1: ( rule__Simple_expression__Group__0__Impl rule__Simple_expression__Group__1 )
            // InternalPascal.g:4258:2: rule__Simple_expression__Group__0__Impl rule__Simple_expression__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__Simple_expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group__0"


    // $ANTLR start "rule__Simple_expression__Group__0__Impl"
    // InternalPascal.g:4265:1: rule__Simple_expression__Group__0__Impl : ( ( rule__Simple_expression__PrefixOperatorAssignment_0 )? ) ;
    public final void rule__Simple_expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4269:1: ( ( ( rule__Simple_expression__PrefixOperatorAssignment_0 )? ) )
            // InternalPascal.g:4270:1: ( ( rule__Simple_expression__PrefixOperatorAssignment_0 )? )
            {
            // InternalPascal.g:4270:1: ( ( rule__Simple_expression__PrefixOperatorAssignment_0 )? )
            // InternalPascal.g:4271:2: ( rule__Simple_expression__PrefixOperatorAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getPrefixOperatorAssignment_0()); 
            }
            // InternalPascal.g:4272:2: ( rule__Simple_expression__PrefixOperatorAssignment_0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_ADDITION_OPERATOR) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalPascal.g:4272:3: rule__Simple_expression__PrefixOperatorAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Simple_expression__PrefixOperatorAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getPrefixOperatorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group__0__Impl"


    // $ANTLR start "rule__Simple_expression__Group__1"
    // InternalPascal.g:4280:1: rule__Simple_expression__Group__1 : rule__Simple_expression__Group__1__Impl rule__Simple_expression__Group__2 ;
    public final void rule__Simple_expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4284:1: ( rule__Simple_expression__Group__1__Impl rule__Simple_expression__Group__2 )
            // InternalPascal.g:4285:2: rule__Simple_expression__Group__1__Impl rule__Simple_expression__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__Simple_expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group__1"


    // $ANTLR start "rule__Simple_expression__Group__1__Impl"
    // InternalPascal.g:4292:1: rule__Simple_expression__Group__1__Impl : ( ( rule__Simple_expression__TermsAssignment_1 ) ) ;
    public final void rule__Simple_expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4296:1: ( ( ( rule__Simple_expression__TermsAssignment_1 ) ) )
            // InternalPascal.g:4297:1: ( ( rule__Simple_expression__TermsAssignment_1 ) )
            {
            // InternalPascal.g:4297:1: ( ( rule__Simple_expression__TermsAssignment_1 ) )
            // InternalPascal.g:4298:2: ( rule__Simple_expression__TermsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_1()); 
            }
            // InternalPascal.g:4299:2: ( rule__Simple_expression__TermsAssignment_1 )
            // InternalPascal.g:4299:3: rule__Simple_expression__TermsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Simple_expression__TermsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group__1__Impl"


    // $ANTLR start "rule__Simple_expression__Group__2"
    // InternalPascal.g:4307:1: rule__Simple_expression__Group__2 : rule__Simple_expression__Group__2__Impl ;
    public final void rule__Simple_expression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4311:1: ( rule__Simple_expression__Group__2__Impl )
            // InternalPascal.g:4312:2: rule__Simple_expression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group__2"


    // $ANTLR start "rule__Simple_expression__Group__2__Impl"
    // InternalPascal.g:4318:1: rule__Simple_expression__Group__2__Impl : ( ( rule__Simple_expression__Alternatives_2 )* ) ;
    public final void rule__Simple_expression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4322:1: ( ( ( rule__Simple_expression__Alternatives_2 )* ) )
            // InternalPascal.g:4323:1: ( ( rule__Simple_expression__Alternatives_2 )* )
            {
            // InternalPascal.g:4323:1: ( ( rule__Simple_expression__Alternatives_2 )* )
            // InternalPascal.g:4324:2: ( rule__Simple_expression__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getAlternatives_2()); 
            }
            // InternalPascal.g:4325:2: ( rule__Simple_expression__Alternatives_2 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_INTEGER_NUMBER||LA45_0==RULE_ADDITION_OPERATOR||LA45_0==RULE_REAL_NUMBER||LA45_0==63) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalPascal.g:4325:3: rule__Simple_expression__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__Simple_expression__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group__2__Impl"


    // $ANTLR start "rule__Simple_expression__Group_2_0__0"
    // InternalPascal.g:4334:1: rule__Simple_expression__Group_2_0__0 : rule__Simple_expression__Group_2_0__0__Impl rule__Simple_expression__Group_2_0__1 ;
    public final void rule__Simple_expression__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4338:1: ( rule__Simple_expression__Group_2_0__0__Impl rule__Simple_expression__Group_2_0__1 )
            // InternalPascal.g:4339:2: rule__Simple_expression__Group_2_0__0__Impl rule__Simple_expression__Group_2_0__1
            {
            pushFollow(FOLLOW_17);
            rule__Simple_expression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group_2_0__0"


    // $ANTLR start "rule__Simple_expression__Group_2_0__0__Impl"
    // InternalPascal.g:4346:1: rule__Simple_expression__Group_2_0__0__Impl : ( ( rule__Simple_expression__Alternatives_2_0_0 ) ) ;
    public final void rule__Simple_expression__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4350:1: ( ( ( rule__Simple_expression__Alternatives_2_0_0 ) ) )
            // InternalPascal.g:4351:1: ( ( rule__Simple_expression__Alternatives_2_0_0 ) )
            {
            // InternalPascal.g:4351:1: ( ( rule__Simple_expression__Alternatives_2_0_0 ) )
            // InternalPascal.g:4352:2: ( rule__Simple_expression__Alternatives_2_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0()); 
            }
            // InternalPascal.g:4353:2: ( rule__Simple_expression__Alternatives_2_0_0 )
            // InternalPascal.g:4353:3: rule__Simple_expression__Alternatives_2_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Alternatives_2_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group_2_0__0__Impl"


    // $ANTLR start "rule__Simple_expression__Group_2_0__1"
    // InternalPascal.g:4361:1: rule__Simple_expression__Group_2_0__1 : rule__Simple_expression__Group_2_0__1__Impl ;
    public final void rule__Simple_expression__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4365:1: ( rule__Simple_expression__Group_2_0__1__Impl )
            // InternalPascal.g:4366:2: rule__Simple_expression__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Simple_expression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group_2_0__1"


    // $ANTLR start "rule__Simple_expression__Group_2_0__1__Impl"
    // InternalPascal.g:4372:1: rule__Simple_expression__Group_2_0__1__Impl : ( ( rule__Simple_expression__TermsAssignment_2_0_1 ) ) ;
    public final void rule__Simple_expression__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4376:1: ( ( ( rule__Simple_expression__TermsAssignment_2_0_1 ) ) )
            // InternalPascal.g:4377:1: ( ( rule__Simple_expression__TermsAssignment_2_0_1 ) )
            {
            // InternalPascal.g:4377:1: ( ( rule__Simple_expression__TermsAssignment_2_0_1 ) )
            // InternalPascal.g:4378:2: ( rule__Simple_expression__TermsAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_0_1()); 
            }
            // InternalPascal.g:4379:2: ( rule__Simple_expression__TermsAssignment_2_0_1 )
            // InternalPascal.g:4379:3: rule__Simple_expression__TermsAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Simple_expression__TermsAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__Group_2_0__1__Impl"


    // $ANTLR start "rule__Term__Group__0"
    // InternalPascal.g:4388:1: rule__Term__Group__0 : rule__Term__Group__0__Impl rule__Term__Group__1 ;
    public final void rule__Term__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4392:1: ( rule__Term__Group__0__Impl rule__Term__Group__1 )
            // InternalPascal.g:4393:2: rule__Term__Group__0__Impl rule__Term__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__Term__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Term__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group__0"


    // $ANTLR start "rule__Term__Group__0__Impl"
    // InternalPascal.g:4400:1: rule__Term__Group__0__Impl : ( ( rule__Term__FactorsAssignment_0 ) ) ;
    public final void rule__Term__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4404:1: ( ( ( rule__Term__FactorsAssignment_0 ) ) )
            // InternalPascal.g:4405:1: ( ( rule__Term__FactorsAssignment_0 ) )
            {
            // InternalPascal.g:4405:1: ( ( rule__Term__FactorsAssignment_0 ) )
            // InternalPascal.g:4406:2: ( rule__Term__FactorsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getFactorsAssignment_0()); 
            }
            // InternalPascal.g:4407:2: ( rule__Term__FactorsAssignment_0 )
            // InternalPascal.g:4407:3: rule__Term__FactorsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Term__FactorsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getFactorsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group__0__Impl"


    // $ANTLR start "rule__Term__Group__1"
    // InternalPascal.g:4415:1: rule__Term__Group__1 : rule__Term__Group__1__Impl ;
    public final void rule__Term__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4419:1: ( rule__Term__Group__1__Impl )
            // InternalPascal.g:4420:2: rule__Term__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Term__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group__1"


    // $ANTLR start "rule__Term__Group__1__Impl"
    // InternalPascal.g:4426:1: rule__Term__Group__1__Impl : ( ( rule__Term__Group_1__0 )* ) ;
    public final void rule__Term__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4430:1: ( ( ( rule__Term__Group_1__0 )* ) )
            // InternalPascal.g:4431:1: ( ( rule__Term__Group_1__0 )* )
            {
            // InternalPascal.g:4431:1: ( ( rule__Term__Group_1__0 )* )
            // InternalPascal.g:4432:2: ( rule__Term__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getGroup_1()); 
            }
            // InternalPascal.g:4433:2: ( rule__Term__Group_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==RULE_MULTIPLICATION_OPERATOR||(LA46_0>=64 && LA46_0<=66)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalPascal.g:4433:3: rule__Term__Group_1__0
            	    {
            	    pushFollow(FOLLOW_24);
            	    rule__Term__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group__1__Impl"


    // $ANTLR start "rule__Term__Group_1__0"
    // InternalPascal.g:4442:1: rule__Term__Group_1__0 : rule__Term__Group_1__0__Impl rule__Term__Group_1__1 ;
    public final void rule__Term__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4446:1: ( rule__Term__Group_1__0__Impl rule__Term__Group_1__1 )
            // InternalPascal.g:4447:2: rule__Term__Group_1__0__Impl rule__Term__Group_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Term__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Term__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group_1__0"


    // $ANTLR start "rule__Term__Group_1__0__Impl"
    // InternalPascal.g:4454:1: rule__Term__Group_1__0__Impl : ( ( rule__Term__Alternatives_1_0 ) ) ;
    public final void rule__Term__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4458:1: ( ( ( rule__Term__Alternatives_1_0 ) ) )
            // InternalPascal.g:4459:1: ( ( rule__Term__Alternatives_1_0 ) )
            {
            // InternalPascal.g:4459:1: ( ( rule__Term__Alternatives_1_0 ) )
            // InternalPascal.g:4460:2: ( rule__Term__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getAlternatives_1_0()); 
            }
            // InternalPascal.g:4461:2: ( rule__Term__Alternatives_1_0 )
            // InternalPascal.g:4461:3: rule__Term__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Term__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group_1__0__Impl"


    // $ANTLR start "rule__Term__Group_1__1"
    // InternalPascal.g:4469:1: rule__Term__Group_1__1 : rule__Term__Group_1__1__Impl ;
    public final void rule__Term__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4473:1: ( rule__Term__Group_1__1__Impl )
            // InternalPascal.g:4474:2: rule__Term__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Term__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group_1__1"


    // $ANTLR start "rule__Term__Group_1__1__Impl"
    // InternalPascal.g:4480:1: rule__Term__Group_1__1__Impl : ( ( rule__Term__FactorsAssignment_1_1 ) ) ;
    public final void rule__Term__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4484:1: ( ( ( rule__Term__FactorsAssignment_1_1 ) ) )
            // InternalPascal.g:4485:1: ( ( rule__Term__FactorsAssignment_1_1 ) )
            {
            // InternalPascal.g:4485:1: ( ( rule__Term__FactorsAssignment_1_1 ) )
            // InternalPascal.g:4486:2: ( rule__Term__FactorsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getFactorsAssignment_1_1()); 
            }
            // InternalPascal.g:4487:2: ( rule__Term__FactorsAssignment_1_1 )
            // InternalPascal.g:4487:3: rule__Term__FactorsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Term__FactorsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getFactorsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__Group_1__1__Impl"


    // $ANTLR start "rule__Factor__Group_8__0"
    // InternalPascal.g:4496:1: rule__Factor__Group_8__0 : rule__Factor__Group_8__0__Impl rule__Factor__Group_8__1 ;
    public final void rule__Factor__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4500:1: ( rule__Factor__Group_8__0__Impl rule__Factor__Group_8__1 )
            // InternalPascal.g:4501:2: rule__Factor__Group_8__0__Impl rule__Factor__Group_8__1
            {
            pushFollow(FOLLOW_17);
            rule__Factor__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Factor__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_8__0"


    // $ANTLR start "rule__Factor__Group_8__0__Impl"
    // InternalPascal.g:4508:1: rule__Factor__Group_8__0__Impl : ( '(' ) ;
    public final void rule__Factor__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4512:1: ( ( '(' ) )
            // InternalPascal.g:4513:1: ( '(' )
            {
            // InternalPascal.g:4513:1: ( '(' )
            // InternalPascal.g:4514:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_8_0()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_8__0__Impl"


    // $ANTLR start "rule__Factor__Group_8__1"
    // InternalPascal.g:4523:1: rule__Factor__Group_8__1 : rule__Factor__Group_8__1__Impl rule__Factor__Group_8__2 ;
    public final void rule__Factor__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4527:1: ( rule__Factor__Group_8__1__Impl rule__Factor__Group_8__2 )
            // InternalPascal.g:4528:2: rule__Factor__Group_8__1__Impl rule__Factor__Group_8__2
            {
            pushFollow(FOLLOW_8);
            rule__Factor__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Factor__Group_8__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_8__1"


    // $ANTLR start "rule__Factor__Group_8__1__Impl"
    // InternalPascal.g:4535:1: rule__Factor__Group_8__1__Impl : ( ( rule__Factor__ExpressionAssignment_8_1 ) ) ;
    public final void rule__Factor__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4539:1: ( ( ( rule__Factor__ExpressionAssignment_8_1 ) ) )
            // InternalPascal.g:4540:1: ( ( rule__Factor__ExpressionAssignment_8_1 ) )
            {
            // InternalPascal.g:4540:1: ( ( rule__Factor__ExpressionAssignment_8_1 ) )
            // InternalPascal.g:4541:2: ( rule__Factor__ExpressionAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getExpressionAssignment_8_1()); 
            }
            // InternalPascal.g:4542:2: ( rule__Factor__ExpressionAssignment_8_1 )
            // InternalPascal.g:4542:3: rule__Factor__ExpressionAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Factor__ExpressionAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getExpressionAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_8__1__Impl"


    // $ANTLR start "rule__Factor__Group_8__2"
    // InternalPascal.g:4550:1: rule__Factor__Group_8__2 : rule__Factor__Group_8__2__Impl ;
    public final void rule__Factor__Group_8__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4554:1: ( rule__Factor__Group_8__2__Impl )
            // InternalPascal.g:4555:2: rule__Factor__Group_8__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Factor__Group_8__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_8__2"


    // $ANTLR start "rule__Factor__Group_8__2__Impl"
    // InternalPascal.g:4561:1: rule__Factor__Group_8__2__Impl : ( ')' ) ;
    public final void rule__Factor__Group_8__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4565:1: ( ( ')' ) )
            // InternalPascal.g:4566:1: ( ')' )
            {
            // InternalPascal.g:4566:1: ( ')' )
            // InternalPascal.g:4567:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_8_2()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_8_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_8__2__Impl"


    // $ANTLR start "rule__Factor__Group_9__0"
    // InternalPascal.g:4577:1: rule__Factor__Group_9__0 : rule__Factor__Group_9__0__Impl rule__Factor__Group_9__1 ;
    public final void rule__Factor__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4581:1: ( rule__Factor__Group_9__0__Impl rule__Factor__Group_9__1 )
            // InternalPascal.g:4582:2: rule__Factor__Group_9__0__Impl rule__Factor__Group_9__1
            {
            pushFollow(FOLLOW_17);
            rule__Factor__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Factor__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_9__0"


    // $ANTLR start "rule__Factor__Group_9__0__Impl"
    // InternalPascal.g:4589:1: rule__Factor__Group_9__0__Impl : ( 'not' ) ;
    public final void rule__Factor__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4593:1: ( ( 'not' ) )
            // InternalPascal.g:4594:1: ( 'not' )
            {
            // InternalPascal.g:4594:1: ( 'not' )
            // InternalPascal.g:4595:2: 'not'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getNotKeyword_9_0()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getNotKeyword_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_9__0__Impl"


    // $ANTLR start "rule__Factor__Group_9__1"
    // InternalPascal.g:4604:1: rule__Factor__Group_9__1 : rule__Factor__Group_9__1__Impl ;
    public final void rule__Factor__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4608:1: ( rule__Factor__Group_9__1__Impl )
            // InternalPascal.g:4609:2: rule__Factor__Group_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Factor__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_9__1"


    // $ANTLR start "rule__Factor__Group_9__1__Impl"
    // InternalPascal.g:4615:1: rule__Factor__Group_9__1__Impl : ( ( rule__Factor__NotAssignment_9_1 ) ) ;
    public final void rule__Factor__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4619:1: ( ( ( rule__Factor__NotAssignment_9_1 ) ) )
            // InternalPascal.g:4620:1: ( ( rule__Factor__NotAssignment_9_1 ) )
            {
            // InternalPascal.g:4620:1: ( ( rule__Factor__NotAssignment_9_1 ) )
            // InternalPascal.g:4621:2: ( rule__Factor__NotAssignment_9_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getNotAssignment_9_1()); 
            }
            // InternalPascal.g:4622:2: ( rule__Factor__NotAssignment_9_1 )
            // InternalPascal.g:4622:3: rule__Factor__NotAssignment_9_1
            {
            pushFollow(FOLLOW_2);
            rule__Factor__NotAssignment_9_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getNotAssignment_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__Group_9__1__Impl"


    // $ANTLR start "rule__Set__Group__0"
    // InternalPascal.g:4631:1: rule__Set__Group__0 : rule__Set__Group__0__Impl rule__Set__Group__1 ;
    public final void rule__Set__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4635:1: ( rule__Set__Group__0__Impl rule__Set__Group__1 )
            // InternalPascal.g:4636:2: rule__Set__Group__0__Impl rule__Set__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__Set__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Set__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__Group__0"


    // $ANTLR start "rule__Set__Group__0__Impl"
    // InternalPascal.g:4643:1: rule__Set__Group__0__Impl : ( ( rule__Set__BracketsAssignment_0 ) ) ;
    public final void rule__Set__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4647:1: ( ( ( rule__Set__BracketsAssignment_0 ) ) )
            // InternalPascal.g:4648:1: ( ( rule__Set__BracketsAssignment_0 ) )
            {
            // InternalPascal.g:4648:1: ( ( rule__Set__BracketsAssignment_0 ) )
            // InternalPascal.g:4649:2: ( rule__Set__BracketsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getBracketsAssignment_0()); 
            }
            // InternalPascal.g:4650:2: ( rule__Set__BracketsAssignment_0 )
            // InternalPascal.g:4650:3: rule__Set__BracketsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Set__BracketsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getBracketsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__Group__0__Impl"


    // $ANTLR start "rule__Set__Group__1"
    // InternalPascal.g:4658:1: rule__Set__Group__1 : rule__Set__Group__1__Impl rule__Set__Group__2 ;
    public final void rule__Set__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4662:1: ( rule__Set__Group__1__Impl rule__Set__Group__2 )
            // InternalPascal.g:4663:2: rule__Set__Group__1__Impl rule__Set__Group__2
            {
            pushFollow(FOLLOW_25);
            rule__Set__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Set__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__Group__1"


    // $ANTLR start "rule__Set__Group__1__Impl"
    // InternalPascal.g:4670:1: rule__Set__Group__1__Impl : ( ( rule__Set__ExpressionsAssignment_1 )? ) ;
    public final void rule__Set__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4674:1: ( ( ( rule__Set__ExpressionsAssignment_1 )? ) )
            // InternalPascal.g:4675:1: ( ( rule__Set__ExpressionsAssignment_1 )? )
            {
            // InternalPascal.g:4675:1: ( ( rule__Set__ExpressionsAssignment_1 )? )
            // InternalPascal.g:4676:2: ( rule__Set__ExpressionsAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getExpressionsAssignment_1()); 
            }
            // InternalPascal.g:4677:2: ( rule__Set__ExpressionsAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=RULE_ID && LA47_0<=RULE_INTEGER_NUMBER)||LA47_0==RULE_ADDITION_OPERATOR||(LA47_0>=RULE_STRING && LA47_0<=RULE_SIGNED_REAL_NUMBER)||LA47_0==27||LA47_0==34||LA47_0==37||(LA47_0>=67 && LA47_0<=69)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalPascal.g:4677:3: rule__Set__ExpressionsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Set__ExpressionsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getExpressionsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__Group__1__Impl"


    // $ANTLR start "rule__Set__Group__2"
    // InternalPascal.g:4685:1: rule__Set__Group__2 : rule__Set__Group__2__Impl ;
    public final void rule__Set__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4689:1: ( rule__Set__Group__2__Impl )
            // InternalPascal.g:4690:2: rule__Set__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Set__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__Group__2"


    // $ANTLR start "rule__Set__Group__2__Impl"
    // InternalPascal.g:4696:1: rule__Set__Group__2__Impl : ( ( rule__Set__BracketsAssignment_2 ) ) ;
    public final void rule__Set__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4700:1: ( ( ( rule__Set__BracketsAssignment_2 ) ) )
            // InternalPascal.g:4701:1: ( ( rule__Set__BracketsAssignment_2 ) )
            {
            // InternalPascal.g:4701:1: ( ( rule__Set__BracketsAssignment_2 ) )
            // InternalPascal.g:4702:2: ( rule__Set__BracketsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getBracketsAssignment_2()); 
            }
            // InternalPascal.g:4703:2: ( rule__Set__BracketsAssignment_2 )
            // InternalPascal.g:4703:3: rule__Set__BracketsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Set__BracketsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getBracketsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__Group__2__Impl"


    // $ANTLR start "rule__Function_designator__Group__0"
    // InternalPascal.g:4712:1: rule__Function_designator__Group__0 : rule__Function_designator__Group__0__Impl rule__Function_designator__Group__1 ;
    public final void rule__Function_designator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4716:1: ( rule__Function_designator__Group__0__Impl rule__Function_designator__Group__1 )
            // InternalPascal.g:4717:2: rule__Function_designator__Group__0__Impl rule__Function_designator__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Function_designator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_designator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__0"


    // $ANTLR start "rule__Function_designator__Group__0__Impl"
    // InternalPascal.g:4724:1: rule__Function_designator__Group__0__Impl : ( ( rule__Function_designator__NameAssignment_0 ) ) ;
    public final void rule__Function_designator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4728:1: ( ( ( rule__Function_designator__NameAssignment_0 ) ) )
            // InternalPascal.g:4729:1: ( ( rule__Function_designator__NameAssignment_0 ) )
            {
            // InternalPascal.g:4729:1: ( ( rule__Function_designator__NameAssignment_0 ) )
            // InternalPascal.g:4730:2: ( rule__Function_designator__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getNameAssignment_0()); 
            }
            // InternalPascal.g:4731:2: ( rule__Function_designator__NameAssignment_0 )
            // InternalPascal.g:4731:3: rule__Function_designator__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Function_designator__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__0__Impl"


    // $ANTLR start "rule__Function_designator__Group__1"
    // InternalPascal.g:4739:1: rule__Function_designator__Group__1 : rule__Function_designator__Group__1__Impl rule__Function_designator__Group__2 ;
    public final void rule__Function_designator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4743:1: ( rule__Function_designator__Group__1__Impl rule__Function_designator__Group__2 )
            // InternalPascal.g:4744:2: rule__Function_designator__Group__1__Impl rule__Function_designator__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__Function_designator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_designator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__1"


    // $ANTLR start "rule__Function_designator__Group__1__Impl"
    // InternalPascal.g:4751:1: rule__Function_designator__Group__1__Impl : ( '(' ) ;
    public final void rule__Function_designator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4755:1: ( ( '(' ) )
            // InternalPascal.g:4756:1: ( '(' )
            {
            // InternalPascal.g:4756:1: ( '(' )
            // InternalPascal.g:4757:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__1__Impl"


    // $ANTLR start "rule__Function_designator__Group__2"
    // InternalPascal.g:4766:1: rule__Function_designator__Group__2 : rule__Function_designator__Group__2__Impl rule__Function_designator__Group__3 ;
    public final void rule__Function_designator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4770:1: ( rule__Function_designator__Group__2__Impl rule__Function_designator__Group__3 )
            // InternalPascal.g:4771:2: rule__Function_designator__Group__2__Impl rule__Function_designator__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__Function_designator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_designator__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__2"


    // $ANTLR start "rule__Function_designator__Group__2__Impl"
    // InternalPascal.g:4778:1: rule__Function_designator__Group__2__Impl : ( ( rule__Function_designator__ExpressionsAssignment_2 )? ) ;
    public final void rule__Function_designator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4782:1: ( ( ( rule__Function_designator__ExpressionsAssignment_2 )? ) )
            // InternalPascal.g:4783:1: ( ( rule__Function_designator__ExpressionsAssignment_2 )? )
            {
            // InternalPascal.g:4783:1: ( ( rule__Function_designator__ExpressionsAssignment_2 )? )
            // InternalPascal.g:4784:2: ( rule__Function_designator__ExpressionsAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getExpressionsAssignment_2()); 
            }
            // InternalPascal.g:4785:2: ( rule__Function_designator__ExpressionsAssignment_2 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=RULE_ID && LA48_0<=RULE_INTEGER_NUMBER)||LA48_0==RULE_ADDITION_OPERATOR||(LA48_0>=RULE_STRING && LA48_0<=RULE_SIGNED_REAL_NUMBER)||LA48_0==27||LA48_0==34||LA48_0==37||(LA48_0>=67 && LA48_0<=69)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalPascal.g:4785:3: rule__Function_designator__ExpressionsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function_designator__ExpressionsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getExpressionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__2__Impl"


    // $ANTLR start "rule__Function_designator__Group__3"
    // InternalPascal.g:4793:1: rule__Function_designator__Group__3 : rule__Function_designator__Group__3__Impl ;
    public final void rule__Function_designator__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4797:1: ( rule__Function_designator__Group__3__Impl )
            // InternalPascal.g:4798:2: rule__Function_designator__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function_designator__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__3"


    // $ANTLR start "rule__Function_designator__Group__3__Impl"
    // InternalPascal.g:4804:1: rule__Function_designator__Group__3__Impl : ( ')' ) ;
    public final void rule__Function_designator__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4808:1: ( ( ')' ) )
            // InternalPascal.g:4809:1: ( ')' )
            {
            // InternalPascal.g:4809:1: ( ')' )
            // InternalPascal.g:4810:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__Group__3__Impl"


    // $ANTLR start "rule__Compound_statement__Group__0"
    // InternalPascal.g:4820:1: rule__Compound_statement__Group__0 : rule__Compound_statement__Group__0__Impl rule__Compound_statement__Group__1 ;
    public final void rule__Compound_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4824:1: ( rule__Compound_statement__Group__0__Impl rule__Compound_statement__Group__1 )
            // InternalPascal.g:4825:2: rule__Compound_statement__Group__0__Impl rule__Compound_statement__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__Compound_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Compound_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__Group__0"


    // $ANTLR start "rule__Compound_statement__Group__0__Impl"
    // InternalPascal.g:4832:1: rule__Compound_statement__Group__0__Impl : ( 'begin' ) ;
    public final void rule__Compound_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4836:1: ( ( 'begin' ) )
            // InternalPascal.g:4837:1: ( 'begin' )
            {
            // InternalPascal.g:4837:1: ( 'begin' )
            // InternalPascal.g:4838:2: 'begin'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); 
            }
            match(input,30,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__Group__0__Impl"


    // $ANTLR start "rule__Compound_statement__Group__1"
    // InternalPascal.g:4847:1: rule__Compound_statement__Group__1 : rule__Compound_statement__Group__1__Impl rule__Compound_statement__Group__2 ;
    public final void rule__Compound_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4851:1: ( rule__Compound_statement__Group__1__Impl rule__Compound_statement__Group__2 )
            // InternalPascal.g:4852:2: rule__Compound_statement__Group__1__Impl rule__Compound_statement__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__Compound_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Compound_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__Group__1"


    // $ANTLR start "rule__Compound_statement__Group__1__Impl"
    // InternalPascal.g:4859:1: rule__Compound_statement__Group__1__Impl : ( ( rule__Compound_statement__SequenceAssignment_1 ) ) ;
    public final void rule__Compound_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4863:1: ( ( ( rule__Compound_statement__SequenceAssignment_1 ) ) )
            // InternalPascal.g:4864:1: ( ( rule__Compound_statement__SequenceAssignment_1 ) )
            {
            // InternalPascal.g:4864:1: ( ( rule__Compound_statement__SequenceAssignment_1 ) )
            // InternalPascal.g:4865:2: ( rule__Compound_statement__SequenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); 
            }
            // InternalPascal.g:4866:2: ( rule__Compound_statement__SequenceAssignment_1 )
            // InternalPascal.g:4866:3: rule__Compound_statement__SequenceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Compound_statement__SequenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__Group__1__Impl"


    // $ANTLR start "rule__Compound_statement__Group__2"
    // InternalPascal.g:4874:1: rule__Compound_statement__Group__2 : rule__Compound_statement__Group__2__Impl ;
    public final void rule__Compound_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4878:1: ( rule__Compound_statement__Group__2__Impl )
            // InternalPascal.g:4879:2: rule__Compound_statement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Compound_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__Group__2"


    // $ANTLR start "rule__Compound_statement__Group__2__Impl"
    // InternalPascal.g:4885:1: rule__Compound_statement__Group__2__Impl : ( 'end' ) ;
    public final void rule__Compound_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4889:1: ( ( 'end' ) )
            // InternalPascal.g:4890:1: ( 'end' )
            {
            // InternalPascal.g:4890:1: ( 'end' )
            // InternalPascal.g:4891:2: 'end'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__Group__2__Impl"


    // $ANTLR start "rule__While_statement__Group__0"
    // InternalPascal.g:4901:1: rule__While_statement__Group__0 : rule__While_statement__Group__0__Impl rule__While_statement__Group__1 ;
    public final void rule__While_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4905:1: ( rule__While_statement__Group__0__Impl rule__While_statement__Group__1 )
            // InternalPascal.g:4906:2: rule__While_statement__Group__0__Impl rule__While_statement__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__While_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__While_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__0"


    // $ANTLR start "rule__While_statement__Group__0__Impl"
    // InternalPascal.g:4913:1: rule__While_statement__Group__0__Impl : ( 'while' ) ;
    public final void rule__While_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4917:1: ( ( 'while' ) )
            // InternalPascal.g:4918:1: ( 'while' )
            {
            // InternalPascal.g:4918:1: ( 'while' )
            // InternalPascal.g:4919:2: 'while'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__0__Impl"


    // $ANTLR start "rule__While_statement__Group__1"
    // InternalPascal.g:4928:1: rule__While_statement__Group__1 : rule__While_statement__Group__1__Impl rule__While_statement__Group__2 ;
    public final void rule__While_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4932:1: ( rule__While_statement__Group__1__Impl rule__While_statement__Group__2 )
            // InternalPascal.g:4933:2: rule__While_statement__Group__1__Impl rule__While_statement__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__While_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__While_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__1"


    // $ANTLR start "rule__While_statement__Group__1__Impl"
    // InternalPascal.g:4940:1: rule__While_statement__Group__1__Impl : ( ( rule__While_statement__ExpressionAssignment_1 ) ) ;
    public final void rule__While_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4944:1: ( ( ( rule__While_statement__ExpressionAssignment_1 ) ) )
            // InternalPascal.g:4945:1: ( ( rule__While_statement__ExpressionAssignment_1 ) )
            {
            // InternalPascal.g:4945:1: ( ( rule__While_statement__ExpressionAssignment_1 ) )
            // InternalPascal.g:4946:2: ( rule__While_statement__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getExpressionAssignment_1()); 
            }
            // InternalPascal.g:4947:2: ( rule__While_statement__ExpressionAssignment_1 )
            // InternalPascal.g:4947:3: rule__While_statement__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__While_statement__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__1__Impl"


    // $ANTLR start "rule__While_statement__Group__2"
    // InternalPascal.g:4955:1: rule__While_statement__Group__2 : rule__While_statement__Group__2__Impl rule__While_statement__Group__3 ;
    public final void rule__While_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4959:1: ( rule__While_statement__Group__2__Impl rule__While_statement__Group__3 )
            // InternalPascal.g:4960:2: rule__While_statement__Group__2__Impl rule__While_statement__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__While_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__While_statement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__2"


    // $ANTLR start "rule__While_statement__Group__2__Impl"
    // InternalPascal.g:4967:1: rule__While_statement__Group__2__Impl : ( 'do' ) ;
    public final void rule__While_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4971:1: ( ( 'do' ) )
            // InternalPascal.g:4972:1: ( 'do' )
            {
            // InternalPascal.g:4972:1: ( 'do' )
            // InternalPascal.g:4973:2: 'do'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getDoKeyword_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getDoKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__2__Impl"


    // $ANTLR start "rule__While_statement__Group__3"
    // InternalPascal.g:4982:1: rule__While_statement__Group__3 : rule__While_statement__Group__3__Impl ;
    public final void rule__While_statement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4986:1: ( rule__While_statement__Group__3__Impl )
            // InternalPascal.g:4987:2: rule__While_statement__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__While_statement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__3"


    // $ANTLR start "rule__While_statement__Group__3__Impl"
    // InternalPascal.g:4993:1: rule__While_statement__Group__3__Impl : ( ( rule__While_statement__StatementAssignment_3 ) ) ;
    public final void rule__While_statement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:4997:1: ( ( ( rule__While_statement__StatementAssignment_3 ) ) )
            // InternalPascal.g:4998:1: ( ( rule__While_statement__StatementAssignment_3 ) )
            {
            // InternalPascal.g:4998:1: ( ( rule__While_statement__StatementAssignment_3 ) )
            // InternalPascal.g:4999:2: ( rule__While_statement__StatementAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getStatementAssignment_3()); 
            }
            // InternalPascal.g:5000:2: ( rule__While_statement__StatementAssignment_3 )
            // InternalPascal.g:5000:3: rule__While_statement__StatementAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__While_statement__StatementAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getStatementAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__Group__3__Impl"


    // $ANTLR start "rule__Repeat_statement__Group__0"
    // InternalPascal.g:5009:1: rule__Repeat_statement__Group__0 : rule__Repeat_statement__Group__0__Impl rule__Repeat_statement__Group__1 ;
    public final void rule__Repeat_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5013:1: ( rule__Repeat_statement__Group__0__Impl rule__Repeat_statement__Group__1 )
            // InternalPascal.g:5014:2: rule__Repeat_statement__Group__0__Impl rule__Repeat_statement__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__Repeat_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__0"


    // $ANTLR start "rule__Repeat_statement__Group__0__Impl"
    // InternalPascal.g:5021:1: rule__Repeat_statement__Group__0__Impl : ( 'repeat' ) ;
    public final void rule__Repeat_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5025:1: ( ( 'repeat' ) )
            // InternalPascal.g:5026:1: ( 'repeat' )
            {
            // InternalPascal.g:5026:1: ( 'repeat' )
            // InternalPascal.g:5027:2: 'repeat'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getRepeatKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getRepeatKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__0__Impl"


    // $ANTLR start "rule__Repeat_statement__Group__1"
    // InternalPascal.g:5036:1: rule__Repeat_statement__Group__1 : rule__Repeat_statement__Group__1__Impl rule__Repeat_statement__Group__2 ;
    public final void rule__Repeat_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5040:1: ( rule__Repeat_statement__Group__1__Impl rule__Repeat_statement__Group__2 )
            // InternalPascal.g:5041:2: rule__Repeat_statement__Group__1__Impl rule__Repeat_statement__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__Repeat_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__1"


    // $ANTLR start "rule__Repeat_statement__Group__1__Impl"
    // InternalPascal.g:5048:1: rule__Repeat_statement__Group__1__Impl : ( ( rule__Repeat_statement__SequenceAssignment_1 ) ) ;
    public final void rule__Repeat_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5052:1: ( ( ( rule__Repeat_statement__SequenceAssignment_1 ) ) )
            // InternalPascal.g:5053:1: ( ( rule__Repeat_statement__SequenceAssignment_1 ) )
            {
            // InternalPascal.g:5053:1: ( ( rule__Repeat_statement__SequenceAssignment_1 ) )
            // InternalPascal.g:5054:2: ( rule__Repeat_statement__SequenceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getSequenceAssignment_1()); 
            }
            // InternalPascal.g:5055:2: ( rule__Repeat_statement__SequenceAssignment_1 )
            // InternalPascal.g:5055:3: rule__Repeat_statement__SequenceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__SequenceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getSequenceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__1__Impl"


    // $ANTLR start "rule__Repeat_statement__Group__2"
    // InternalPascal.g:5063:1: rule__Repeat_statement__Group__2 : rule__Repeat_statement__Group__2__Impl rule__Repeat_statement__Group__3 ;
    public final void rule__Repeat_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5067:1: ( rule__Repeat_statement__Group__2__Impl rule__Repeat_statement__Group__3 )
            // InternalPascal.g:5068:2: rule__Repeat_statement__Group__2__Impl rule__Repeat_statement__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__Repeat_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__2"


    // $ANTLR start "rule__Repeat_statement__Group__2__Impl"
    // InternalPascal.g:5075:1: rule__Repeat_statement__Group__2__Impl : ( 'until' ) ;
    public final void rule__Repeat_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5079:1: ( ( 'until' ) )
            // InternalPascal.g:5080:1: ( 'until' )
            {
            // InternalPascal.g:5080:1: ( 'until' )
            // InternalPascal.g:5081:2: 'until'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getUntilKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getUntilKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__2__Impl"


    // $ANTLR start "rule__Repeat_statement__Group__3"
    // InternalPascal.g:5090:1: rule__Repeat_statement__Group__3 : rule__Repeat_statement__Group__3__Impl ;
    public final void rule__Repeat_statement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5094:1: ( rule__Repeat_statement__Group__3__Impl )
            // InternalPascal.g:5095:2: rule__Repeat_statement__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__3"


    // $ANTLR start "rule__Repeat_statement__Group__3__Impl"
    // InternalPascal.g:5101:1: rule__Repeat_statement__Group__3__Impl : ( ( rule__Repeat_statement__ExpressionAssignment_3 ) ) ;
    public final void rule__Repeat_statement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5105:1: ( ( ( rule__Repeat_statement__ExpressionAssignment_3 ) ) )
            // InternalPascal.g:5106:1: ( ( rule__Repeat_statement__ExpressionAssignment_3 ) )
            {
            // InternalPascal.g:5106:1: ( ( rule__Repeat_statement__ExpressionAssignment_3 ) )
            // InternalPascal.g:5107:2: ( rule__Repeat_statement__ExpressionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getExpressionAssignment_3()); 
            }
            // InternalPascal.g:5108:2: ( rule__Repeat_statement__ExpressionAssignment_3 )
            // InternalPascal.g:5108:3: rule__Repeat_statement__ExpressionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Repeat_statement__ExpressionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getExpressionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__Group__3__Impl"


    // $ANTLR start "rule__For_statement__Group__0"
    // InternalPascal.g:5117:1: rule__For_statement__Group__0 : rule__For_statement__Group__0__Impl rule__For_statement__Group__1 ;
    public final void rule__For_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5121:1: ( rule__For_statement__Group__0__Impl rule__For_statement__Group__1 )
            // InternalPascal.g:5122:2: rule__For_statement__Group__0__Impl rule__For_statement__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__For_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__0"


    // $ANTLR start "rule__For_statement__Group__0__Impl"
    // InternalPascal.g:5129:1: rule__For_statement__Group__0__Impl : ( 'for' ) ;
    public final void rule__For_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5133:1: ( ( 'for' ) )
            // InternalPascal.g:5134:1: ( 'for' )
            {
            // InternalPascal.g:5134:1: ( 'for' )
            // InternalPascal.g:5135:2: 'for'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getForKeyword_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getForKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__0__Impl"


    // $ANTLR start "rule__For_statement__Group__1"
    // InternalPascal.g:5144:1: rule__For_statement__Group__1 : rule__For_statement__Group__1__Impl rule__For_statement__Group__2 ;
    public final void rule__For_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5148:1: ( rule__For_statement__Group__1__Impl rule__For_statement__Group__2 )
            // InternalPascal.g:5149:2: rule__For_statement__Group__1__Impl rule__For_statement__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__For_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__1"


    // $ANTLR start "rule__For_statement__Group__1__Impl"
    // InternalPascal.g:5156:1: rule__For_statement__Group__1__Impl : ( ( rule__For_statement__AssignmentAssignment_1 ) ) ;
    public final void rule__For_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5160:1: ( ( ( rule__For_statement__AssignmentAssignment_1 ) ) )
            // InternalPascal.g:5161:1: ( ( rule__For_statement__AssignmentAssignment_1 ) )
            {
            // InternalPascal.g:5161:1: ( ( rule__For_statement__AssignmentAssignment_1 ) )
            // InternalPascal.g:5162:2: ( rule__For_statement__AssignmentAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getAssignmentAssignment_1()); 
            }
            // InternalPascal.g:5163:2: ( rule__For_statement__AssignmentAssignment_1 )
            // InternalPascal.g:5163:3: rule__For_statement__AssignmentAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__For_statement__AssignmentAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getAssignmentAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__1__Impl"


    // $ANTLR start "rule__For_statement__Group__2"
    // InternalPascal.g:5171:1: rule__For_statement__Group__2 : rule__For_statement__Group__2__Impl rule__For_statement__Group__3 ;
    public final void rule__For_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5175:1: ( rule__For_statement__Group__2__Impl rule__For_statement__Group__3 )
            // InternalPascal.g:5176:2: rule__For_statement__Group__2__Impl rule__For_statement__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__For_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__2"


    // $ANTLR start "rule__For_statement__Group__2__Impl"
    // InternalPascal.g:5183:1: rule__For_statement__Group__2__Impl : ( ( rule__For_statement__Alternatives_2 ) ) ;
    public final void rule__For_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5187:1: ( ( ( rule__For_statement__Alternatives_2 ) ) )
            // InternalPascal.g:5188:1: ( ( rule__For_statement__Alternatives_2 ) )
            {
            // InternalPascal.g:5188:1: ( ( rule__For_statement__Alternatives_2 ) )
            // InternalPascal.g:5189:2: ( rule__For_statement__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getAlternatives_2()); 
            }
            // InternalPascal.g:5190:2: ( rule__For_statement__Alternatives_2 )
            // InternalPascal.g:5190:3: rule__For_statement__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__For_statement__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__2__Impl"


    // $ANTLR start "rule__For_statement__Group__3"
    // InternalPascal.g:5198:1: rule__For_statement__Group__3 : rule__For_statement__Group__3__Impl rule__For_statement__Group__4 ;
    public final void rule__For_statement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5202:1: ( rule__For_statement__Group__3__Impl rule__For_statement__Group__4 )
            // InternalPascal.g:5203:2: rule__For_statement__Group__3__Impl rule__For_statement__Group__4
            {
            pushFollow(FOLLOW_28);
            rule__For_statement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__3"


    // $ANTLR start "rule__For_statement__Group__3__Impl"
    // InternalPascal.g:5210:1: rule__For_statement__Group__3__Impl : ( ( rule__For_statement__ExpressionAssignment_3 ) ) ;
    public final void rule__For_statement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5214:1: ( ( ( rule__For_statement__ExpressionAssignment_3 ) ) )
            // InternalPascal.g:5215:1: ( ( rule__For_statement__ExpressionAssignment_3 ) )
            {
            // InternalPascal.g:5215:1: ( ( rule__For_statement__ExpressionAssignment_3 ) )
            // InternalPascal.g:5216:2: ( rule__For_statement__ExpressionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getExpressionAssignment_3()); 
            }
            // InternalPascal.g:5217:2: ( rule__For_statement__ExpressionAssignment_3 )
            // InternalPascal.g:5217:3: rule__For_statement__ExpressionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__For_statement__ExpressionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getExpressionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__3__Impl"


    // $ANTLR start "rule__For_statement__Group__4"
    // InternalPascal.g:5225:1: rule__For_statement__Group__4 : rule__For_statement__Group__4__Impl rule__For_statement__Group__5 ;
    public final void rule__For_statement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5229:1: ( rule__For_statement__Group__4__Impl rule__For_statement__Group__5 )
            // InternalPascal.g:5230:2: rule__For_statement__Group__4__Impl rule__For_statement__Group__5
            {
            pushFollow(FOLLOW_11);
            rule__For_statement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__4"


    // $ANTLR start "rule__For_statement__Group__4__Impl"
    // InternalPascal.g:5237:1: rule__For_statement__Group__4__Impl : ( 'do' ) ;
    public final void rule__For_statement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5241:1: ( ( 'do' ) )
            // InternalPascal.g:5242:1: ( 'do' )
            {
            // InternalPascal.g:5242:1: ( 'do' )
            // InternalPascal.g:5243:2: 'do'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getDoKeyword_4()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getDoKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__4__Impl"


    // $ANTLR start "rule__For_statement__Group__5"
    // InternalPascal.g:5252:1: rule__For_statement__Group__5 : rule__For_statement__Group__5__Impl ;
    public final void rule__For_statement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5256:1: ( rule__For_statement__Group__5__Impl )
            // InternalPascal.g:5257:2: rule__For_statement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__For_statement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__5"


    // $ANTLR start "rule__For_statement__Group__5__Impl"
    // InternalPascal.g:5263:1: rule__For_statement__Group__5__Impl : ( ( rule__For_statement__StatementAssignment_5 ) ) ;
    public final void rule__For_statement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5267:1: ( ( ( rule__For_statement__StatementAssignment_5 ) ) )
            // InternalPascal.g:5268:1: ( ( rule__For_statement__StatementAssignment_5 ) )
            {
            // InternalPascal.g:5268:1: ( ( rule__For_statement__StatementAssignment_5 ) )
            // InternalPascal.g:5269:2: ( rule__For_statement__StatementAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getStatementAssignment_5()); 
            }
            // InternalPascal.g:5270:2: ( rule__For_statement__StatementAssignment_5 )
            // InternalPascal.g:5270:3: rule__For_statement__StatementAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__For_statement__StatementAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getStatementAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__Group__5__Impl"


    // $ANTLR start "rule__If_statement__Group__0"
    // InternalPascal.g:5279:1: rule__If_statement__Group__0 : rule__If_statement__Group__0__Impl rule__If_statement__Group__1 ;
    public final void rule__If_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5283:1: ( rule__If_statement__Group__0__Impl rule__If_statement__Group__1 )
            // InternalPascal.g:5284:2: rule__If_statement__Group__0__Impl rule__If_statement__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__If_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__If_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__0"


    // $ANTLR start "rule__If_statement__Group__0__Impl"
    // InternalPascal.g:5291:1: rule__If_statement__Group__0__Impl : ( 'if' ) ;
    public final void rule__If_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5295:1: ( ( 'if' ) )
            // InternalPascal.g:5296:1: ( 'if' )
            {
            // InternalPascal.g:5296:1: ( 'if' )
            // InternalPascal.g:5297:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getIfKeyword_0()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getIfKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__0__Impl"


    // $ANTLR start "rule__If_statement__Group__1"
    // InternalPascal.g:5306:1: rule__If_statement__Group__1 : rule__If_statement__Group__1__Impl rule__If_statement__Group__2 ;
    public final void rule__If_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5310:1: ( rule__If_statement__Group__1__Impl rule__If_statement__Group__2 )
            // InternalPascal.g:5311:2: rule__If_statement__Group__1__Impl rule__If_statement__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__If_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__If_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__1"


    // $ANTLR start "rule__If_statement__Group__1__Impl"
    // InternalPascal.g:5318:1: rule__If_statement__Group__1__Impl : ( ( rule__If_statement__ExpressionAssignment_1 ) ) ;
    public final void rule__If_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5322:1: ( ( ( rule__If_statement__ExpressionAssignment_1 ) ) )
            // InternalPascal.g:5323:1: ( ( rule__If_statement__ExpressionAssignment_1 ) )
            {
            // InternalPascal.g:5323:1: ( ( rule__If_statement__ExpressionAssignment_1 ) )
            // InternalPascal.g:5324:2: ( rule__If_statement__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getExpressionAssignment_1()); 
            }
            // InternalPascal.g:5325:2: ( rule__If_statement__ExpressionAssignment_1 )
            // InternalPascal.g:5325:3: rule__If_statement__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__If_statement__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__1__Impl"


    // $ANTLR start "rule__If_statement__Group__2"
    // InternalPascal.g:5333:1: rule__If_statement__Group__2 : rule__If_statement__Group__2__Impl rule__If_statement__Group__3 ;
    public final void rule__If_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5337:1: ( rule__If_statement__Group__2__Impl rule__If_statement__Group__3 )
            // InternalPascal.g:5338:2: rule__If_statement__Group__2__Impl rule__If_statement__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__If_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__If_statement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__2"


    // $ANTLR start "rule__If_statement__Group__2__Impl"
    // InternalPascal.g:5345:1: rule__If_statement__Group__2__Impl : ( 'then' ) ;
    public final void rule__If_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5349:1: ( ( 'then' ) )
            // InternalPascal.g:5350:1: ( 'then' )
            {
            // InternalPascal.g:5350:1: ( 'then' )
            // InternalPascal.g:5351:2: 'then'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getThenKeyword_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getThenKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__2__Impl"


    // $ANTLR start "rule__If_statement__Group__3"
    // InternalPascal.g:5360:1: rule__If_statement__Group__3 : rule__If_statement__Group__3__Impl rule__If_statement__Group__4 ;
    public final void rule__If_statement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5364:1: ( rule__If_statement__Group__3__Impl rule__If_statement__Group__4 )
            // InternalPascal.g:5365:2: rule__If_statement__Group__3__Impl rule__If_statement__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__If_statement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__If_statement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__3"


    // $ANTLR start "rule__If_statement__Group__3__Impl"
    // InternalPascal.g:5372:1: rule__If_statement__Group__3__Impl : ( ( rule__If_statement__IfStatementAssignment_3 ) ) ;
    public final void rule__If_statement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5376:1: ( ( ( rule__If_statement__IfStatementAssignment_3 ) ) )
            // InternalPascal.g:5377:1: ( ( rule__If_statement__IfStatementAssignment_3 ) )
            {
            // InternalPascal.g:5377:1: ( ( rule__If_statement__IfStatementAssignment_3 ) )
            // InternalPascal.g:5378:2: ( rule__If_statement__IfStatementAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getIfStatementAssignment_3()); 
            }
            // InternalPascal.g:5379:2: ( rule__If_statement__IfStatementAssignment_3 )
            // InternalPascal.g:5379:3: rule__If_statement__IfStatementAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__If_statement__IfStatementAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getIfStatementAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__3__Impl"


    // $ANTLR start "rule__If_statement__Group__4"
    // InternalPascal.g:5387:1: rule__If_statement__Group__4 : rule__If_statement__Group__4__Impl ;
    public final void rule__If_statement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5391:1: ( rule__If_statement__Group__4__Impl )
            // InternalPascal.g:5392:2: rule__If_statement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__If_statement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__4"


    // $ANTLR start "rule__If_statement__Group__4__Impl"
    // InternalPascal.g:5398:1: rule__If_statement__Group__4__Impl : ( ( rule__If_statement__Group_4__0 )? ) ;
    public final void rule__If_statement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5402:1: ( ( ( rule__If_statement__Group_4__0 )? ) )
            // InternalPascal.g:5403:1: ( ( rule__If_statement__Group_4__0 )? )
            {
            // InternalPascal.g:5403:1: ( ( rule__If_statement__Group_4__0 )? )
            // InternalPascal.g:5404:2: ( rule__If_statement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getGroup_4()); 
            }
            // InternalPascal.g:5405:2: ( rule__If_statement__Group_4__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==45) ) {
                int LA49_1 = input.LA(2);

                if ( (synpred76_InternalPascal()) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalPascal.g:5405:3: rule__If_statement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__If_statement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group__4__Impl"


    // $ANTLR start "rule__If_statement__Group_4__0"
    // InternalPascal.g:5414:1: rule__If_statement__Group_4__0 : rule__If_statement__Group_4__0__Impl rule__If_statement__Group_4__1 ;
    public final void rule__If_statement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5418:1: ( rule__If_statement__Group_4__0__Impl rule__If_statement__Group_4__1 )
            // InternalPascal.g:5419:2: rule__If_statement__Group_4__0__Impl rule__If_statement__Group_4__1
            {
            pushFollow(FOLLOW_11);
            rule__If_statement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__If_statement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group_4__0"


    // $ANTLR start "rule__If_statement__Group_4__0__Impl"
    // InternalPascal.g:5426:1: rule__If_statement__Group_4__0__Impl : ( 'else' ) ;
    public final void rule__If_statement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5430:1: ( ( 'else' ) )
            // InternalPascal.g:5431:1: ( 'else' )
            {
            // InternalPascal.g:5431:1: ( 'else' )
            // InternalPascal.g:5432:2: 'else'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getElseKeyword_4_0()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getElseKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group_4__0__Impl"


    // $ANTLR start "rule__If_statement__Group_4__1"
    // InternalPascal.g:5441:1: rule__If_statement__Group_4__1 : rule__If_statement__Group_4__1__Impl ;
    public final void rule__If_statement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5445:1: ( rule__If_statement__Group_4__1__Impl )
            // InternalPascal.g:5446:2: rule__If_statement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__If_statement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group_4__1"


    // $ANTLR start "rule__If_statement__Group_4__1__Impl"
    // InternalPascal.g:5452:1: rule__If_statement__Group_4__1__Impl : ( ( rule__If_statement__ElseStatementAssignment_4_1 ) ) ;
    public final void rule__If_statement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5456:1: ( ( ( rule__If_statement__ElseStatementAssignment_4_1 ) ) )
            // InternalPascal.g:5457:1: ( ( rule__If_statement__ElseStatementAssignment_4_1 ) )
            {
            // InternalPascal.g:5457:1: ( ( rule__If_statement__ElseStatementAssignment_4_1 ) )
            // InternalPascal.g:5458:2: ( rule__If_statement__ElseStatementAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getElseStatementAssignment_4_1()); 
            }
            // InternalPascal.g:5459:2: ( rule__If_statement__ElseStatementAssignment_4_1 )
            // InternalPascal.g:5459:3: rule__If_statement__ElseStatementAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__If_statement__ElseStatementAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getElseStatementAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__Group_4__1__Impl"


    // $ANTLR start "rule__Case_statement__Group__0"
    // InternalPascal.g:5468:1: rule__Case_statement__Group__0 : rule__Case_statement__Group__0__Impl rule__Case_statement__Group__1 ;
    public final void rule__Case_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5472:1: ( rule__Case_statement__Group__0__Impl rule__Case_statement__Group__1 )
            // InternalPascal.g:5473:2: rule__Case_statement__Group__0__Impl rule__Case_statement__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__Case_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__0"


    // $ANTLR start "rule__Case_statement__Group__0__Impl"
    // InternalPascal.g:5480:1: rule__Case_statement__Group__0__Impl : ( 'case' ) ;
    public final void rule__Case_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5484:1: ( ( 'case' ) )
            // InternalPascal.g:5485:1: ( 'case' )
            {
            // InternalPascal.g:5485:1: ( 'case' )
            // InternalPascal.g:5486:2: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getCaseKeyword_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getCaseKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__0__Impl"


    // $ANTLR start "rule__Case_statement__Group__1"
    // InternalPascal.g:5495:1: rule__Case_statement__Group__1 : rule__Case_statement__Group__1__Impl rule__Case_statement__Group__2 ;
    public final void rule__Case_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5499:1: ( rule__Case_statement__Group__1__Impl rule__Case_statement__Group__2 )
            // InternalPascal.g:5500:2: rule__Case_statement__Group__1__Impl rule__Case_statement__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__Case_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__1"


    // $ANTLR start "rule__Case_statement__Group__1__Impl"
    // InternalPascal.g:5507:1: rule__Case_statement__Group__1__Impl : ( ( rule__Case_statement__ExpressionAssignment_1 ) ) ;
    public final void rule__Case_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5511:1: ( ( ( rule__Case_statement__ExpressionAssignment_1 ) ) )
            // InternalPascal.g:5512:1: ( ( rule__Case_statement__ExpressionAssignment_1 ) )
            {
            // InternalPascal.g:5512:1: ( ( rule__Case_statement__ExpressionAssignment_1 ) )
            // InternalPascal.g:5513:2: ( rule__Case_statement__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getExpressionAssignment_1()); 
            }
            // InternalPascal.g:5514:2: ( rule__Case_statement__ExpressionAssignment_1 )
            // InternalPascal.g:5514:3: rule__Case_statement__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Case_statement__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__1__Impl"


    // $ANTLR start "rule__Case_statement__Group__2"
    // InternalPascal.g:5522:1: rule__Case_statement__Group__2 : rule__Case_statement__Group__2__Impl rule__Case_statement__Group__3 ;
    public final void rule__Case_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5526:1: ( rule__Case_statement__Group__2__Impl rule__Case_statement__Group__3 )
            // InternalPascal.g:5527:2: rule__Case_statement__Group__2__Impl rule__Case_statement__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__Case_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__2"


    // $ANTLR start "rule__Case_statement__Group__2__Impl"
    // InternalPascal.g:5534:1: rule__Case_statement__Group__2__Impl : ( 'of' ) ;
    public final void rule__Case_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5538:1: ( ( 'of' ) )
            // InternalPascal.g:5539:1: ( 'of' )
            {
            // InternalPascal.g:5539:1: ( 'of' )
            // InternalPascal.g:5540:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getOfKeyword_2()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getOfKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__2__Impl"


    // $ANTLR start "rule__Case_statement__Group__3"
    // InternalPascal.g:5549:1: rule__Case_statement__Group__3 : rule__Case_statement__Group__3__Impl rule__Case_statement__Group__4 ;
    public final void rule__Case_statement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5553:1: ( rule__Case_statement__Group__3__Impl rule__Case_statement__Group__4 )
            // InternalPascal.g:5554:2: rule__Case_statement__Group__3__Impl rule__Case_statement__Group__4
            {
            pushFollow(FOLLOW_35);
            rule__Case_statement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__3"


    // $ANTLR start "rule__Case_statement__Group__3__Impl"
    // InternalPascal.g:5561:1: rule__Case_statement__Group__3__Impl : ( ( rule__Case_statement__CasesAssignment_3 ) ) ;
    public final void rule__Case_statement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5565:1: ( ( ( rule__Case_statement__CasesAssignment_3 ) ) )
            // InternalPascal.g:5566:1: ( ( rule__Case_statement__CasesAssignment_3 ) )
            {
            // InternalPascal.g:5566:1: ( ( rule__Case_statement__CasesAssignment_3 ) )
            // InternalPascal.g:5567:2: ( rule__Case_statement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getCasesAssignment_3()); 
            }
            // InternalPascal.g:5568:2: ( rule__Case_statement__CasesAssignment_3 )
            // InternalPascal.g:5568:3: rule__Case_statement__CasesAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Case_statement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getCasesAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__3__Impl"


    // $ANTLR start "rule__Case_statement__Group__4"
    // InternalPascal.g:5576:1: rule__Case_statement__Group__4 : rule__Case_statement__Group__4__Impl rule__Case_statement__Group__5 ;
    public final void rule__Case_statement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5580:1: ( rule__Case_statement__Group__4__Impl rule__Case_statement__Group__5 )
            // InternalPascal.g:5581:2: rule__Case_statement__Group__4__Impl rule__Case_statement__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__Case_statement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__4"


    // $ANTLR start "rule__Case_statement__Group__4__Impl"
    // InternalPascal.g:5588:1: rule__Case_statement__Group__4__Impl : ( ( rule__Case_statement__Group_4__0 )* ) ;
    public final void rule__Case_statement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5592:1: ( ( ( rule__Case_statement__Group_4__0 )* ) )
            // InternalPascal.g:5593:1: ( ( rule__Case_statement__Group_4__0 )* )
            {
            // InternalPascal.g:5593:1: ( ( rule__Case_statement__Group_4__0 )* )
            // InternalPascal.g:5594:2: ( rule__Case_statement__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getGroup_4()); 
            }
            // InternalPascal.g:5595:2: ( rule__Case_statement__Group_4__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==26) ) {
                    int LA50_1 = input.LA(2);

                    if ( ((LA50_1>=RULE_ID && LA50_1<=RULE_INTEGER_NUMBER)||LA50_1==RULE_ADDITION_OPERATOR||(LA50_1>=RULE_STRING && LA50_1<=RULE_SIGNED_REAL_NUMBER)||(LA50_1>=67 && LA50_1<=69)) ) {
                        alt50=1;
                    }


                }


                switch (alt50) {
            	case 1 :
            	    // InternalPascal.g:5595:3: rule__Case_statement__Group_4__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Case_statement__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__4__Impl"


    // $ANTLR start "rule__Case_statement__Group__5"
    // InternalPascal.g:5603:1: rule__Case_statement__Group__5 : rule__Case_statement__Group__5__Impl rule__Case_statement__Group__6 ;
    public final void rule__Case_statement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5607:1: ( rule__Case_statement__Group__5__Impl rule__Case_statement__Group__6 )
            // InternalPascal.g:5608:2: rule__Case_statement__Group__5__Impl rule__Case_statement__Group__6
            {
            pushFollow(FOLLOW_35);
            rule__Case_statement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__5"


    // $ANTLR start "rule__Case_statement__Group__5__Impl"
    // InternalPascal.g:5615:1: rule__Case_statement__Group__5__Impl : ( ( ';' )? ) ;
    public final void rule__Case_statement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5619:1: ( ( ( ';' )? ) )
            // InternalPascal.g:5620:1: ( ( ';' )? )
            {
            // InternalPascal.g:5620:1: ( ( ';' )? )
            // InternalPascal.g:5621:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getSemicolonKeyword_5()); 
            }
            // InternalPascal.g:5622:2: ( ';' )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==26) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalPascal.g:5622:3: ';'
                    {
                    match(input,26,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__5__Impl"


    // $ANTLR start "rule__Case_statement__Group__6"
    // InternalPascal.g:5630:1: rule__Case_statement__Group__6 : rule__Case_statement__Group__6__Impl ;
    public final void rule__Case_statement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5634:1: ( rule__Case_statement__Group__6__Impl )
            // InternalPascal.g:5635:2: rule__Case_statement__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__6"


    // $ANTLR start "rule__Case_statement__Group__6__Impl"
    // InternalPascal.g:5641:1: rule__Case_statement__Group__6__Impl : ( 'end' ) ;
    public final void rule__Case_statement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5645:1: ( ( 'end' ) )
            // InternalPascal.g:5646:1: ( 'end' )
            {
            // InternalPascal.g:5646:1: ( 'end' )
            // InternalPascal.g:5647:2: 'end'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getEndKeyword_6()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getEndKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group__6__Impl"


    // $ANTLR start "rule__Case_statement__Group_4__0"
    // InternalPascal.g:5657:1: rule__Case_statement__Group_4__0 : rule__Case_statement__Group_4__0__Impl rule__Case_statement__Group_4__1 ;
    public final void rule__Case_statement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5661:1: ( rule__Case_statement__Group_4__0__Impl rule__Case_statement__Group_4__1 )
            // InternalPascal.g:5662:2: rule__Case_statement__Group_4__0__Impl rule__Case_statement__Group_4__1
            {
            pushFollow(FOLLOW_34);
            rule__Case_statement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group_4__0"


    // $ANTLR start "rule__Case_statement__Group_4__0__Impl"
    // InternalPascal.g:5669:1: rule__Case_statement__Group_4__0__Impl : ( ';' ) ;
    public final void rule__Case_statement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5673:1: ( ( ';' ) )
            // InternalPascal.g:5674:1: ( ';' )
            {
            // InternalPascal.g:5674:1: ( ';' )
            // InternalPascal.g:5675:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getSemicolonKeyword_4_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getSemicolonKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group_4__0__Impl"


    // $ANTLR start "rule__Case_statement__Group_4__1"
    // InternalPascal.g:5684:1: rule__Case_statement__Group_4__1 : rule__Case_statement__Group_4__1__Impl ;
    public final void rule__Case_statement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5688:1: ( rule__Case_statement__Group_4__1__Impl )
            // InternalPascal.g:5689:2: rule__Case_statement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Case_statement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group_4__1"


    // $ANTLR start "rule__Case_statement__Group_4__1__Impl"
    // InternalPascal.g:5695:1: rule__Case_statement__Group_4__1__Impl : ( ( rule__Case_statement__CasesAssignment_4_1 ) ) ;
    public final void rule__Case_statement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5699:1: ( ( ( rule__Case_statement__CasesAssignment_4_1 ) ) )
            // InternalPascal.g:5700:1: ( ( rule__Case_statement__CasesAssignment_4_1 ) )
            {
            // InternalPascal.g:5700:1: ( ( rule__Case_statement__CasesAssignment_4_1 ) )
            // InternalPascal.g:5701:2: ( rule__Case_statement__CasesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getCasesAssignment_4_1()); 
            }
            // InternalPascal.g:5702:2: ( rule__Case_statement__CasesAssignment_4_1 )
            // InternalPascal.g:5702:3: rule__Case_statement__CasesAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Case_statement__CasesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getCasesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__Group_4__1__Impl"


    // $ANTLR start "rule__Case_limb__Group__0"
    // InternalPascal.g:5711:1: rule__Case_limb__Group__0 : rule__Case_limb__Group__0__Impl rule__Case_limb__Group__1 ;
    public final void rule__Case_limb__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5715:1: ( rule__Case_limb__Group__0__Impl rule__Case_limb__Group__1 )
            // InternalPascal.g:5716:2: rule__Case_limb__Group__0__Impl rule__Case_limb__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Case_limb__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_limb__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__Group__0"


    // $ANTLR start "rule__Case_limb__Group__0__Impl"
    // InternalPascal.g:5723:1: rule__Case_limb__Group__0__Impl : ( ( rule__Case_limb__CasesAssignment_0 ) ) ;
    public final void rule__Case_limb__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5727:1: ( ( ( rule__Case_limb__CasesAssignment_0 ) ) )
            // InternalPascal.g:5728:1: ( ( rule__Case_limb__CasesAssignment_0 ) )
            {
            // InternalPascal.g:5728:1: ( ( rule__Case_limb__CasesAssignment_0 ) )
            // InternalPascal.g:5729:2: ( rule__Case_limb__CasesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbAccess().getCasesAssignment_0()); 
            }
            // InternalPascal.g:5730:2: ( rule__Case_limb__CasesAssignment_0 )
            // InternalPascal.g:5730:3: rule__Case_limb__CasesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Case_limb__CasesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbAccess().getCasesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__Group__0__Impl"


    // $ANTLR start "rule__Case_limb__Group__1"
    // InternalPascal.g:5738:1: rule__Case_limb__Group__1 : rule__Case_limb__Group__1__Impl rule__Case_limb__Group__2 ;
    public final void rule__Case_limb__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5742:1: ( rule__Case_limb__Group__1__Impl rule__Case_limb__Group__2 )
            // InternalPascal.g:5743:2: rule__Case_limb__Group__1__Impl rule__Case_limb__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__Case_limb__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_limb__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__Group__1"


    // $ANTLR start "rule__Case_limb__Group__1__Impl"
    // InternalPascal.g:5750:1: rule__Case_limb__Group__1__Impl : ( ':' ) ;
    public final void rule__Case_limb__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5754:1: ( ( ':' ) )
            // InternalPascal.g:5755:1: ( ':' )
            {
            // InternalPascal.g:5755:1: ( ':' )
            // InternalPascal.g:5756:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbAccess().getColonKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__Group__1__Impl"


    // $ANTLR start "rule__Case_limb__Group__2"
    // InternalPascal.g:5765:1: rule__Case_limb__Group__2 : rule__Case_limb__Group__2__Impl ;
    public final void rule__Case_limb__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5769:1: ( rule__Case_limb__Group__2__Impl )
            // InternalPascal.g:5770:2: rule__Case_limb__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Case_limb__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__Group__2"


    // $ANTLR start "rule__Case_limb__Group__2__Impl"
    // InternalPascal.g:5776:1: rule__Case_limb__Group__2__Impl : ( ( rule__Case_limb__StatementAssignment_2 ) ) ;
    public final void rule__Case_limb__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5780:1: ( ( ( rule__Case_limb__StatementAssignment_2 ) ) )
            // InternalPascal.g:5781:1: ( ( rule__Case_limb__StatementAssignment_2 ) )
            {
            // InternalPascal.g:5781:1: ( ( rule__Case_limb__StatementAssignment_2 ) )
            // InternalPascal.g:5782:2: ( rule__Case_limb__StatementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbAccess().getStatementAssignment_2()); 
            }
            // InternalPascal.g:5783:2: ( rule__Case_limb__StatementAssignment_2 )
            // InternalPascal.g:5783:3: rule__Case_limb__StatementAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Case_limb__StatementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbAccess().getStatementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__Group__2__Impl"


    // $ANTLR start "rule__Case_label_list__Group__0"
    // InternalPascal.g:5792:1: rule__Case_label_list__Group__0 : rule__Case_label_list__Group__0__Impl rule__Case_label_list__Group__1 ;
    public final void rule__Case_label_list__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5796:1: ( rule__Case_label_list__Group__0__Impl rule__Case_label_list__Group__1 )
            // InternalPascal.g:5797:2: rule__Case_label_list__Group__0__Impl rule__Case_label_list__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Case_label_list__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_label_list__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group__0"


    // $ANTLR start "rule__Case_label_list__Group__0__Impl"
    // InternalPascal.g:5804:1: rule__Case_label_list__Group__0__Impl : ( ( rule__Case_label_list__ConstantsAssignment_0 ) ) ;
    public final void rule__Case_label_list__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5808:1: ( ( ( rule__Case_label_list__ConstantsAssignment_0 ) ) )
            // InternalPascal.g:5809:1: ( ( rule__Case_label_list__ConstantsAssignment_0 ) )
            {
            // InternalPascal.g:5809:1: ( ( rule__Case_label_list__ConstantsAssignment_0 ) )
            // InternalPascal.g:5810:2: ( rule__Case_label_list__ConstantsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getConstantsAssignment_0()); 
            }
            // InternalPascal.g:5811:2: ( rule__Case_label_list__ConstantsAssignment_0 )
            // InternalPascal.g:5811:3: rule__Case_label_list__ConstantsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Case_label_list__ConstantsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getConstantsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group__0__Impl"


    // $ANTLR start "rule__Case_label_list__Group__1"
    // InternalPascal.g:5819:1: rule__Case_label_list__Group__1 : rule__Case_label_list__Group__1__Impl ;
    public final void rule__Case_label_list__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5823:1: ( rule__Case_label_list__Group__1__Impl )
            // InternalPascal.g:5824:2: rule__Case_label_list__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Case_label_list__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group__1"


    // $ANTLR start "rule__Case_label_list__Group__1__Impl"
    // InternalPascal.g:5830:1: rule__Case_label_list__Group__1__Impl : ( ( rule__Case_label_list__Group_1__0 )* ) ;
    public final void rule__Case_label_list__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5834:1: ( ( ( rule__Case_label_list__Group_1__0 )* ) )
            // InternalPascal.g:5835:1: ( ( rule__Case_label_list__Group_1__0 )* )
            {
            // InternalPascal.g:5835:1: ( ( rule__Case_label_list__Group_1__0 )* )
            // InternalPascal.g:5836:2: ( rule__Case_label_list__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getGroup_1()); 
            }
            // InternalPascal.g:5837:2: ( rule__Case_label_list__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==29) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalPascal.g:5837:3: rule__Case_label_list__Group_1__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Case_label_list__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group__1__Impl"


    // $ANTLR start "rule__Case_label_list__Group_1__0"
    // InternalPascal.g:5846:1: rule__Case_label_list__Group_1__0 : rule__Case_label_list__Group_1__0__Impl rule__Case_label_list__Group_1__1 ;
    public final void rule__Case_label_list__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5850:1: ( rule__Case_label_list__Group_1__0__Impl rule__Case_label_list__Group_1__1 )
            // InternalPascal.g:5851:2: rule__Case_label_list__Group_1__0__Impl rule__Case_label_list__Group_1__1
            {
            pushFollow(FOLLOW_34);
            rule__Case_label_list__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Case_label_list__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group_1__0"


    // $ANTLR start "rule__Case_label_list__Group_1__0__Impl"
    // InternalPascal.g:5858:1: rule__Case_label_list__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Case_label_list__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5862:1: ( ( ',' ) )
            // InternalPascal.g:5863:1: ( ',' )
            {
            // InternalPascal.g:5863:1: ( ',' )
            // InternalPascal.g:5864:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getCommaKeyword_1_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group_1__0__Impl"


    // $ANTLR start "rule__Case_label_list__Group_1__1"
    // InternalPascal.g:5873:1: rule__Case_label_list__Group_1__1 : rule__Case_label_list__Group_1__1__Impl ;
    public final void rule__Case_label_list__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5877:1: ( rule__Case_label_list__Group_1__1__Impl )
            // InternalPascal.g:5878:2: rule__Case_label_list__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Case_label_list__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group_1__1"


    // $ANTLR start "rule__Case_label_list__Group_1__1__Impl"
    // InternalPascal.g:5884:1: rule__Case_label_list__Group_1__1__Impl : ( ( rule__Case_label_list__ConstantsAssignment_1_1 ) ) ;
    public final void rule__Case_label_list__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5888:1: ( ( ( rule__Case_label_list__ConstantsAssignment_1_1 ) ) )
            // InternalPascal.g:5889:1: ( ( rule__Case_label_list__ConstantsAssignment_1_1 ) )
            {
            // InternalPascal.g:5889:1: ( ( rule__Case_label_list__ConstantsAssignment_1_1 ) )
            // InternalPascal.g:5890:2: ( rule__Case_label_list__ConstantsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getConstantsAssignment_1_1()); 
            }
            // InternalPascal.g:5891:2: ( rule__Case_label_list__ConstantsAssignment_1_1 )
            // InternalPascal.g:5891:3: rule__Case_label_list__ConstantsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Case_label_list__ConstantsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getConstantsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__Group_1__1__Impl"


    // $ANTLR start "rule__Constant__Group_0__0"
    // InternalPascal.g:5900:1: rule__Constant__Group_0__0 : rule__Constant__Group_0__0__Impl rule__Constant__Group_0__1 ;
    public final void rule__Constant__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5904:1: ( rule__Constant__Group_0__0__Impl rule__Constant__Group_0__1 )
            // InternalPascal.g:5905:2: rule__Constant__Group_0__0__Impl rule__Constant__Group_0__1
            {
            pushFollow(FOLLOW_36);
            rule__Constant__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Constant__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__Group_0__0"


    // $ANTLR start "rule__Constant__Group_0__0__Impl"
    // InternalPascal.g:5912:1: rule__Constant__Group_0__0__Impl : ( ( rule__Constant__OpteratorAssignment_0_0 )? ) ;
    public final void rule__Constant__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5916:1: ( ( ( rule__Constant__OpteratorAssignment_0_0 )? ) )
            // InternalPascal.g:5917:1: ( ( rule__Constant__OpteratorAssignment_0_0 )? )
            {
            // InternalPascal.g:5917:1: ( ( rule__Constant__OpteratorAssignment_0_0 )? )
            // InternalPascal.g:5918:2: ( rule__Constant__OpteratorAssignment_0_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getOpteratorAssignment_0_0()); 
            }
            // InternalPascal.g:5919:2: ( rule__Constant__OpteratorAssignment_0_0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_ADDITION_OPERATOR) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalPascal.g:5919:3: rule__Constant__OpteratorAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Constant__OpteratorAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getOpteratorAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__Group_0__0__Impl"


    // $ANTLR start "rule__Constant__Group_0__1"
    // InternalPascal.g:5927:1: rule__Constant__Group_0__1 : rule__Constant__Group_0__1__Impl ;
    public final void rule__Constant__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5931:1: ( rule__Constant__Group_0__1__Impl )
            // InternalPascal.g:5932:2: rule__Constant__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Constant__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__Group_0__1"


    // $ANTLR start "rule__Constant__Group_0__1__Impl"
    // InternalPascal.g:5938:1: rule__Constant__Group_0__1__Impl : ( ( rule__Constant__Alternatives_0_1 ) ) ;
    public final void rule__Constant__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5942:1: ( ( ( rule__Constant__Alternatives_0_1 ) ) )
            // InternalPascal.g:5943:1: ( ( rule__Constant__Alternatives_0_1 ) )
            {
            // InternalPascal.g:5943:1: ( ( rule__Constant__Alternatives_0_1 ) )
            // InternalPascal.g:5944:2: ( rule__Constant__Alternatives_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getAlternatives_0_1()); 
            }
            // InternalPascal.g:5945:2: ( rule__Constant__Alternatives_0_1 )
            // InternalPascal.g:5945:3: rule__Constant__Alternatives_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Constant__Alternatives_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getAlternatives_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__Group_0__1__Impl"


    // $ANTLR start "rule__With_statement__Group__0"
    // InternalPascal.g:5954:1: rule__With_statement__Group__0 : rule__With_statement__Group__0__Impl rule__With_statement__Group__1 ;
    public final void rule__With_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5958:1: ( rule__With_statement__Group__0__Impl rule__With_statement__Group__1 )
            // InternalPascal.g:5959:2: rule__With_statement__Group__0__Impl rule__With_statement__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__With_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__With_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__0"


    // $ANTLR start "rule__With_statement__Group__0__Impl"
    // InternalPascal.g:5966:1: rule__With_statement__Group__0__Impl : ( 'with' ) ;
    public final void rule__With_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5970:1: ( ( 'with' ) )
            // InternalPascal.g:5971:1: ( 'with' )
            {
            // InternalPascal.g:5971:1: ( 'with' )
            // InternalPascal.g:5972:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getWithKeyword_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__0__Impl"


    // $ANTLR start "rule__With_statement__Group__1"
    // InternalPascal.g:5981:1: rule__With_statement__Group__1 : rule__With_statement__Group__1__Impl rule__With_statement__Group__2 ;
    public final void rule__With_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5985:1: ( rule__With_statement__Group__1__Impl rule__With_statement__Group__2 )
            // InternalPascal.g:5986:2: rule__With_statement__Group__1__Impl rule__With_statement__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__With_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__With_statement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__1"


    // $ANTLR start "rule__With_statement__Group__1__Impl"
    // InternalPascal.g:5993:1: rule__With_statement__Group__1__Impl : ( ( rule__With_statement__VariablesAssignment_1 ) ) ;
    public final void rule__With_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:5997:1: ( ( ( rule__With_statement__VariablesAssignment_1 ) ) )
            // InternalPascal.g:5998:1: ( ( rule__With_statement__VariablesAssignment_1 ) )
            {
            // InternalPascal.g:5998:1: ( ( rule__With_statement__VariablesAssignment_1 ) )
            // InternalPascal.g:5999:2: ( rule__With_statement__VariablesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getVariablesAssignment_1()); 
            }
            // InternalPascal.g:6000:2: ( rule__With_statement__VariablesAssignment_1 )
            // InternalPascal.g:6000:3: rule__With_statement__VariablesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__With_statement__VariablesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getVariablesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__1__Impl"


    // $ANTLR start "rule__With_statement__Group__2"
    // InternalPascal.g:6008:1: rule__With_statement__Group__2 : rule__With_statement__Group__2__Impl rule__With_statement__Group__3 ;
    public final void rule__With_statement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6012:1: ( rule__With_statement__Group__2__Impl rule__With_statement__Group__3 )
            // InternalPascal.g:6013:2: rule__With_statement__Group__2__Impl rule__With_statement__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__With_statement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__With_statement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__2"


    // $ANTLR start "rule__With_statement__Group__2__Impl"
    // InternalPascal.g:6020:1: rule__With_statement__Group__2__Impl : ( ( rule__With_statement__Group_2__0 )* ) ;
    public final void rule__With_statement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6024:1: ( ( ( rule__With_statement__Group_2__0 )* ) )
            // InternalPascal.g:6025:1: ( ( rule__With_statement__Group_2__0 )* )
            {
            // InternalPascal.g:6025:1: ( ( rule__With_statement__Group_2__0 )* )
            // InternalPascal.g:6026:2: ( rule__With_statement__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getGroup_2()); 
            }
            // InternalPascal.g:6027:2: ( rule__With_statement__Group_2__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==29) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalPascal.g:6027:3: rule__With_statement__Group_2__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__With_statement__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__2__Impl"


    // $ANTLR start "rule__With_statement__Group__3"
    // InternalPascal.g:6035:1: rule__With_statement__Group__3 : rule__With_statement__Group__3__Impl rule__With_statement__Group__4 ;
    public final void rule__With_statement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6039:1: ( rule__With_statement__Group__3__Impl rule__With_statement__Group__4 )
            // InternalPascal.g:6040:2: rule__With_statement__Group__3__Impl rule__With_statement__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__With_statement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__With_statement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__3"


    // $ANTLR start "rule__With_statement__Group__3__Impl"
    // InternalPascal.g:6047:1: rule__With_statement__Group__3__Impl : ( 'do' ) ;
    public final void rule__With_statement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6051:1: ( ( 'do' ) )
            // InternalPascal.g:6052:1: ( 'do' )
            {
            // InternalPascal.g:6052:1: ( 'do' )
            // InternalPascal.g:6053:2: 'do'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getDoKeyword_3()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getDoKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__3__Impl"


    // $ANTLR start "rule__With_statement__Group__4"
    // InternalPascal.g:6062:1: rule__With_statement__Group__4 : rule__With_statement__Group__4__Impl ;
    public final void rule__With_statement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6066:1: ( rule__With_statement__Group__4__Impl )
            // InternalPascal.g:6067:2: rule__With_statement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__With_statement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__4"


    // $ANTLR start "rule__With_statement__Group__4__Impl"
    // InternalPascal.g:6073:1: rule__With_statement__Group__4__Impl : ( ( rule__With_statement__StatementAssignment_4 ) ) ;
    public final void rule__With_statement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6077:1: ( ( ( rule__With_statement__StatementAssignment_4 ) ) )
            // InternalPascal.g:6078:1: ( ( rule__With_statement__StatementAssignment_4 ) )
            {
            // InternalPascal.g:6078:1: ( ( rule__With_statement__StatementAssignment_4 ) )
            // InternalPascal.g:6079:2: ( rule__With_statement__StatementAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getStatementAssignment_4()); 
            }
            // InternalPascal.g:6080:2: ( rule__With_statement__StatementAssignment_4 )
            // InternalPascal.g:6080:3: rule__With_statement__StatementAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__With_statement__StatementAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getStatementAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group__4__Impl"


    // $ANTLR start "rule__With_statement__Group_2__0"
    // InternalPascal.g:6089:1: rule__With_statement__Group_2__0 : rule__With_statement__Group_2__0__Impl rule__With_statement__Group_2__1 ;
    public final void rule__With_statement__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6093:1: ( rule__With_statement__Group_2__0__Impl rule__With_statement__Group_2__1 )
            // InternalPascal.g:6094:2: rule__With_statement__Group_2__0__Impl rule__With_statement__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__With_statement__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__With_statement__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group_2__0"


    // $ANTLR start "rule__With_statement__Group_2__0__Impl"
    // InternalPascal.g:6101:1: rule__With_statement__Group_2__0__Impl : ( ',' ) ;
    public final void rule__With_statement__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6105:1: ( ( ',' ) )
            // InternalPascal.g:6106:1: ( ',' )
            {
            // InternalPascal.g:6106:1: ( ',' )
            // InternalPascal.g:6107:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getCommaKeyword_2_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group_2__0__Impl"


    // $ANTLR start "rule__With_statement__Group_2__1"
    // InternalPascal.g:6116:1: rule__With_statement__Group_2__1 : rule__With_statement__Group_2__1__Impl ;
    public final void rule__With_statement__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6120:1: ( rule__With_statement__Group_2__1__Impl )
            // InternalPascal.g:6121:2: rule__With_statement__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__With_statement__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group_2__1"


    // $ANTLR start "rule__With_statement__Group_2__1__Impl"
    // InternalPascal.g:6127:1: rule__With_statement__Group_2__1__Impl : ( ( rule__With_statement__VariablesAssignment_2_1 ) ) ;
    public final void rule__With_statement__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6131:1: ( ( ( rule__With_statement__VariablesAssignment_2_1 ) ) )
            // InternalPascal.g:6132:1: ( ( rule__With_statement__VariablesAssignment_2_1 ) )
            {
            // InternalPascal.g:6132:1: ( ( rule__With_statement__VariablesAssignment_2_1 ) )
            // InternalPascal.g:6133:2: ( rule__With_statement__VariablesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getVariablesAssignment_2_1()); 
            }
            // InternalPascal.g:6134:2: ( rule__With_statement__VariablesAssignment_2_1 )
            // InternalPascal.g:6134:3: rule__With_statement__VariablesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__With_statement__VariablesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getVariablesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__Group_2__1__Impl"


    // $ANTLR start "rule__Goto_statement__Group__0"
    // InternalPascal.g:6143:1: rule__Goto_statement__Group__0 : rule__Goto_statement__Group__0__Impl rule__Goto_statement__Group__1 ;
    public final void rule__Goto_statement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6147:1: ( rule__Goto_statement__Group__0__Impl rule__Goto_statement__Group__1 )
            // InternalPascal.g:6148:2: rule__Goto_statement__Group__0__Impl rule__Goto_statement__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__Goto_statement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Goto_statement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Goto_statement__Group__0"


    // $ANTLR start "rule__Goto_statement__Group__0__Impl"
    // InternalPascal.g:6155:1: rule__Goto_statement__Group__0__Impl : ( 'goto' ) ;
    public final void rule__Goto_statement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6159:1: ( ( 'goto' ) )
            // InternalPascal.g:6160:1: ( 'goto' )
            {
            // InternalPascal.g:6160:1: ( 'goto' )
            // InternalPascal.g:6161:2: 'goto'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoto_statementAccess().getGotoKeyword_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoto_statementAccess().getGotoKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Goto_statement__Group__0__Impl"


    // $ANTLR start "rule__Goto_statement__Group__1"
    // InternalPascal.g:6170:1: rule__Goto_statement__Group__1 : rule__Goto_statement__Group__1__Impl ;
    public final void rule__Goto_statement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6174:1: ( rule__Goto_statement__Group__1__Impl )
            // InternalPascal.g:6175:2: rule__Goto_statement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Goto_statement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Goto_statement__Group__1"


    // $ANTLR start "rule__Goto_statement__Group__1__Impl"
    // InternalPascal.g:6181:1: rule__Goto_statement__Group__1__Impl : ( ( rule__Goto_statement__LabelAssignment_1 ) ) ;
    public final void rule__Goto_statement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6185:1: ( ( ( rule__Goto_statement__LabelAssignment_1 ) ) )
            // InternalPascal.g:6186:1: ( ( rule__Goto_statement__LabelAssignment_1 ) )
            {
            // InternalPascal.g:6186:1: ( ( rule__Goto_statement__LabelAssignment_1 ) )
            // InternalPascal.g:6187:2: ( rule__Goto_statement__LabelAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoto_statementAccess().getLabelAssignment_1()); 
            }
            // InternalPascal.g:6188:2: ( rule__Goto_statement__LabelAssignment_1 )
            // InternalPascal.g:6188:3: rule__Goto_statement__LabelAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Goto_statement__LabelAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoto_statementAccess().getLabelAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Goto_statement__Group__1__Impl"


    // $ANTLR start "rule__Label_declaration_part__Group__0"
    // InternalPascal.g:6197:1: rule__Label_declaration_part__Group__0 : rule__Label_declaration_part__Group__0__Impl rule__Label_declaration_part__Group__1 ;
    public final void rule__Label_declaration_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6201:1: ( rule__Label_declaration_part__Group__0__Impl rule__Label_declaration_part__Group__1 )
            // InternalPascal.g:6202:2: rule__Label_declaration_part__Group__0__Impl rule__Label_declaration_part__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__Label_declaration_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__0"


    // $ANTLR start "rule__Label_declaration_part__Group__0__Impl"
    // InternalPascal.g:6209:1: rule__Label_declaration_part__Group__0__Impl : ( 'label' ) ;
    public final void rule__Label_declaration_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6213:1: ( ( 'label' ) )
            // InternalPascal.g:6214:1: ( 'label' )
            {
            // InternalPascal.g:6214:1: ( 'label' )
            // InternalPascal.g:6215:2: 'label'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getLabelKeyword_0()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getLabelKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__0__Impl"


    // $ANTLR start "rule__Label_declaration_part__Group__1"
    // InternalPascal.g:6224:1: rule__Label_declaration_part__Group__1 : rule__Label_declaration_part__Group__1__Impl rule__Label_declaration_part__Group__2 ;
    public final void rule__Label_declaration_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6228:1: ( rule__Label_declaration_part__Group__1__Impl rule__Label_declaration_part__Group__2 )
            // InternalPascal.g:6229:2: rule__Label_declaration_part__Group__1__Impl rule__Label_declaration_part__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__Label_declaration_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__1"


    // $ANTLR start "rule__Label_declaration_part__Group__1__Impl"
    // InternalPascal.g:6236:1: rule__Label_declaration_part__Group__1__Impl : ( ( rule__Label_declaration_part__LabelsAssignment_1 ) ) ;
    public final void rule__Label_declaration_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6240:1: ( ( ( rule__Label_declaration_part__LabelsAssignment_1 ) ) )
            // InternalPascal.g:6241:1: ( ( rule__Label_declaration_part__LabelsAssignment_1 ) )
            {
            // InternalPascal.g:6241:1: ( ( rule__Label_declaration_part__LabelsAssignment_1 ) )
            // InternalPascal.g:6242:2: ( rule__Label_declaration_part__LabelsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getLabelsAssignment_1()); 
            }
            // InternalPascal.g:6243:2: ( rule__Label_declaration_part__LabelsAssignment_1 )
            // InternalPascal.g:6243:3: rule__Label_declaration_part__LabelsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__LabelsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getLabelsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__1__Impl"


    // $ANTLR start "rule__Label_declaration_part__Group__2"
    // InternalPascal.g:6251:1: rule__Label_declaration_part__Group__2 : rule__Label_declaration_part__Group__2__Impl rule__Label_declaration_part__Group__3 ;
    public final void rule__Label_declaration_part__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6255:1: ( rule__Label_declaration_part__Group__2__Impl rule__Label_declaration_part__Group__3 )
            // InternalPascal.g:6256:2: rule__Label_declaration_part__Group__2__Impl rule__Label_declaration_part__Group__3
            {
            pushFollow(FOLLOW_39);
            rule__Label_declaration_part__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__2"


    // $ANTLR start "rule__Label_declaration_part__Group__2__Impl"
    // InternalPascal.g:6263:1: rule__Label_declaration_part__Group__2__Impl : ( ( rule__Label_declaration_part__Group_2__0 )* ) ;
    public final void rule__Label_declaration_part__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6267:1: ( ( ( rule__Label_declaration_part__Group_2__0 )* ) )
            // InternalPascal.g:6268:1: ( ( rule__Label_declaration_part__Group_2__0 )* )
            {
            // InternalPascal.g:6268:1: ( ( rule__Label_declaration_part__Group_2__0 )* )
            // InternalPascal.g:6269:2: ( rule__Label_declaration_part__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getGroup_2()); 
            }
            // InternalPascal.g:6270:2: ( rule__Label_declaration_part__Group_2__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==29) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalPascal.g:6270:3: rule__Label_declaration_part__Group_2__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Label_declaration_part__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__2__Impl"


    // $ANTLR start "rule__Label_declaration_part__Group__3"
    // InternalPascal.g:6278:1: rule__Label_declaration_part__Group__3 : rule__Label_declaration_part__Group__3__Impl ;
    public final void rule__Label_declaration_part__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6282:1: ( rule__Label_declaration_part__Group__3__Impl )
            // InternalPascal.g:6283:2: rule__Label_declaration_part__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__3"


    // $ANTLR start "rule__Label_declaration_part__Group__3__Impl"
    // InternalPascal.g:6289:1: rule__Label_declaration_part__Group__3__Impl : ( ';' ) ;
    public final void rule__Label_declaration_part__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6293:1: ( ( ';' ) )
            // InternalPascal.g:6294:1: ( ';' )
            {
            // InternalPascal.g:6294:1: ( ';' )
            // InternalPascal.g:6295:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getSemicolonKeyword_3()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group__3__Impl"


    // $ANTLR start "rule__Label_declaration_part__Group_2__0"
    // InternalPascal.g:6305:1: rule__Label_declaration_part__Group_2__0 : rule__Label_declaration_part__Group_2__0__Impl rule__Label_declaration_part__Group_2__1 ;
    public final void rule__Label_declaration_part__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6309:1: ( rule__Label_declaration_part__Group_2__0__Impl rule__Label_declaration_part__Group_2__1 )
            // InternalPascal.g:6310:2: rule__Label_declaration_part__Group_2__0__Impl rule__Label_declaration_part__Group_2__1
            {
            pushFollow(FOLLOW_38);
            rule__Label_declaration_part__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group_2__0"


    // $ANTLR start "rule__Label_declaration_part__Group_2__0__Impl"
    // InternalPascal.g:6317:1: rule__Label_declaration_part__Group_2__0__Impl : ( ',' ) ;
    public final void rule__Label_declaration_part__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6321:1: ( ( ',' ) )
            // InternalPascal.g:6322:1: ( ',' )
            {
            // InternalPascal.g:6322:1: ( ',' )
            // InternalPascal.g:6323:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getCommaKeyword_2_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group_2__0__Impl"


    // $ANTLR start "rule__Label_declaration_part__Group_2__1"
    // InternalPascal.g:6332:1: rule__Label_declaration_part__Group_2__1 : rule__Label_declaration_part__Group_2__1__Impl ;
    public final void rule__Label_declaration_part__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6336:1: ( rule__Label_declaration_part__Group_2__1__Impl )
            // InternalPascal.g:6337:2: rule__Label_declaration_part__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group_2__1"


    // $ANTLR start "rule__Label_declaration_part__Group_2__1__Impl"
    // InternalPascal.g:6343:1: rule__Label_declaration_part__Group_2__1__Impl : ( ( rule__Label_declaration_part__LabelsAssignment_2_1 ) ) ;
    public final void rule__Label_declaration_part__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6347:1: ( ( ( rule__Label_declaration_part__LabelsAssignment_2_1 ) ) )
            // InternalPascal.g:6348:1: ( ( rule__Label_declaration_part__LabelsAssignment_2_1 ) )
            {
            // InternalPascal.g:6348:1: ( ( rule__Label_declaration_part__LabelsAssignment_2_1 ) )
            // InternalPascal.g:6349:2: ( rule__Label_declaration_part__LabelsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getLabelsAssignment_2_1()); 
            }
            // InternalPascal.g:6350:2: ( rule__Label_declaration_part__LabelsAssignment_2_1 )
            // InternalPascal.g:6350:3: rule__Label_declaration_part__LabelsAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Label_declaration_part__LabelsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getLabelsAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__Group_2__1__Impl"


    // $ANTLR start "rule__Constant_definition_part__Group__0"
    // InternalPascal.g:6359:1: rule__Constant_definition_part__Group__0 : rule__Constant_definition_part__Group__0__Impl rule__Constant_definition_part__Group__1 ;
    public final void rule__Constant_definition_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6363:1: ( rule__Constant_definition_part__Group__0__Impl rule__Constant_definition_part__Group__1 )
            // InternalPascal.g:6364:2: rule__Constant_definition_part__Group__0__Impl rule__Constant_definition_part__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Constant_definition_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Constant_definition_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group__0"


    // $ANTLR start "rule__Constant_definition_part__Group__0__Impl"
    // InternalPascal.g:6371:1: rule__Constant_definition_part__Group__0__Impl : ( 'const' ) ;
    public final void rule__Constant_definition_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6375:1: ( ( 'const' ) )
            // InternalPascal.g:6376:1: ( 'const' )
            {
            // InternalPascal.g:6376:1: ( 'const' )
            // InternalPascal.g:6377:2: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group__0__Impl"


    // $ANTLR start "rule__Constant_definition_part__Group__1"
    // InternalPascal.g:6386:1: rule__Constant_definition_part__Group__1 : rule__Constant_definition_part__Group__1__Impl ;
    public final void rule__Constant_definition_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6390:1: ( rule__Constant_definition_part__Group__1__Impl )
            // InternalPascal.g:6391:2: rule__Constant_definition_part__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group__1"


    // $ANTLR start "rule__Constant_definition_part__Group__1__Impl"
    // InternalPascal.g:6397:1: rule__Constant_definition_part__Group__1__Impl : ( ( ( rule__Constant_definition_part__Group_1__0 ) ) ( ( rule__Constant_definition_part__Group_1__0 )* ) ) ;
    public final void rule__Constant_definition_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6401:1: ( ( ( ( rule__Constant_definition_part__Group_1__0 ) ) ( ( rule__Constant_definition_part__Group_1__0 )* ) ) )
            // InternalPascal.g:6402:1: ( ( ( rule__Constant_definition_part__Group_1__0 ) ) ( ( rule__Constant_definition_part__Group_1__0 )* ) )
            {
            // InternalPascal.g:6402:1: ( ( ( rule__Constant_definition_part__Group_1__0 ) ) ( ( rule__Constant_definition_part__Group_1__0 )* ) )
            // InternalPascal.g:6403:2: ( ( rule__Constant_definition_part__Group_1__0 ) ) ( ( rule__Constant_definition_part__Group_1__0 )* )
            {
            // InternalPascal.g:6403:2: ( ( rule__Constant_definition_part__Group_1__0 ) )
            // InternalPascal.g:6404:3: ( rule__Constant_definition_part__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); 
            }
            // InternalPascal.g:6405:3: ( rule__Constant_definition_part__Group_1__0 )
            // InternalPascal.g:6405:4: rule__Constant_definition_part__Group_1__0
            {
            pushFollow(FOLLOW_40);
            rule__Constant_definition_part__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); 
            }

            }

            // InternalPascal.g:6408:2: ( ( rule__Constant_definition_part__Group_1__0 )* )
            // InternalPascal.g:6409:3: ( rule__Constant_definition_part__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); 
            }
            // InternalPascal.g:6410:3: ( rule__Constant_definition_part__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_ID) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalPascal.g:6410:4: rule__Constant_definition_part__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Constant_definition_part__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group__1__Impl"


    // $ANTLR start "rule__Constant_definition_part__Group_1__0"
    // InternalPascal.g:6420:1: rule__Constant_definition_part__Group_1__0 : rule__Constant_definition_part__Group_1__0__Impl rule__Constant_definition_part__Group_1__1 ;
    public final void rule__Constant_definition_part__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6424:1: ( rule__Constant_definition_part__Group_1__0__Impl rule__Constant_definition_part__Group_1__1 )
            // InternalPascal.g:6425:2: rule__Constant_definition_part__Group_1__0__Impl rule__Constant_definition_part__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Constant_definition_part__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Constant_definition_part__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group_1__0"


    // $ANTLR start "rule__Constant_definition_part__Group_1__0__Impl"
    // InternalPascal.g:6432:1: rule__Constant_definition_part__Group_1__0__Impl : ( ( rule__Constant_definition_part__ConstsAssignment_1_0 ) ) ;
    public final void rule__Constant_definition_part__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6436:1: ( ( ( rule__Constant_definition_part__ConstsAssignment_1_0 ) ) )
            // InternalPascal.g:6437:1: ( ( rule__Constant_definition_part__ConstsAssignment_1_0 ) )
            {
            // InternalPascal.g:6437:1: ( ( rule__Constant_definition_part__ConstsAssignment_1_0 ) )
            // InternalPascal.g:6438:2: ( rule__Constant_definition_part__ConstsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getConstsAssignment_1_0()); 
            }
            // InternalPascal.g:6439:2: ( rule__Constant_definition_part__ConstsAssignment_1_0 )
            // InternalPascal.g:6439:3: rule__Constant_definition_part__ConstsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition_part__ConstsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getConstsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group_1__0__Impl"


    // $ANTLR start "rule__Constant_definition_part__Group_1__1"
    // InternalPascal.g:6447:1: rule__Constant_definition_part__Group_1__1 : rule__Constant_definition_part__Group_1__1__Impl ;
    public final void rule__Constant_definition_part__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6451:1: ( rule__Constant_definition_part__Group_1__1__Impl )
            // InternalPascal.g:6452:2: rule__Constant_definition_part__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition_part__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group_1__1"


    // $ANTLR start "rule__Constant_definition_part__Group_1__1__Impl"
    // InternalPascal.g:6458:1: rule__Constant_definition_part__Group_1__1__Impl : ( ';' ) ;
    public final void rule__Constant_definition_part__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6462:1: ( ( ';' ) )
            // InternalPascal.g:6463:1: ( ';' )
            {
            // InternalPascal.g:6463:1: ( ';' )
            // InternalPascal.g:6464:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__Group_1__1__Impl"


    // $ANTLR start "rule__Constant_definition__Group__0"
    // InternalPascal.g:6474:1: rule__Constant_definition__Group__0 : rule__Constant_definition__Group__0__Impl rule__Constant_definition__Group__1 ;
    public final void rule__Constant_definition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6478:1: ( rule__Constant_definition__Group__0__Impl rule__Constant_definition__Group__1 )
            // InternalPascal.g:6479:2: rule__Constant_definition__Group__0__Impl rule__Constant_definition__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__Constant_definition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Constant_definition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__Group__0"


    // $ANTLR start "rule__Constant_definition__Group__0__Impl"
    // InternalPascal.g:6486:1: rule__Constant_definition__Group__0__Impl : ( ( rule__Constant_definition__NameAssignment_0 ) ) ;
    public final void rule__Constant_definition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6490:1: ( ( ( rule__Constant_definition__NameAssignment_0 ) ) )
            // InternalPascal.g:6491:1: ( ( rule__Constant_definition__NameAssignment_0 ) )
            {
            // InternalPascal.g:6491:1: ( ( rule__Constant_definition__NameAssignment_0 ) )
            // InternalPascal.g:6492:2: ( rule__Constant_definition__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); 
            }
            // InternalPascal.g:6493:2: ( rule__Constant_definition__NameAssignment_0 )
            // InternalPascal.g:6493:3: rule__Constant_definition__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__Group__0__Impl"


    // $ANTLR start "rule__Constant_definition__Group__1"
    // InternalPascal.g:6501:1: rule__Constant_definition__Group__1 : rule__Constant_definition__Group__1__Impl rule__Constant_definition__Group__2 ;
    public final void rule__Constant_definition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6505:1: ( rule__Constant_definition__Group__1__Impl rule__Constant_definition__Group__2 )
            // InternalPascal.g:6506:2: rule__Constant_definition__Group__1__Impl rule__Constant_definition__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__Constant_definition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Constant_definition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__Group__1"


    // $ANTLR start "rule__Constant_definition__Group__1__Impl"
    // InternalPascal.g:6513:1: rule__Constant_definition__Group__1__Impl : ( '=' ) ;
    public final void rule__Constant_definition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6517:1: ( ( '=' ) )
            // InternalPascal.g:6518:1: ( '=' )
            {
            // InternalPascal.g:6518:1: ( '=' )
            // InternalPascal.g:6519:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__Group__1__Impl"


    // $ANTLR start "rule__Constant_definition__Group__2"
    // InternalPascal.g:6528:1: rule__Constant_definition__Group__2 : rule__Constant_definition__Group__2__Impl ;
    public final void rule__Constant_definition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6532:1: ( rule__Constant_definition__Group__2__Impl )
            // InternalPascal.g:6533:2: rule__Constant_definition__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__Group__2"


    // $ANTLR start "rule__Constant_definition__Group__2__Impl"
    // InternalPascal.g:6539:1: rule__Constant_definition__Group__2__Impl : ( ( rule__Constant_definition__ConstAssignment_2 ) ) ;
    public final void rule__Constant_definition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6543:1: ( ( ( rule__Constant_definition__ConstAssignment_2 ) ) )
            // InternalPascal.g:6544:1: ( ( rule__Constant_definition__ConstAssignment_2 ) )
            {
            // InternalPascal.g:6544:1: ( ( rule__Constant_definition__ConstAssignment_2 ) )
            // InternalPascal.g:6545:2: ( rule__Constant_definition__ConstAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionAccess().getConstAssignment_2()); 
            }
            // InternalPascal.g:6546:2: ( rule__Constant_definition__ConstAssignment_2 )
            // InternalPascal.g:6546:3: rule__Constant_definition__ConstAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Constant_definition__ConstAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionAccess().getConstAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__Group__2__Impl"


    // $ANTLR start "rule__Type_definition_part__Group__0"
    // InternalPascal.g:6555:1: rule__Type_definition_part__Group__0 : rule__Type_definition_part__Group__0__Impl rule__Type_definition_part__Group__1 ;
    public final void rule__Type_definition_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6559:1: ( rule__Type_definition_part__Group__0__Impl rule__Type_definition_part__Group__1 )
            // InternalPascal.g:6560:2: rule__Type_definition_part__Group__0__Impl rule__Type_definition_part__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Type_definition_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Type_definition_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group__0"


    // $ANTLR start "rule__Type_definition_part__Group__0__Impl"
    // InternalPascal.g:6567:1: rule__Type_definition_part__Group__0__Impl : ( 'type' ) ;
    public final void rule__Type_definition_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6571:1: ( ( 'type' ) )
            // InternalPascal.g:6572:1: ( 'type' )
            {
            // InternalPascal.g:6572:1: ( 'type' )
            // InternalPascal.g:6573:2: 'type'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group__0__Impl"


    // $ANTLR start "rule__Type_definition_part__Group__1"
    // InternalPascal.g:6582:1: rule__Type_definition_part__Group__1 : rule__Type_definition_part__Group__1__Impl ;
    public final void rule__Type_definition_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6586:1: ( rule__Type_definition_part__Group__1__Impl )
            // InternalPascal.g:6587:2: rule__Type_definition_part__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group__1"


    // $ANTLR start "rule__Type_definition_part__Group__1__Impl"
    // InternalPascal.g:6593:1: rule__Type_definition_part__Group__1__Impl : ( ( ( rule__Type_definition_part__Group_1__0 ) ) ( ( rule__Type_definition_part__Group_1__0 )* ) ) ;
    public final void rule__Type_definition_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6597:1: ( ( ( ( rule__Type_definition_part__Group_1__0 ) ) ( ( rule__Type_definition_part__Group_1__0 )* ) ) )
            // InternalPascal.g:6598:1: ( ( ( rule__Type_definition_part__Group_1__0 ) ) ( ( rule__Type_definition_part__Group_1__0 )* ) )
            {
            // InternalPascal.g:6598:1: ( ( ( rule__Type_definition_part__Group_1__0 ) ) ( ( rule__Type_definition_part__Group_1__0 )* ) )
            // InternalPascal.g:6599:2: ( ( rule__Type_definition_part__Group_1__0 ) ) ( ( rule__Type_definition_part__Group_1__0 )* )
            {
            // InternalPascal.g:6599:2: ( ( rule__Type_definition_part__Group_1__0 ) )
            // InternalPascal.g:6600:3: ( rule__Type_definition_part__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getGroup_1()); 
            }
            // InternalPascal.g:6601:3: ( rule__Type_definition_part__Group_1__0 )
            // InternalPascal.g:6601:4: rule__Type_definition_part__Group_1__0
            {
            pushFollow(FOLLOW_40);
            rule__Type_definition_part__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getGroup_1()); 
            }

            }

            // InternalPascal.g:6604:2: ( ( rule__Type_definition_part__Group_1__0 )* )
            // InternalPascal.g:6605:3: ( rule__Type_definition_part__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getGroup_1()); 
            }
            // InternalPascal.g:6606:3: ( rule__Type_definition_part__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_ID) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalPascal.g:6606:4: rule__Type_definition_part__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Type_definition_part__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group__1__Impl"


    // $ANTLR start "rule__Type_definition_part__Group_1__0"
    // InternalPascal.g:6616:1: rule__Type_definition_part__Group_1__0 : rule__Type_definition_part__Group_1__0__Impl rule__Type_definition_part__Group_1__1 ;
    public final void rule__Type_definition_part__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6620:1: ( rule__Type_definition_part__Group_1__0__Impl rule__Type_definition_part__Group_1__1 )
            // InternalPascal.g:6621:2: rule__Type_definition_part__Group_1__0__Impl rule__Type_definition_part__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Type_definition_part__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Type_definition_part__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group_1__0"


    // $ANTLR start "rule__Type_definition_part__Group_1__0__Impl"
    // InternalPascal.g:6628:1: rule__Type_definition_part__Group_1__0__Impl : ( ( rule__Type_definition_part__TypesAssignment_1_0 ) ) ;
    public final void rule__Type_definition_part__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6632:1: ( ( ( rule__Type_definition_part__TypesAssignment_1_0 ) ) )
            // InternalPascal.g:6633:1: ( ( rule__Type_definition_part__TypesAssignment_1_0 ) )
            {
            // InternalPascal.g:6633:1: ( ( rule__Type_definition_part__TypesAssignment_1_0 ) )
            // InternalPascal.g:6634:2: ( rule__Type_definition_part__TypesAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0()); 
            }
            // InternalPascal.g:6635:2: ( rule__Type_definition_part__TypesAssignment_1_0 )
            // InternalPascal.g:6635:3: rule__Type_definition_part__TypesAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition_part__TypesAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group_1__0__Impl"


    // $ANTLR start "rule__Type_definition_part__Group_1__1"
    // InternalPascal.g:6643:1: rule__Type_definition_part__Group_1__1 : rule__Type_definition_part__Group_1__1__Impl ;
    public final void rule__Type_definition_part__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6647:1: ( rule__Type_definition_part__Group_1__1__Impl )
            // InternalPascal.g:6648:2: rule__Type_definition_part__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition_part__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group_1__1"


    // $ANTLR start "rule__Type_definition_part__Group_1__1__Impl"
    // InternalPascal.g:6654:1: rule__Type_definition_part__Group_1__1__Impl : ( ';' ) ;
    public final void rule__Type_definition_part__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6658:1: ( ( ';' ) )
            // InternalPascal.g:6659:1: ( ';' )
            {
            // InternalPascal.g:6659:1: ( ';' )
            // InternalPascal.g:6660:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__Group_1__1__Impl"


    // $ANTLR start "rule__Type_definition__Group__0"
    // InternalPascal.g:6670:1: rule__Type_definition__Group__0 : rule__Type_definition__Group__0__Impl rule__Type_definition__Group__1 ;
    public final void rule__Type_definition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6674:1: ( rule__Type_definition__Group__0__Impl rule__Type_definition__Group__1 )
            // InternalPascal.g:6675:2: rule__Type_definition__Group__0__Impl rule__Type_definition__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__Type_definition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Type_definition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__Group__0"


    // $ANTLR start "rule__Type_definition__Group__0__Impl"
    // InternalPascal.g:6682:1: rule__Type_definition__Group__0__Impl : ( ( rule__Type_definition__NameAssignment_0 ) ) ;
    public final void rule__Type_definition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6686:1: ( ( ( rule__Type_definition__NameAssignment_0 ) ) )
            // InternalPascal.g:6687:1: ( ( rule__Type_definition__NameAssignment_0 ) )
            {
            // InternalPascal.g:6687:1: ( ( rule__Type_definition__NameAssignment_0 ) )
            // InternalPascal.g:6688:2: ( rule__Type_definition__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionAccess().getNameAssignment_0()); 
            }
            // InternalPascal.g:6689:2: ( rule__Type_definition__NameAssignment_0 )
            // InternalPascal.g:6689:3: rule__Type_definition__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__Group__0__Impl"


    // $ANTLR start "rule__Type_definition__Group__1"
    // InternalPascal.g:6697:1: rule__Type_definition__Group__1 : rule__Type_definition__Group__1__Impl rule__Type_definition__Group__2 ;
    public final void rule__Type_definition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6701:1: ( rule__Type_definition__Group__1__Impl rule__Type_definition__Group__2 )
            // InternalPascal.g:6702:2: rule__Type_definition__Group__1__Impl rule__Type_definition__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__Type_definition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Type_definition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__Group__1"


    // $ANTLR start "rule__Type_definition__Group__1__Impl"
    // InternalPascal.g:6709:1: rule__Type_definition__Group__1__Impl : ( '=' ) ;
    public final void rule__Type_definition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6713:1: ( ( '=' ) )
            // InternalPascal.g:6714:1: ( '=' )
            {
            // InternalPascal.g:6714:1: ( '=' )
            // InternalPascal.g:6715:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__Group__1__Impl"


    // $ANTLR start "rule__Type_definition__Group__2"
    // InternalPascal.g:6724:1: rule__Type_definition__Group__2 : rule__Type_definition__Group__2__Impl ;
    public final void rule__Type_definition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6728:1: ( rule__Type_definition__Group__2__Impl )
            // InternalPascal.g:6729:2: rule__Type_definition__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__Group__2"


    // $ANTLR start "rule__Type_definition__Group__2__Impl"
    // InternalPascal.g:6735:1: rule__Type_definition__Group__2__Impl : ( ( rule__Type_definition__TypeAssignment_2 ) ) ;
    public final void rule__Type_definition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6739:1: ( ( ( rule__Type_definition__TypeAssignment_2 ) ) )
            // InternalPascal.g:6740:1: ( ( rule__Type_definition__TypeAssignment_2 ) )
            {
            // InternalPascal.g:6740:1: ( ( rule__Type_definition__TypeAssignment_2 ) )
            // InternalPascal.g:6741:2: ( rule__Type_definition__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:6742:2: ( rule__Type_definition__TypeAssignment_2 )
            // InternalPascal.g:6742:3: rule__Type_definition__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Type_definition__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__Group__2__Impl"


    // $ANTLR start "rule__Subrange_type__Group_0__0"
    // InternalPascal.g:6751:1: rule__Subrange_type__Group_0__0 : rule__Subrange_type__Group_0__0__Impl rule__Subrange_type__Group_0__1 ;
    public final void rule__Subrange_type__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6755:1: ( rule__Subrange_type__Group_0__0__Impl rule__Subrange_type__Group_0__1 )
            // InternalPascal.g:6756:2: rule__Subrange_type__Group_0__0__Impl rule__Subrange_type__Group_0__1
            {
            pushFollow(FOLLOW_43);
            rule__Subrange_type__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Subrange_type__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_0__0"


    // $ANTLR start "rule__Subrange_type__Group_0__0__Impl"
    // InternalPascal.g:6763:1: rule__Subrange_type__Group_0__0__Impl : ( ( rule__Subrange_type__InitialConstAssignment_0_0 ) ) ;
    public final void rule__Subrange_type__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6767:1: ( ( ( rule__Subrange_type__InitialConstAssignment_0_0 ) ) )
            // InternalPascal.g:6768:1: ( ( rule__Subrange_type__InitialConstAssignment_0_0 ) )
            {
            // InternalPascal.g:6768:1: ( ( rule__Subrange_type__InitialConstAssignment_0_0 ) )
            // InternalPascal.g:6769:2: ( rule__Subrange_type__InitialConstAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getInitialConstAssignment_0_0()); 
            }
            // InternalPascal.g:6770:2: ( rule__Subrange_type__InitialConstAssignment_0_0 )
            // InternalPascal.g:6770:3: rule__Subrange_type__InitialConstAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__InitialConstAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getInitialConstAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_0__0__Impl"


    // $ANTLR start "rule__Subrange_type__Group_0__1"
    // InternalPascal.g:6778:1: rule__Subrange_type__Group_0__1 : rule__Subrange_type__Group_0__1__Impl rule__Subrange_type__Group_0__2 ;
    public final void rule__Subrange_type__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6782:1: ( rule__Subrange_type__Group_0__1__Impl rule__Subrange_type__Group_0__2 )
            // InternalPascal.g:6783:2: rule__Subrange_type__Group_0__1__Impl rule__Subrange_type__Group_0__2
            {
            pushFollow(FOLLOW_34);
            rule__Subrange_type__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Subrange_type__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_0__1"


    // $ANTLR start "rule__Subrange_type__Group_0__1__Impl"
    // InternalPascal.g:6790:1: rule__Subrange_type__Group_0__1__Impl : ( '..' ) ;
    public final void rule__Subrange_type__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6794:1: ( ( '..' ) )
            // InternalPascal.g:6795:1: ( '..' )
            {
            // InternalPascal.g:6795:1: ( '..' )
            // InternalPascal.g:6796:2: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getFullStopFullStopKeyword_0_1()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getFullStopFullStopKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_0__1__Impl"


    // $ANTLR start "rule__Subrange_type__Group_0__2"
    // InternalPascal.g:6805:1: rule__Subrange_type__Group_0__2 : rule__Subrange_type__Group_0__2__Impl ;
    public final void rule__Subrange_type__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6809:1: ( rule__Subrange_type__Group_0__2__Impl )
            // InternalPascal.g:6810:2: rule__Subrange_type__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_0__2"


    // $ANTLR start "rule__Subrange_type__Group_0__2__Impl"
    // InternalPascal.g:6816:1: rule__Subrange_type__Group_0__2__Impl : ( ( rule__Subrange_type__FinalConstAssignment_0_2 ) ) ;
    public final void rule__Subrange_type__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6820:1: ( ( ( rule__Subrange_type__FinalConstAssignment_0_2 ) ) )
            // InternalPascal.g:6821:1: ( ( rule__Subrange_type__FinalConstAssignment_0_2 ) )
            {
            // InternalPascal.g:6821:1: ( ( rule__Subrange_type__FinalConstAssignment_0_2 ) )
            // InternalPascal.g:6822:2: ( rule__Subrange_type__FinalConstAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getFinalConstAssignment_0_2()); 
            }
            // InternalPascal.g:6823:2: ( rule__Subrange_type__FinalConstAssignment_0_2 )
            // InternalPascal.g:6823:3: rule__Subrange_type__FinalConstAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__FinalConstAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getFinalConstAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_0__2__Impl"


    // $ANTLR start "rule__Subrange_type__Group_1__0"
    // InternalPascal.g:6832:1: rule__Subrange_type__Group_1__0 : rule__Subrange_type__Group_1__0__Impl rule__Subrange_type__Group_1__1 ;
    public final void rule__Subrange_type__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6836:1: ( rule__Subrange_type__Group_1__0__Impl rule__Subrange_type__Group_1__1 )
            // InternalPascal.g:6837:2: rule__Subrange_type__Group_1__0__Impl rule__Subrange_type__Group_1__1
            {
            pushFollow(FOLLOW_34);
            rule__Subrange_type__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Subrange_type__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_1__0"


    // $ANTLR start "rule__Subrange_type__Group_1__0__Impl"
    // InternalPascal.g:6844:1: rule__Subrange_type__Group_1__0__Impl : ( ( rule__Subrange_type__SubrangeAssignment_1_0 ) ) ;
    public final void rule__Subrange_type__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6848:1: ( ( ( rule__Subrange_type__SubrangeAssignment_1_0 ) ) )
            // InternalPascal.g:6849:1: ( ( rule__Subrange_type__SubrangeAssignment_1_0 ) )
            {
            // InternalPascal.g:6849:1: ( ( rule__Subrange_type__SubrangeAssignment_1_0 ) )
            // InternalPascal.g:6850:2: ( rule__Subrange_type__SubrangeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getSubrangeAssignment_1_0()); 
            }
            // InternalPascal.g:6851:2: ( rule__Subrange_type__SubrangeAssignment_1_0 )
            // InternalPascal.g:6851:3: rule__Subrange_type__SubrangeAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__SubrangeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getSubrangeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_1__0__Impl"


    // $ANTLR start "rule__Subrange_type__Group_1__1"
    // InternalPascal.g:6859:1: rule__Subrange_type__Group_1__1 : rule__Subrange_type__Group_1__1__Impl ;
    public final void rule__Subrange_type__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6863:1: ( rule__Subrange_type__Group_1__1__Impl )
            // InternalPascal.g:6864:2: rule__Subrange_type__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_1__1"


    // $ANTLR start "rule__Subrange_type__Group_1__1__Impl"
    // InternalPascal.g:6870:1: rule__Subrange_type__Group_1__1__Impl : ( ( rule__Subrange_type__ConstAssignment_1_1 ) ) ;
    public final void rule__Subrange_type__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6874:1: ( ( ( rule__Subrange_type__ConstAssignment_1_1 ) ) )
            // InternalPascal.g:6875:1: ( ( rule__Subrange_type__ConstAssignment_1_1 ) )
            {
            // InternalPascal.g:6875:1: ( ( rule__Subrange_type__ConstAssignment_1_1 ) )
            // InternalPascal.g:6876:2: ( rule__Subrange_type__ConstAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getConstAssignment_1_1()); 
            }
            // InternalPascal.g:6877:2: ( rule__Subrange_type__ConstAssignment_1_1 )
            // InternalPascal.g:6877:3: rule__Subrange_type__ConstAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Subrange_type__ConstAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getConstAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__Group_1__1__Impl"


    // $ANTLR start "rule__Enumerated_type__Group__0"
    // InternalPascal.g:6886:1: rule__Enumerated_type__Group__0 : rule__Enumerated_type__Group__0__Impl rule__Enumerated_type__Group__1 ;
    public final void rule__Enumerated_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6890:1: ( rule__Enumerated_type__Group__0__Impl rule__Enumerated_type__Group__1 )
            // InternalPascal.g:6891:2: rule__Enumerated_type__Group__0__Impl rule__Enumerated_type__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Enumerated_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enumerated_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__Group__0"


    // $ANTLR start "rule__Enumerated_type__Group__0__Impl"
    // InternalPascal.g:6898:1: rule__Enumerated_type__Group__0__Impl : ( '(' ) ;
    public final void rule__Enumerated_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6902:1: ( ( '(' ) )
            // InternalPascal.g:6903:1: ( '(' )
            {
            // InternalPascal.g:6903:1: ( '(' )
            // InternalPascal.g:6904:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumerated_typeAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumerated_typeAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__Group__0__Impl"


    // $ANTLR start "rule__Enumerated_type__Group__1"
    // InternalPascal.g:6913:1: rule__Enumerated_type__Group__1 : rule__Enumerated_type__Group__1__Impl rule__Enumerated_type__Group__2 ;
    public final void rule__Enumerated_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6917:1: ( rule__Enumerated_type__Group__1__Impl rule__Enumerated_type__Group__2 )
            // InternalPascal.g:6918:2: rule__Enumerated_type__Group__1__Impl rule__Enumerated_type__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Enumerated_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enumerated_type__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__Group__1"


    // $ANTLR start "rule__Enumerated_type__Group__1__Impl"
    // InternalPascal.g:6925:1: rule__Enumerated_type__Group__1__Impl : ( ( rule__Enumerated_type__IdentifiersAssignment_1 ) ) ;
    public final void rule__Enumerated_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6929:1: ( ( ( rule__Enumerated_type__IdentifiersAssignment_1 ) ) )
            // InternalPascal.g:6930:1: ( ( rule__Enumerated_type__IdentifiersAssignment_1 ) )
            {
            // InternalPascal.g:6930:1: ( ( rule__Enumerated_type__IdentifiersAssignment_1 ) )
            // InternalPascal.g:6931:2: ( rule__Enumerated_type__IdentifiersAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumerated_typeAccess().getIdentifiersAssignment_1()); 
            }
            // InternalPascal.g:6932:2: ( rule__Enumerated_type__IdentifiersAssignment_1 )
            // InternalPascal.g:6932:3: rule__Enumerated_type__IdentifiersAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Enumerated_type__IdentifiersAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumerated_typeAccess().getIdentifiersAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__Group__1__Impl"


    // $ANTLR start "rule__Enumerated_type__Group__2"
    // InternalPascal.g:6940:1: rule__Enumerated_type__Group__2 : rule__Enumerated_type__Group__2__Impl ;
    public final void rule__Enumerated_type__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6944:1: ( rule__Enumerated_type__Group__2__Impl )
            // InternalPascal.g:6945:2: rule__Enumerated_type__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Enumerated_type__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__Group__2"


    // $ANTLR start "rule__Enumerated_type__Group__2__Impl"
    // InternalPascal.g:6951:1: rule__Enumerated_type__Group__2__Impl : ( ')' ) ;
    public final void rule__Enumerated_type__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6955:1: ( ( ')' ) )
            // InternalPascal.g:6956:1: ( ')' )
            {
            // InternalPascal.g:6956:1: ( ')' )
            // InternalPascal.g:6957:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumerated_typeAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumerated_typeAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__Group__2__Impl"


    // $ANTLR start "rule__Structured_type__Group__0"
    // InternalPascal.g:6967:1: rule__Structured_type__Group__0 : rule__Structured_type__Group__0__Impl rule__Structured_type__Group__1 ;
    public final void rule__Structured_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6971:1: ( rule__Structured_type__Group__0__Impl rule__Structured_type__Group__1 )
            // InternalPascal.g:6972:2: rule__Structured_type__Group__0__Impl rule__Structured_type__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__Structured_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Structured_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_type__Group__0"


    // $ANTLR start "rule__Structured_type__Group__0__Impl"
    // InternalPascal.g:6979:1: rule__Structured_type__Group__0__Impl : ( ( rule__Structured_type__PackedAssignment_0 )? ) ;
    public final void rule__Structured_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6983:1: ( ( ( rule__Structured_type__PackedAssignment_0 )? ) )
            // InternalPascal.g:6984:1: ( ( rule__Structured_type__PackedAssignment_0 )? )
            {
            // InternalPascal.g:6984:1: ( ( rule__Structured_type__PackedAssignment_0 )? )
            // InternalPascal.g:6985:2: ( rule__Structured_type__PackedAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeAccess().getPackedAssignment_0()); 
            }
            // InternalPascal.g:6986:2: ( rule__Structured_type__PackedAssignment_0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==60) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalPascal.g:6986:3: rule__Structured_type__PackedAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Structured_type__PackedAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeAccess().getPackedAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_type__Group__0__Impl"


    // $ANTLR start "rule__Structured_type__Group__1"
    // InternalPascal.g:6994:1: rule__Structured_type__Group__1 : rule__Structured_type__Group__1__Impl ;
    public final void rule__Structured_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:6998:1: ( rule__Structured_type__Group__1__Impl )
            // InternalPascal.g:6999:2: rule__Structured_type__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Structured_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_type__Group__1"


    // $ANTLR start "rule__Structured_type__Group__1__Impl"
    // InternalPascal.g:7005:1: rule__Structured_type__Group__1__Impl : ( ( rule__Structured_type__TypeAssignment_1 ) ) ;
    public final void rule__Structured_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7009:1: ( ( ( rule__Structured_type__TypeAssignment_1 ) ) )
            // InternalPascal.g:7010:1: ( ( rule__Structured_type__TypeAssignment_1 ) )
            {
            // InternalPascal.g:7010:1: ( ( rule__Structured_type__TypeAssignment_1 ) )
            // InternalPascal.g:7011:2: ( rule__Structured_type__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeAccess().getTypeAssignment_1()); 
            }
            // InternalPascal.g:7012:2: ( rule__Structured_type__TypeAssignment_1 )
            // InternalPascal.g:7012:3: rule__Structured_type__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Structured_type__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_type__Group__1__Impl"


    // $ANTLR start "rule__Array_type__Group__0"
    // InternalPascal.g:7021:1: rule__Array_type__Group__0 : rule__Array_type__Group__0__Impl rule__Array_type__Group__1 ;
    public final void rule__Array_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7025:1: ( rule__Array_type__Group__0__Impl rule__Array_type__Group__1 )
            // InternalPascal.g:7026:2: rule__Array_type__Group__0__Impl rule__Array_type__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__Array_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__0"


    // $ANTLR start "rule__Array_type__Group__0__Impl"
    // InternalPascal.g:7033:1: rule__Array_type__Group__0__Impl : ( 'array' ) ;
    public final void rule__Array_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7037:1: ( ( 'array' ) )
            // InternalPascal.g:7038:1: ( 'array' )
            {
            // InternalPascal.g:7038:1: ( 'array' )
            // InternalPascal.g:7039:2: 'array'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getArrayKeyword_0()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getArrayKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__0__Impl"


    // $ANTLR start "rule__Array_type__Group__1"
    // InternalPascal.g:7048:1: rule__Array_type__Group__1 : rule__Array_type__Group__1__Impl rule__Array_type__Group__2 ;
    public final void rule__Array_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7052:1: ( rule__Array_type__Group__1__Impl rule__Array_type__Group__2 )
            // InternalPascal.g:7053:2: rule__Array_type__Group__1__Impl rule__Array_type__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__Array_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__1"


    // $ANTLR start "rule__Array_type__Group__1__Impl"
    // InternalPascal.g:7060:1: rule__Array_type__Group__1__Impl : ( '[' ) ;
    public final void rule__Array_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7064:1: ( ( '[' ) )
            // InternalPascal.g:7065:1: ( '[' )
            {
            // InternalPascal.g:7065:1: ( '[' )
            // InternalPascal.g:7066:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__1__Impl"


    // $ANTLR start "rule__Array_type__Group__2"
    // InternalPascal.g:7075:1: rule__Array_type__Group__2 : rule__Array_type__Group__2__Impl rule__Array_type__Group__3 ;
    public final void rule__Array_type__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7079:1: ( rule__Array_type__Group__2__Impl rule__Array_type__Group__3 )
            // InternalPascal.g:7080:2: rule__Array_type__Group__2__Impl rule__Array_type__Group__3
            {
            pushFollow(FOLLOW_47);
            rule__Array_type__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__2"


    // $ANTLR start "rule__Array_type__Group__2__Impl"
    // InternalPascal.g:7087:1: rule__Array_type__Group__2__Impl : ( ( rule__Array_type__IndexesAssignment_2 ) ) ;
    public final void rule__Array_type__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7091:1: ( ( ( rule__Array_type__IndexesAssignment_2 ) ) )
            // InternalPascal.g:7092:1: ( ( rule__Array_type__IndexesAssignment_2 ) )
            {
            // InternalPascal.g:7092:1: ( ( rule__Array_type__IndexesAssignment_2 ) )
            // InternalPascal.g:7093:2: ( rule__Array_type__IndexesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getIndexesAssignment_2()); 
            }
            // InternalPascal.g:7094:2: ( rule__Array_type__IndexesAssignment_2 )
            // InternalPascal.g:7094:3: rule__Array_type__IndexesAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Array_type__IndexesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getIndexesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__2__Impl"


    // $ANTLR start "rule__Array_type__Group__3"
    // InternalPascal.g:7102:1: rule__Array_type__Group__3 : rule__Array_type__Group__3__Impl rule__Array_type__Group__4 ;
    public final void rule__Array_type__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7106:1: ( rule__Array_type__Group__3__Impl rule__Array_type__Group__4 )
            // InternalPascal.g:7107:2: rule__Array_type__Group__3__Impl rule__Array_type__Group__4
            {
            pushFollow(FOLLOW_47);
            rule__Array_type__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__3"


    // $ANTLR start "rule__Array_type__Group__3__Impl"
    // InternalPascal.g:7114:1: rule__Array_type__Group__3__Impl : ( ( rule__Array_type__Group_3__0 )* ) ;
    public final void rule__Array_type__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7118:1: ( ( ( rule__Array_type__Group_3__0 )* ) )
            // InternalPascal.g:7119:1: ( ( rule__Array_type__Group_3__0 )* )
            {
            // InternalPascal.g:7119:1: ( ( rule__Array_type__Group_3__0 )* )
            // InternalPascal.g:7120:2: ( rule__Array_type__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getGroup_3()); 
            }
            // InternalPascal.g:7121:2: ( rule__Array_type__Group_3__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==29) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalPascal.g:7121:3: rule__Array_type__Group_3__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Array_type__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__3__Impl"


    // $ANTLR start "rule__Array_type__Group__4"
    // InternalPascal.g:7129:1: rule__Array_type__Group__4 : rule__Array_type__Group__4__Impl rule__Array_type__Group__5 ;
    public final void rule__Array_type__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7133:1: ( rule__Array_type__Group__4__Impl rule__Array_type__Group__5 )
            // InternalPascal.g:7134:2: rule__Array_type__Group__4__Impl rule__Array_type__Group__5
            {
            pushFollow(FOLLOW_33);
            rule__Array_type__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__4"


    // $ANTLR start "rule__Array_type__Group__4__Impl"
    // InternalPascal.g:7141:1: rule__Array_type__Group__4__Impl : ( ']' ) ;
    public final void rule__Array_type__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7145:1: ( ( ']' ) )
            // InternalPascal.g:7146:1: ( ']' )
            {
            // InternalPascal.g:7146:1: ( ']' )
            // InternalPascal.g:7147:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__4__Impl"


    // $ANTLR start "rule__Array_type__Group__5"
    // InternalPascal.g:7156:1: rule__Array_type__Group__5 : rule__Array_type__Group__5__Impl rule__Array_type__Group__6 ;
    public final void rule__Array_type__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7160:1: ( rule__Array_type__Group__5__Impl rule__Array_type__Group__6 )
            // InternalPascal.g:7161:2: rule__Array_type__Group__5__Impl rule__Array_type__Group__6
            {
            pushFollow(FOLLOW_42);
            rule__Array_type__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__5"


    // $ANTLR start "rule__Array_type__Group__5__Impl"
    // InternalPascal.g:7168:1: rule__Array_type__Group__5__Impl : ( 'of' ) ;
    public final void rule__Array_type__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7172:1: ( ( 'of' ) )
            // InternalPascal.g:7173:1: ( 'of' )
            {
            // InternalPascal.g:7173:1: ( 'of' )
            // InternalPascal.g:7174:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getOfKeyword_5()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getOfKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__5__Impl"


    // $ANTLR start "rule__Array_type__Group__6"
    // InternalPascal.g:7183:1: rule__Array_type__Group__6 : rule__Array_type__Group__6__Impl ;
    public final void rule__Array_type__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7187:1: ( rule__Array_type__Group__6__Impl )
            // InternalPascal.g:7188:2: rule__Array_type__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Array_type__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__6"


    // $ANTLR start "rule__Array_type__Group__6__Impl"
    // InternalPascal.g:7194:1: rule__Array_type__Group__6__Impl : ( ( rule__Array_type__TypeAssignment_6 ) ) ;
    public final void rule__Array_type__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7198:1: ( ( ( rule__Array_type__TypeAssignment_6 ) ) )
            // InternalPascal.g:7199:1: ( ( rule__Array_type__TypeAssignment_6 ) )
            {
            // InternalPascal.g:7199:1: ( ( rule__Array_type__TypeAssignment_6 ) )
            // InternalPascal.g:7200:2: ( rule__Array_type__TypeAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getTypeAssignment_6()); 
            }
            // InternalPascal.g:7201:2: ( rule__Array_type__TypeAssignment_6 )
            // InternalPascal.g:7201:3: rule__Array_type__TypeAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__Array_type__TypeAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getTypeAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group__6__Impl"


    // $ANTLR start "rule__Array_type__Group_3__0"
    // InternalPascal.g:7210:1: rule__Array_type__Group_3__0 : rule__Array_type__Group_3__0__Impl rule__Array_type__Group_3__1 ;
    public final void rule__Array_type__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7214:1: ( rule__Array_type__Group_3__0__Impl rule__Array_type__Group_3__1 )
            // InternalPascal.g:7215:2: rule__Array_type__Group_3__0__Impl rule__Array_type__Group_3__1
            {
            pushFollow(FOLLOW_46);
            rule__Array_type__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Array_type__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group_3__0"


    // $ANTLR start "rule__Array_type__Group_3__0__Impl"
    // InternalPascal.g:7222:1: rule__Array_type__Group_3__0__Impl : ( ',' ) ;
    public final void rule__Array_type__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7226:1: ( ( ',' ) )
            // InternalPascal.g:7227:1: ( ',' )
            {
            // InternalPascal.g:7227:1: ( ',' )
            // InternalPascal.g:7228:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getCommaKeyword_3_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group_3__0__Impl"


    // $ANTLR start "rule__Array_type__Group_3__1"
    // InternalPascal.g:7237:1: rule__Array_type__Group_3__1 : rule__Array_type__Group_3__1__Impl ;
    public final void rule__Array_type__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7241:1: ( rule__Array_type__Group_3__1__Impl )
            // InternalPascal.g:7242:2: rule__Array_type__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Array_type__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group_3__1"


    // $ANTLR start "rule__Array_type__Group_3__1__Impl"
    // InternalPascal.g:7248:1: rule__Array_type__Group_3__1__Impl : ( ( rule__Array_type__IndexesAssignment_3_1 ) ) ;
    public final void rule__Array_type__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7252:1: ( ( ( rule__Array_type__IndexesAssignment_3_1 ) ) )
            // InternalPascal.g:7253:1: ( ( rule__Array_type__IndexesAssignment_3_1 ) )
            {
            // InternalPascal.g:7253:1: ( ( rule__Array_type__IndexesAssignment_3_1 ) )
            // InternalPascal.g:7254:2: ( rule__Array_type__IndexesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getIndexesAssignment_3_1()); 
            }
            // InternalPascal.g:7255:2: ( rule__Array_type__IndexesAssignment_3_1 )
            // InternalPascal.g:7255:3: rule__Array_type__IndexesAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Array_type__IndexesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getIndexesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__Group_3__1__Impl"


    // $ANTLR start "rule__Dynamic_array_type__Group__0"
    // InternalPascal.g:7264:1: rule__Dynamic_array_type__Group__0 : rule__Dynamic_array_type__Group__0__Impl rule__Dynamic_array_type__Group__1 ;
    public final void rule__Dynamic_array_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7268:1: ( rule__Dynamic_array_type__Group__0__Impl rule__Dynamic_array_type__Group__1 )
            // InternalPascal.g:7269:2: rule__Dynamic_array_type__Group__0__Impl rule__Dynamic_array_type__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__Dynamic_array_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dynamic_array_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__Group__0"


    // $ANTLR start "rule__Dynamic_array_type__Group__0__Impl"
    // InternalPascal.g:7276:1: rule__Dynamic_array_type__Group__0__Impl : ( 'array' ) ;
    public final void rule__Dynamic_array_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7280:1: ( ( 'array' ) )
            // InternalPascal.g:7281:1: ( 'array' )
            {
            // InternalPascal.g:7281:1: ( 'array' )
            // InternalPascal.g:7282:2: 'array'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDynamic_array_typeAccess().getArrayKeyword_0()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDynamic_array_typeAccess().getArrayKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__Group__0__Impl"


    // $ANTLR start "rule__Dynamic_array_type__Group__1"
    // InternalPascal.g:7291:1: rule__Dynamic_array_type__Group__1 : rule__Dynamic_array_type__Group__1__Impl rule__Dynamic_array_type__Group__2 ;
    public final void rule__Dynamic_array_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7295:1: ( rule__Dynamic_array_type__Group__1__Impl rule__Dynamic_array_type__Group__2 )
            // InternalPascal.g:7296:2: rule__Dynamic_array_type__Group__1__Impl rule__Dynamic_array_type__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__Dynamic_array_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dynamic_array_type__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__Group__1"


    // $ANTLR start "rule__Dynamic_array_type__Group__1__Impl"
    // InternalPascal.g:7303:1: rule__Dynamic_array_type__Group__1__Impl : ( 'of' ) ;
    public final void rule__Dynamic_array_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7307:1: ( ( 'of' ) )
            // InternalPascal.g:7308:1: ( 'of' )
            {
            // InternalPascal.g:7308:1: ( 'of' )
            // InternalPascal.g:7309:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDynamic_array_typeAccess().getOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDynamic_array_typeAccess().getOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__Group__1__Impl"


    // $ANTLR start "rule__Dynamic_array_type__Group__2"
    // InternalPascal.g:7318:1: rule__Dynamic_array_type__Group__2 : rule__Dynamic_array_type__Group__2__Impl ;
    public final void rule__Dynamic_array_type__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7322:1: ( rule__Dynamic_array_type__Group__2__Impl )
            // InternalPascal.g:7323:2: rule__Dynamic_array_type__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dynamic_array_type__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__Group__2"


    // $ANTLR start "rule__Dynamic_array_type__Group__2__Impl"
    // InternalPascal.g:7329:1: rule__Dynamic_array_type__Group__2__Impl : ( ( rule__Dynamic_array_type__TypeAssignment_2 ) ) ;
    public final void rule__Dynamic_array_type__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7333:1: ( ( ( rule__Dynamic_array_type__TypeAssignment_2 ) ) )
            // InternalPascal.g:7334:1: ( ( rule__Dynamic_array_type__TypeAssignment_2 ) )
            {
            // InternalPascal.g:7334:1: ( ( rule__Dynamic_array_type__TypeAssignment_2 ) )
            // InternalPascal.g:7335:2: ( rule__Dynamic_array_type__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDynamic_array_typeAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:7336:2: ( rule__Dynamic_array_type__TypeAssignment_2 )
            // InternalPascal.g:7336:3: rule__Dynamic_array_type__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Dynamic_array_type__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDynamic_array_typeAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__Group__2__Impl"


    // $ANTLR start "rule__Record_type__Group__0"
    // InternalPascal.g:7345:1: rule__Record_type__Group__0 : rule__Record_type__Group__0__Impl rule__Record_type__Group__1 ;
    public final void rule__Record_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7349:1: ( rule__Record_type__Group__0__Impl rule__Record_type__Group__1 )
            // InternalPascal.g:7350:2: rule__Record_type__Group__0__Impl rule__Record_type__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__Record_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Record_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__Group__0"


    // $ANTLR start "rule__Record_type__Group__0__Impl"
    // InternalPascal.g:7357:1: rule__Record_type__Group__0__Impl : ( ( rule__Record_type__RecordKeywordAssignment_0 ) ) ;
    public final void rule__Record_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7361:1: ( ( ( rule__Record_type__RecordKeywordAssignment_0 ) ) )
            // InternalPascal.g:7362:1: ( ( rule__Record_type__RecordKeywordAssignment_0 ) )
            {
            // InternalPascal.g:7362:1: ( ( rule__Record_type__RecordKeywordAssignment_0 ) )
            // InternalPascal.g:7363:2: ( rule__Record_type__RecordKeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getRecordKeywordAssignment_0()); 
            }
            // InternalPascal.g:7364:2: ( rule__Record_type__RecordKeywordAssignment_0 )
            // InternalPascal.g:7364:3: rule__Record_type__RecordKeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Record_type__RecordKeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getRecordKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__Group__0__Impl"


    // $ANTLR start "rule__Record_type__Group__1"
    // InternalPascal.g:7372:1: rule__Record_type__Group__1 : rule__Record_type__Group__1__Impl rule__Record_type__Group__2 ;
    public final void rule__Record_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7376:1: ( rule__Record_type__Group__1__Impl rule__Record_type__Group__2 )
            // InternalPascal.g:7377:2: rule__Record_type__Group__1__Impl rule__Record_type__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__Record_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Record_type__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__Group__1"


    // $ANTLR start "rule__Record_type__Group__1__Impl"
    // InternalPascal.g:7384:1: rule__Record_type__Group__1__Impl : ( ( rule__Record_type__FieldsAssignment_1 )? ) ;
    public final void rule__Record_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7388:1: ( ( ( rule__Record_type__FieldsAssignment_1 )? ) )
            // InternalPascal.g:7389:1: ( ( rule__Record_type__FieldsAssignment_1 )? )
            {
            // InternalPascal.g:7389:1: ( ( rule__Record_type__FieldsAssignment_1 )? )
            // InternalPascal.g:7390:2: ( rule__Record_type__FieldsAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getFieldsAssignment_1()); 
            }
            // InternalPascal.g:7391:2: ( rule__Record_type__FieldsAssignment_1 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_ID||LA60_0==46) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalPascal.g:7391:3: rule__Record_type__FieldsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Record_type__FieldsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getFieldsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__Group__1__Impl"


    // $ANTLR start "rule__Record_type__Group__2"
    // InternalPascal.g:7399:1: rule__Record_type__Group__2 : rule__Record_type__Group__2__Impl ;
    public final void rule__Record_type__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7403:1: ( rule__Record_type__Group__2__Impl )
            // InternalPascal.g:7404:2: rule__Record_type__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Record_type__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__Group__2"


    // $ANTLR start "rule__Record_type__Group__2__Impl"
    // InternalPascal.g:7410:1: rule__Record_type__Group__2__Impl : ( ( rule__Record_type__EndKeywordAssignment_2 ) ) ;
    public final void rule__Record_type__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7414:1: ( ( ( rule__Record_type__EndKeywordAssignment_2 ) ) )
            // InternalPascal.g:7415:1: ( ( rule__Record_type__EndKeywordAssignment_2 ) )
            {
            // InternalPascal.g:7415:1: ( ( rule__Record_type__EndKeywordAssignment_2 ) )
            // InternalPascal.g:7416:2: ( rule__Record_type__EndKeywordAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getEndKeywordAssignment_2()); 
            }
            // InternalPascal.g:7417:2: ( rule__Record_type__EndKeywordAssignment_2 )
            // InternalPascal.g:7417:3: rule__Record_type__EndKeywordAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Record_type__EndKeywordAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getEndKeywordAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__Group__2__Impl"


    // $ANTLR start "rule__Field_list__Group__0"
    // InternalPascal.g:7426:1: rule__Field_list__Group__0 : rule__Field_list__Group__0__Impl rule__Field_list__Group__1 ;
    public final void rule__Field_list__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7430:1: ( rule__Field_list__Group__0__Impl rule__Field_list__Group__1 )
            // InternalPascal.g:7431:2: rule__Field_list__Group__0__Impl rule__Field_list__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Field_list__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Field_list__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group__0"


    // $ANTLR start "rule__Field_list__Group__0__Impl"
    // InternalPascal.g:7438:1: rule__Field_list__Group__0__Impl : ( ( rule__Field_list__Alternatives_0 ) ) ;
    public final void rule__Field_list__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7442:1: ( ( ( rule__Field_list__Alternatives_0 ) ) )
            // InternalPascal.g:7443:1: ( ( rule__Field_list__Alternatives_0 ) )
            {
            // InternalPascal.g:7443:1: ( ( rule__Field_list__Alternatives_0 ) )
            // InternalPascal.g:7444:2: ( rule__Field_list__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getAlternatives_0()); 
            }
            // InternalPascal.g:7445:2: ( rule__Field_list__Alternatives_0 )
            // InternalPascal.g:7445:3: rule__Field_list__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group__0__Impl"


    // $ANTLR start "rule__Field_list__Group__1"
    // InternalPascal.g:7453:1: rule__Field_list__Group__1 : rule__Field_list__Group__1__Impl ;
    public final void rule__Field_list__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7457:1: ( rule__Field_list__Group__1__Impl )
            // InternalPascal.g:7458:2: rule__Field_list__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group__1"


    // $ANTLR start "rule__Field_list__Group__1__Impl"
    // InternalPascal.g:7464:1: rule__Field_list__Group__1__Impl : ( ( ';' )? ) ;
    public final void rule__Field_list__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7468:1: ( ( ( ';' )? ) )
            // InternalPascal.g:7469:1: ( ( ';' )? )
            {
            // InternalPascal.g:7469:1: ( ( ';' )? )
            // InternalPascal.g:7470:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getSemicolonKeyword_1()); 
            }
            // InternalPascal.g:7471:2: ( ';' )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==26) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalPascal.g:7471:3: ';'
                    {
                    match(input,26,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group__1__Impl"


    // $ANTLR start "rule__Field_list__Group_0_0__0"
    // InternalPascal.g:7480:1: rule__Field_list__Group_0_0__0 : rule__Field_list__Group_0_0__0__Impl rule__Field_list__Group_0_0__1 ;
    public final void rule__Field_list__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7484:1: ( rule__Field_list__Group_0_0__0__Impl rule__Field_list__Group_0_0__1 )
            // InternalPascal.g:7485:2: rule__Field_list__Group_0_0__0__Impl rule__Field_list__Group_0_0__1
            {
            pushFollow(FOLLOW_13);
            rule__Field_list__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Field_list__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0__0"


    // $ANTLR start "rule__Field_list__Group_0_0__0__Impl"
    // InternalPascal.g:7492:1: rule__Field_list__Group_0_0__0__Impl : ( ( rule__Field_list__FixedAssignment_0_0_0 ) ) ;
    public final void rule__Field_list__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7496:1: ( ( ( rule__Field_list__FixedAssignment_0_0_0 ) ) )
            // InternalPascal.g:7497:1: ( ( rule__Field_list__FixedAssignment_0_0_0 ) )
            {
            // InternalPascal.g:7497:1: ( ( rule__Field_list__FixedAssignment_0_0_0 ) )
            // InternalPascal.g:7498:2: ( rule__Field_list__FixedAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getFixedAssignment_0_0_0()); 
            }
            // InternalPascal.g:7499:2: ( rule__Field_list__FixedAssignment_0_0_0 )
            // InternalPascal.g:7499:3: rule__Field_list__FixedAssignment_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__FixedAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getFixedAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0__0__Impl"


    // $ANTLR start "rule__Field_list__Group_0_0__1"
    // InternalPascal.g:7507:1: rule__Field_list__Group_0_0__1 : rule__Field_list__Group_0_0__1__Impl ;
    public final void rule__Field_list__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7511:1: ( rule__Field_list__Group_0_0__1__Impl )
            // InternalPascal.g:7512:2: rule__Field_list__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0__1"


    // $ANTLR start "rule__Field_list__Group_0_0__1__Impl"
    // InternalPascal.g:7518:1: rule__Field_list__Group_0_0__1__Impl : ( ( rule__Field_list__Group_0_0_1__0 )? ) ;
    public final void rule__Field_list__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7522:1: ( ( ( rule__Field_list__Group_0_0_1__0 )? ) )
            // InternalPascal.g:7523:1: ( ( rule__Field_list__Group_0_0_1__0 )? )
            {
            // InternalPascal.g:7523:1: ( ( rule__Field_list__Group_0_0_1__0 )? )
            // InternalPascal.g:7524:2: ( rule__Field_list__Group_0_0_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getGroup_0_0_1()); 
            }
            // InternalPascal.g:7525:2: ( rule__Field_list__Group_0_0_1__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==26) ) {
                int LA62_1 = input.LA(2);

                if ( (LA62_1==46) ) {
                    alt62=1;
                }
            }
            switch (alt62) {
                case 1 :
                    // InternalPascal.g:7525:3: rule__Field_list__Group_0_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Field_list__Group_0_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getGroup_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0__1__Impl"


    // $ANTLR start "rule__Field_list__Group_0_0_1__0"
    // InternalPascal.g:7534:1: rule__Field_list__Group_0_0_1__0 : rule__Field_list__Group_0_0_1__0__Impl rule__Field_list__Group_0_0_1__1 ;
    public final void rule__Field_list__Group_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7538:1: ( rule__Field_list__Group_0_0_1__0__Impl rule__Field_list__Group_0_0_1__1 )
            // InternalPascal.g:7539:2: rule__Field_list__Group_0_0_1__0__Impl rule__Field_list__Group_0_0_1__1
            {
            pushFollow(FOLLOW_49);
            rule__Field_list__Group_0_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Field_list__Group_0_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0_1__0"


    // $ANTLR start "rule__Field_list__Group_0_0_1__0__Impl"
    // InternalPascal.g:7546:1: rule__Field_list__Group_0_0_1__0__Impl : ( ';' ) ;
    public final void rule__Field_list__Group_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7550:1: ( ( ';' ) )
            // InternalPascal.g:7551:1: ( ';' )
            {
            // InternalPascal.g:7551:1: ( ';' )
            // InternalPascal.g:7552:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getSemicolonKeyword_0_0_1_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getSemicolonKeyword_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0_1__0__Impl"


    // $ANTLR start "rule__Field_list__Group_0_0_1__1"
    // InternalPascal.g:7561:1: rule__Field_list__Group_0_0_1__1 : rule__Field_list__Group_0_0_1__1__Impl ;
    public final void rule__Field_list__Group_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7565:1: ( rule__Field_list__Group_0_0_1__1__Impl )
            // InternalPascal.g:7566:2: rule__Field_list__Group_0_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__Group_0_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0_1__1"


    // $ANTLR start "rule__Field_list__Group_0_0_1__1__Impl"
    // InternalPascal.g:7572:1: rule__Field_list__Group_0_0_1__1__Impl : ( ( rule__Field_list__VariantsAssignment_0_0_1_1 ) ) ;
    public final void rule__Field_list__Group_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7576:1: ( ( ( rule__Field_list__VariantsAssignment_0_0_1_1 ) ) )
            // InternalPascal.g:7577:1: ( ( rule__Field_list__VariantsAssignment_0_0_1_1 ) )
            {
            // InternalPascal.g:7577:1: ( ( rule__Field_list__VariantsAssignment_0_0_1_1 ) )
            // InternalPascal.g:7578:2: ( rule__Field_list__VariantsAssignment_0_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getVariantsAssignment_0_0_1_1()); 
            }
            // InternalPascal.g:7579:2: ( rule__Field_list__VariantsAssignment_0_0_1_1 )
            // InternalPascal.g:7579:3: rule__Field_list__VariantsAssignment_0_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Field_list__VariantsAssignment_0_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getVariantsAssignment_0_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__Group_0_0_1__1__Impl"


    // $ANTLR start "rule__Fixed_part__Group__0"
    // InternalPascal.g:7588:1: rule__Fixed_part__Group__0 : rule__Fixed_part__Group__0__Impl rule__Fixed_part__Group__1 ;
    public final void rule__Fixed_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7592:1: ( rule__Fixed_part__Group__0__Impl rule__Fixed_part__Group__1 )
            // InternalPascal.g:7593:2: rule__Fixed_part__Group__0__Impl rule__Fixed_part__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Fixed_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Fixed_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group__0"


    // $ANTLR start "rule__Fixed_part__Group__0__Impl"
    // InternalPascal.g:7600:1: rule__Fixed_part__Group__0__Impl : ( ( rule__Fixed_part__SectionsAssignment_0 ) ) ;
    public final void rule__Fixed_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7604:1: ( ( ( rule__Fixed_part__SectionsAssignment_0 ) ) )
            // InternalPascal.g:7605:1: ( ( rule__Fixed_part__SectionsAssignment_0 ) )
            {
            // InternalPascal.g:7605:1: ( ( rule__Fixed_part__SectionsAssignment_0 ) )
            // InternalPascal.g:7606:2: ( rule__Fixed_part__SectionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getSectionsAssignment_0()); 
            }
            // InternalPascal.g:7607:2: ( rule__Fixed_part__SectionsAssignment_0 )
            // InternalPascal.g:7607:3: rule__Fixed_part__SectionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Fixed_part__SectionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getSectionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group__0__Impl"


    // $ANTLR start "rule__Fixed_part__Group__1"
    // InternalPascal.g:7615:1: rule__Fixed_part__Group__1 : rule__Fixed_part__Group__1__Impl ;
    public final void rule__Fixed_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7619:1: ( rule__Fixed_part__Group__1__Impl )
            // InternalPascal.g:7620:2: rule__Fixed_part__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Fixed_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group__1"


    // $ANTLR start "rule__Fixed_part__Group__1__Impl"
    // InternalPascal.g:7626:1: rule__Fixed_part__Group__1__Impl : ( ( rule__Fixed_part__Group_1__0 )* ) ;
    public final void rule__Fixed_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7630:1: ( ( ( rule__Fixed_part__Group_1__0 )* ) )
            // InternalPascal.g:7631:1: ( ( rule__Fixed_part__Group_1__0 )* )
            {
            // InternalPascal.g:7631:1: ( ( rule__Fixed_part__Group_1__0 )* )
            // InternalPascal.g:7632:2: ( rule__Fixed_part__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getGroup_1()); 
            }
            // InternalPascal.g:7633:2: ( rule__Fixed_part__Group_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==26) ) {
                    int LA63_2 = input.LA(2);

                    if ( (LA63_2==RULE_ID) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // InternalPascal.g:7633:3: rule__Fixed_part__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Fixed_part__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group__1__Impl"


    // $ANTLR start "rule__Fixed_part__Group_1__0"
    // InternalPascal.g:7642:1: rule__Fixed_part__Group_1__0 : rule__Fixed_part__Group_1__0__Impl rule__Fixed_part__Group_1__1 ;
    public final void rule__Fixed_part__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7646:1: ( rule__Fixed_part__Group_1__0__Impl rule__Fixed_part__Group_1__1 )
            // InternalPascal.g:7647:2: rule__Fixed_part__Group_1__0__Impl rule__Fixed_part__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Fixed_part__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Fixed_part__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group_1__0"


    // $ANTLR start "rule__Fixed_part__Group_1__0__Impl"
    // InternalPascal.g:7654:1: rule__Fixed_part__Group_1__0__Impl : ( ';' ) ;
    public final void rule__Fixed_part__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7658:1: ( ( ';' ) )
            // InternalPascal.g:7659:1: ( ';' )
            {
            // InternalPascal.g:7659:1: ( ';' )
            // InternalPascal.g:7660:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getSemicolonKeyword_1_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getSemicolonKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group_1__0__Impl"


    // $ANTLR start "rule__Fixed_part__Group_1__1"
    // InternalPascal.g:7669:1: rule__Fixed_part__Group_1__1 : rule__Fixed_part__Group_1__1__Impl ;
    public final void rule__Fixed_part__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7673:1: ( rule__Fixed_part__Group_1__1__Impl )
            // InternalPascal.g:7674:2: rule__Fixed_part__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Fixed_part__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group_1__1"


    // $ANTLR start "rule__Fixed_part__Group_1__1__Impl"
    // InternalPascal.g:7680:1: rule__Fixed_part__Group_1__1__Impl : ( ( rule__Fixed_part__SectionsAssignment_1_1 ) ) ;
    public final void rule__Fixed_part__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7684:1: ( ( ( rule__Fixed_part__SectionsAssignment_1_1 ) ) )
            // InternalPascal.g:7685:1: ( ( rule__Fixed_part__SectionsAssignment_1_1 ) )
            {
            // InternalPascal.g:7685:1: ( ( rule__Fixed_part__SectionsAssignment_1_1 ) )
            // InternalPascal.g:7686:2: ( rule__Fixed_part__SectionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getSectionsAssignment_1_1()); 
            }
            // InternalPascal.g:7687:2: ( rule__Fixed_part__SectionsAssignment_1_1 )
            // InternalPascal.g:7687:3: rule__Fixed_part__SectionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Fixed_part__SectionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getSectionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__Group_1__1__Impl"


    // $ANTLR start "rule__Variable_identifier_list__Group__0"
    // InternalPascal.g:7696:1: rule__Variable_identifier_list__Group__0 : rule__Variable_identifier_list__Group__0__Impl rule__Variable_identifier_list__Group__1 ;
    public final void rule__Variable_identifier_list__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7700:1: ( rule__Variable_identifier_list__Group__0__Impl rule__Variable_identifier_list__Group__1 )
            // InternalPascal.g:7701:2: rule__Variable_identifier_list__Group__0__Impl rule__Variable_identifier_list__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Variable_identifier_list__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group__0"


    // $ANTLR start "rule__Variable_identifier_list__Group__0__Impl"
    // InternalPascal.g:7708:1: rule__Variable_identifier_list__Group__0__Impl : ( ( rule__Variable_identifier_list__NamesAssignment_0 ) ) ;
    public final void rule__Variable_identifier_list__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7712:1: ( ( ( rule__Variable_identifier_list__NamesAssignment_0 ) ) )
            // InternalPascal.g:7713:1: ( ( rule__Variable_identifier_list__NamesAssignment_0 ) )
            {
            // InternalPascal.g:7713:1: ( ( rule__Variable_identifier_list__NamesAssignment_0 ) )
            // InternalPascal.g:7714:2: ( rule__Variable_identifier_list__NamesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_0()); 
            }
            // InternalPascal.g:7715:2: ( rule__Variable_identifier_list__NamesAssignment_0 )
            // InternalPascal.g:7715:3: rule__Variable_identifier_list__NamesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__NamesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group__0__Impl"


    // $ANTLR start "rule__Variable_identifier_list__Group__1"
    // InternalPascal.g:7723:1: rule__Variable_identifier_list__Group__1 : rule__Variable_identifier_list__Group__1__Impl ;
    public final void rule__Variable_identifier_list__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7727:1: ( rule__Variable_identifier_list__Group__1__Impl )
            // InternalPascal.g:7728:2: rule__Variable_identifier_list__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group__1"


    // $ANTLR start "rule__Variable_identifier_list__Group__1__Impl"
    // InternalPascal.g:7734:1: rule__Variable_identifier_list__Group__1__Impl : ( ( rule__Variable_identifier_list__Group_1__0 )* ) ;
    public final void rule__Variable_identifier_list__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7738:1: ( ( ( rule__Variable_identifier_list__Group_1__0 )* ) )
            // InternalPascal.g:7739:1: ( ( rule__Variable_identifier_list__Group_1__0 )* )
            {
            // InternalPascal.g:7739:1: ( ( rule__Variable_identifier_list__Group_1__0 )* )
            // InternalPascal.g:7740:2: ( rule__Variable_identifier_list__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getGroup_1()); 
            }
            // InternalPascal.g:7741:2: ( rule__Variable_identifier_list__Group_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==29) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalPascal.g:7741:3: rule__Variable_identifier_list__Group_1__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Variable_identifier_list__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group__1__Impl"


    // $ANTLR start "rule__Variable_identifier_list__Group_1__0"
    // InternalPascal.g:7750:1: rule__Variable_identifier_list__Group_1__0 : rule__Variable_identifier_list__Group_1__0__Impl rule__Variable_identifier_list__Group_1__1 ;
    public final void rule__Variable_identifier_list__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7754:1: ( rule__Variable_identifier_list__Group_1__0__Impl rule__Variable_identifier_list__Group_1__1 )
            // InternalPascal.g:7755:2: rule__Variable_identifier_list__Group_1__0__Impl rule__Variable_identifier_list__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Variable_identifier_list__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group_1__0"


    // $ANTLR start "rule__Variable_identifier_list__Group_1__0__Impl"
    // InternalPascal.g:7762:1: rule__Variable_identifier_list__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Variable_identifier_list__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7766:1: ( ( ',' ) )
            // InternalPascal.g:7767:1: ( ',' )
            {
            // InternalPascal.g:7767:1: ( ',' )
            // InternalPascal.g:7768:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getCommaKeyword_1_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group_1__0__Impl"


    // $ANTLR start "rule__Variable_identifier_list__Group_1__1"
    // InternalPascal.g:7777:1: rule__Variable_identifier_list__Group_1__1 : rule__Variable_identifier_list__Group_1__1__Impl ;
    public final void rule__Variable_identifier_list__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7781:1: ( rule__Variable_identifier_list__Group_1__1__Impl )
            // InternalPascal.g:7782:2: rule__Variable_identifier_list__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group_1__1"


    // $ANTLR start "rule__Variable_identifier_list__Group_1__1__Impl"
    // InternalPascal.g:7788:1: rule__Variable_identifier_list__Group_1__1__Impl : ( ( rule__Variable_identifier_list__NamesAssignment_1_1 ) ) ;
    public final void rule__Variable_identifier_list__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7792:1: ( ( ( rule__Variable_identifier_list__NamesAssignment_1_1 ) ) )
            // InternalPascal.g:7793:1: ( ( rule__Variable_identifier_list__NamesAssignment_1_1 ) )
            {
            // InternalPascal.g:7793:1: ( ( rule__Variable_identifier_list__NamesAssignment_1_1 ) )
            // InternalPascal.g:7794:2: ( rule__Variable_identifier_list__NamesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_1_1()); 
            }
            // InternalPascal.g:7795:2: ( rule__Variable_identifier_list__NamesAssignment_1_1 )
            // InternalPascal.g:7795:3: rule__Variable_identifier_list__NamesAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Variable_identifier_list__NamesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__Group_1__1__Impl"


    // $ANTLR start "rule__Variable_section__Group__0"
    // InternalPascal.g:7804:1: rule__Variable_section__Group__0 : rule__Variable_section__Group__0__Impl rule__Variable_section__Group__1 ;
    public final void rule__Variable_section__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7808:1: ( rule__Variable_section__Group__0__Impl rule__Variable_section__Group__1 )
            // InternalPascal.g:7809:2: rule__Variable_section__Group__0__Impl rule__Variable_section__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Variable_section__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_section__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__Group__0"


    // $ANTLR start "rule__Variable_section__Group__0__Impl"
    // InternalPascal.g:7816:1: rule__Variable_section__Group__0__Impl : ( ( rule__Variable_section__IdentifiersAssignment_0 ) ) ;
    public final void rule__Variable_section__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7820:1: ( ( ( rule__Variable_section__IdentifiersAssignment_0 ) ) )
            // InternalPascal.g:7821:1: ( ( rule__Variable_section__IdentifiersAssignment_0 ) )
            {
            // InternalPascal.g:7821:1: ( ( rule__Variable_section__IdentifiersAssignment_0 ) )
            // InternalPascal.g:7822:2: ( rule__Variable_section__IdentifiersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionAccess().getIdentifiersAssignment_0()); 
            }
            // InternalPascal.g:7823:2: ( rule__Variable_section__IdentifiersAssignment_0 )
            // InternalPascal.g:7823:3: rule__Variable_section__IdentifiersAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_section__IdentifiersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionAccess().getIdentifiersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__Group__0__Impl"


    // $ANTLR start "rule__Variable_section__Group__1"
    // InternalPascal.g:7831:1: rule__Variable_section__Group__1 : rule__Variable_section__Group__1__Impl rule__Variable_section__Group__2 ;
    public final void rule__Variable_section__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7835:1: ( rule__Variable_section__Group__1__Impl rule__Variable_section__Group__2 )
            // InternalPascal.g:7836:2: rule__Variable_section__Group__1__Impl rule__Variable_section__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__Variable_section__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_section__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__Group__1"


    // $ANTLR start "rule__Variable_section__Group__1__Impl"
    // InternalPascal.g:7843:1: rule__Variable_section__Group__1__Impl : ( ':' ) ;
    public final void rule__Variable_section__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7847:1: ( ( ':' ) )
            // InternalPascal.g:7848:1: ( ':' )
            {
            // InternalPascal.g:7848:1: ( ':' )
            // InternalPascal.g:7849:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionAccess().getColonKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__Group__1__Impl"


    // $ANTLR start "rule__Variable_section__Group__2"
    // InternalPascal.g:7858:1: rule__Variable_section__Group__2 : rule__Variable_section__Group__2__Impl ;
    public final void rule__Variable_section__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7862:1: ( rule__Variable_section__Group__2__Impl )
            // InternalPascal.g:7863:2: rule__Variable_section__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable_section__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__Group__2"


    // $ANTLR start "rule__Variable_section__Group__2__Impl"
    // InternalPascal.g:7869:1: rule__Variable_section__Group__2__Impl : ( ( rule__Variable_section__TypeAssignment_2 ) ) ;
    public final void rule__Variable_section__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7873:1: ( ( ( rule__Variable_section__TypeAssignment_2 ) ) )
            // InternalPascal.g:7874:1: ( ( rule__Variable_section__TypeAssignment_2 ) )
            {
            // InternalPascal.g:7874:1: ( ( rule__Variable_section__TypeAssignment_2 ) )
            // InternalPascal.g:7875:2: ( rule__Variable_section__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:7876:2: ( rule__Variable_section__TypeAssignment_2 )
            // InternalPascal.g:7876:3: rule__Variable_section__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Variable_section__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__Group__2__Impl"


    // $ANTLR start "rule__Record_section__Group__0"
    // InternalPascal.g:7885:1: rule__Record_section__Group__0 : rule__Record_section__Group__0__Impl rule__Record_section__Group__1 ;
    public final void rule__Record_section__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7889:1: ( rule__Record_section__Group__0__Impl rule__Record_section__Group__1 )
            // InternalPascal.g:7890:2: rule__Record_section__Group__0__Impl rule__Record_section__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Record_section__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Record_section__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__Group__0"


    // $ANTLR start "rule__Record_section__Group__0__Impl"
    // InternalPascal.g:7897:1: rule__Record_section__Group__0__Impl : ( ( rule__Record_section__IdentifiersAssignment_0 ) ) ;
    public final void rule__Record_section__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7901:1: ( ( ( rule__Record_section__IdentifiersAssignment_0 ) ) )
            // InternalPascal.g:7902:1: ( ( rule__Record_section__IdentifiersAssignment_0 ) )
            {
            // InternalPascal.g:7902:1: ( ( rule__Record_section__IdentifiersAssignment_0 ) )
            // InternalPascal.g:7903:2: ( rule__Record_section__IdentifiersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionAccess().getIdentifiersAssignment_0()); 
            }
            // InternalPascal.g:7904:2: ( rule__Record_section__IdentifiersAssignment_0 )
            // InternalPascal.g:7904:3: rule__Record_section__IdentifiersAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Record_section__IdentifiersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionAccess().getIdentifiersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__Group__0__Impl"


    // $ANTLR start "rule__Record_section__Group__1"
    // InternalPascal.g:7912:1: rule__Record_section__Group__1 : rule__Record_section__Group__1__Impl rule__Record_section__Group__2 ;
    public final void rule__Record_section__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7916:1: ( rule__Record_section__Group__1__Impl rule__Record_section__Group__2 )
            // InternalPascal.g:7917:2: rule__Record_section__Group__1__Impl rule__Record_section__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__Record_section__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Record_section__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__Group__1"


    // $ANTLR start "rule__Record_section__Group__1__Impl"
    // InternalPascal.g:7924:1: rule__Record_section__Group__1__Impl : ( ':' ) ;
    public final void rule__Record_section__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7928:1: ( ( ':' ) )
            // InternalPascal.g:7929:1: ( ':' )
            {
            // InternalPascal.g:7929:1: ( ':' )
            // InternalPascal.g:7930:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionAccess().getColonKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__Group__1__Impl"


    // $ANTLR start "rule__Record_section__Group__2"
    // InternalPascal.g:7939:1: rule__Record_section__Group__2 : rule__Record_section__Group__2__Impl ;
    public final void rule__Record_section__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7943:1: ( rule__Record_section__Group__2__Impl )
            // InternalPascal.g:7944:2: rule__Record_section__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Record_section__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__Group__2"


    // $ANTLR start "rule__Record_section__Group__2__Impl"
    // InternalPascal.g:7950:1: rule__Record_section__Group__2__Impl : ( ( rule__Record_section__TypeAssignment_2 ) ) ;
    public final void rule__Record_section__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7954:1: ( ( ( rule__Record_section__TypeAssignment_2 ) ) )
            // InternalPascal.g:7955:1: ( ( rule__Record_section__TypeAssignment_2 ) )
            {
            // InternalPascal.g:7955:1: ( ( rule__Record_section__TypeAssignment_2 ) )
            // InternalPascal.g:7956:2: ( rule__Record_section__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:7957:2: ( rule__Record_section__TypeAssignment_2 )
            // InternalPascal.g:7957:3: rule__Record_section__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Record_section__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__Group__2__Impl"


    // $ANTLR start "rule__Variant_part__Group__0"
    // InternalPascal.g:7966:1: rule__Variant_part__Group__0 : rule__Variant_part__Group__0__Impl rule__Variant_part__Group__1 ;
    public final void rule__Variant_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7970:1: ( rule__Variant_part__Group__0__Impl rule__Variant_part__Group__1 )
            // InternalPascal.g:7971:2: rule__Variant_part__Group__0__Impl rule__Variant_part__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Variant_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__0"


    // $ANTLR start "rule__Variant_part__Group__0__Impl"
    // InternalPascal.g:7978:1: rule__Variant_part__Group__0__Impl : ( 'case' ) ;
    public final void rule__Variant_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7982:1: ( ( 'case' ) )
            // InternalPascal.g:7983:1: ( 'case' )
            {
            // InternalPascal.g:7983:1: ( 'case' )
            // InternalPascal.g:7984:2: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getCaseKeyword_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getCaseKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__0__Impl"


    // $ANTLR start "rule__Variant_part__Group__1"
    // InternalPascal.g:7993:1: rule__Variant_part__Group__1 : rule__Variant_part__Group__1__Impl rule__Variant_part__Group__2 ;
    public final void rule__Variant_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:7997:1: ( rule__Variant_part__Group__1__Impl rule__Variant_part__Group__2 )
            // InternalPascal.g:7998:2: rule__Variant_part__Group__1__Impl rule__Variant_part__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Variant_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__1"


    // $ANTLR start "rule__Variant_part__Group__1__Impl"
    // InternalPascal.g:8005:1: rule__Variant_part__Group__1__Impl : ( ( rule__Variant_part__TagAssignment_1 )? ) ;
    public final void rule__Variant_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8009:1: ( ( ( rule__Variant_part__TagAssignment_1 )? ) )
            // InternalPascal.g:8010:1: ( ( rule__Variant_part__TagAssignment_1 )? )
            {
            // InternalPascal.g:8010:1: ( ( rule__Variant_part__TagAssignment_1 )? )
            // InternalPascal.g:8011:2: ( rule__Variant_part__TagAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getTagAssignment_1()); 
            }
            // InternalPascal.g:8012:2: ( rule__Variant_part__TagAssignment_1 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ID) ) {
                int LA65_1 = input.LA(2);

                if ( (LA65_1==32) ) {
                    alt65=1;
                }
            }
            switch (alt65) {
                case 1 :
                    // InternalPascal.g:8012:3: rule__Variant_part__TagAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Variant_part__TagAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getTagAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__1__Impl"


    // $ANTLR start "rule__Variant_part__Group__2"
    // InternalPascal.g:8020:1: rule__Variant_part__Group__2 : rule__Variant_part__Group__2__Impl rule__Variant_part__Group__3 ;
    public final void rule__Variant_part__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8024:1: ( rule__Variant_part__Group__2__Impl rule__Variant_part__Group__3 )
            // InternalPascal.g:8025:2: rule__Variant_part__Group__2__Impl rule__Variant_part__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__Variant_part__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__2"


    // $ANTLR start "rule__Variant_part__Group__2__Impl"
    // InternalPascal.g:8032:1: rule__Variant_part__Group__2__Impl : ( ( rule__Variant_part__NameAssignment_2 ) ) ;
    public final void rule__Variant_part__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8036:1: ( ( ( rule__Variant_part__NameAssignment_2 ) ) )
            // InternalPascal.g:8037:1: ( ( rule__Variant_part__NameAssignment_2 ) )
            {
            // InternalPascal.g:8037:1: ( ( rule__Variant_part__NameAssignment_2 ) )
            // InternalPascal.g:8038:2: ( rule__Variant_part__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getNameAssignment_2()); 
            }
            // InternalPascal.g:8039:2: ( rule__Variant_part__NameAssignment_2 )
            // InternalPascal.g:8039:3: rule__Variant_part__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Variant_part__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__2__Impl"


    // $ANTLR start "rule__Variant_part__Group__3"
    // InternalPascal.g:8047:1: rule__Variant_part__Group__3 : rule__Variant_part__Group__3__Impl rule__Variant_part__Group__4 ;
    public final void rule__Variant_part__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8051:1: ( rule__Variant_part__Group__3__Impl rule__Variant_part__Group__4 )
            // InternalPascal.g:8052:2: rule__Variant_part__Group__3__Impl rule__Variant_part__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__Variant_part__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__3"


    // $ANTLR start "rule__Variant_part__Group__3__Impl"
    // InternalPascal.g:8059:1: rule__Variant_part__Group__3__Impl : ( 'of' ) ;
    public final void rule__Variant_part__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8063:1: ( ( 'of' ) )
            // InternalPascal.g:8064:1: ( 'of' )
            {
            // InternalPascal.g:8064:1: ( 'of' )
            // InternalPascal.g:8065:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getOfKeyword_3()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getOfKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__3__Impl"


    // $ANTLR start "rule__Variant_part__Group__4"
    // InternalPascal.g:8074:1: rule__Variant_part__Group__4 : rule__Variant_part__Group__4__Impl rule__Variant_part__Group__5 ;
    public final void rule__Variant_part__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8078:1: ( rule__Variant_part__Group__4__Impl rule__Variant_part__Group__5 )
            // InternalPascal.g:8079:2: rule__Variant_part__Group__4__Impl rule__Variant_part__Group__5
            {
            pushFollow(FOLLOW_13);
            rule__Variant_part__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__4"


    // $ANTLR start "rule__Variant_part__Group__4__Impl"
    // InternalPascal.g:8086:1: rule__Variant_part__Group__4__Impl : ( ( rule__Variant_part__VariantsAssignment_4 ) ) ;
    public final void rule__Variant_part__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8090:1: ( ( ( rule__Variant_part__VariantsAssignment_4 ) ) )
            // InternalPascal.g:8091:1: ( ( rule__Variant_part__VariantsAssignment_4 ) )
            {
            // InternalPascal.g:8091:1: ( ( rule__Variant_part__VariantsAssignment_4 ) )
            // InternalPascal.g:8092:2: ( rule__Variant_part__VariantsAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getVariantsAssignment_4()); 
            }
            // InternalPascal.g:8093:2: ( rule__Variant_part__VariantsAssignment_4 )
            // InternalPascal.g:8093:3: rule__Variant_part__VariantsAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Variant_part__VariantsAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getVariantsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__4__Impl"


    // $ANTLR start "rule__Variant_part__Group__5"
    // InternalPascal.g:8101:1: rule__Variant_part__Group__5 : rule__Variant_part__Group__5__Impl ;
    public final void rule__Variant_part__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8105:1: ( rule__Variant_part__Group__5__Impl )
            // InternalPascal.g:8106:2: rule__Variant_part__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__5"


    // $ANTLR start "rule__Variant_part__Group__5__Impl"
    // InternalPascal.g:8112:1: rule__Variant_part__Group__5__Impl : ( ( rule__Variant_part__Group_5__0 )* ) ;
    public final void rule__Variant_part__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8116:1: ( ( ( rule__Variant_part__Group_5__0 )* ) )
            // InternalPascal.g:8117:1: ( ( rule__Variant_part__Group_5__0 )* )
            {
            // InternalPascal.g:8117:1: ( ( rule__Variant_part__Group_5__0 )* )
            // InternalPascal.g:8118:2: ( rule__Variant_part__Group_5__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getGroup_5()); 
            }
            // InternalPascal.g:8119:2: ( rule__Variant_part__Group_5__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==26) ) {
                    int LA66_2 = input.LA(2);

                    if ( ((LA66_2>=RULE_ID && LA66_2<=RULE_INTEGER_NUMBER)||LA66_2==RULE_ADDITION_OPERATOR||(LA66_2>=RULE_STRING && LA66_2<=RULE_SIGNED_REAL_NUMBER)||(LA66_2>=67 && LA66_2<=69)) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // InternalPascal.g:8119:3: rule__Variant_part__Group_5__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Variant_part__Group_5__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group__5__Impl"


    // $ANTLR start "rule__Variant_part__Group_5__0"
    // InternalPascal.g:8128:1: rule__Variant_part__Group_5__0 : rule__Variant_part__Group_5__0__Impl rule__Variant_part__Group_5__1 ;
    public final void rule__Variant_part__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8132:1: ( rule__Variant_part__Group_5__0__Impl rule__Variant_part__Group_5__1 )
            // InternalPascal.g:8133:2: rule__Variant_part__Group_5__0__Impl rule__Variant_part__Group_5__1
            {
            pushFollow(FOLLOW_34);
            rule__Variant_part__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group_5__0"


    // $ANTLR start "rule__Variant_part__Group_5__0__Impl"
    // InternalPascal.g:8140:1: rule__Variant_part__Group_5__0__Impl : ( ';' ) ;
    public final void rule__Variant_part__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8144:1: ( ( ';' ) )
            // InternalPascal.g:8145:1: ( ';' )
            {
            // InternalPascal.g:8145:1: ( ';' )
            // InternalPascal.g:8146:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getSemicolonKeyword_5_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getSemicolonKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group_5__0__Impl"


    // $ANTLR start "rule__Variant_part__Group_5__1"
    // InternalPascal.g:8155:1: rule__Variant_part__Group_5__1 : rule__Variant_part__Group_5__1__Impl ;
    public final void rule__Variant_part__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8159:1: ( rule__Variant_part__Group_5__1__Impl )
            // InternalPascal.g:8160:2: rule__Variant_part__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variant_part__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group_5__1"


    // $ANTLR start "rule__Variant_part__Group_5__1__Impl"
    // InternalPascal.g:8166:1: rule__Variant_part__Group_5__1__Impl : ( ( rule__Variant_part__VariantsAssignment_5_1 ) ) ;
    public final void rule__Variant_part__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8170:1: ( ( ( rule__Variant_part__VariantsAssignment_5_1 ) ) )
            // InternalPascal.g:8171:1: ( ( rule__Variant_part__VariantsAssignment_5_1 ) )
            {
            // InternalPascal.g:8171:1: ( ( rule__Variant_part__VariantsAssignment_5_1 ) )
            // InternalPascal.g:8172:2: ( rule__Variant_part__VariantsAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getVariantsAssignment_5_1()); 
            }
            // InternalPascal.g:8173:2: ( rule__Variant_part__VariantsAssignment_5_1 )
            // InternalPascal.g:8173:3: rule__Variant_part__VariantsAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Variant_part__VariantsAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getVariantsAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__Group_5__1__Impl"


    // $ANTLR start "rule__Tag_field__Group__0"
    // InternalPascal.g:8182:1: rule__Tag_field__Group__0 : rule__Tag_field__Group__0__Impl rule__Tag_field__Group__1 ;
    public final void rule__Tag_field__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8186:1: ( rule__Tag_field__Group__0__Impl rule__Tag_field__Group__1 )
            // InternalPascal.g:8187:2: rule__Tag_field__Group__0__Impl rule__Tag_field__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Tag_field__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tag_field__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tag_field__Group__0"


    // $ANTLR start "rule__Tag_field__Group__0__Impl"
    // InternalPascal.g:8194:1: rule__Tag_field__Group__0__Impl : ( ( rule__Tag_field__NameAssignment_0 ) ) ;
    public final void rule__Tag_field__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8198:1: ( ( ( rule__Tag_field__NameAssignment_0 ) ) )
            // InternalPascal.g:8199:1: ( ( rule__Tag_field__NameAssignment_0 ) )
            {
            // InternalPascal.g:8199:1: ( ( rule__Tag_field__NameAssignment_0 ) )
            // InternalPascal.g:8200:2: ( rule__Tag_field__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTag_fieldAccess().getNameAssignment_0()); 
            }
            // InternalPascal.g:8201:2: ( rule__Tag_field__NameAssignment_0 )
            // InternalPascal.g:8201:3: rule__Tag_field__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Tag_field__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTag_fieldAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tag_field__Group__0__Impl"


    // $ANTLR start "rule__Tag_field__Group__1"
    // InternalPascal.g:8209:1: rule__Tag_field__Group__1 : rule__Tag_field__Group__1__Impl ;
    public final void rule__Tag_field__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8213:1: ( rule__Tag_field__Group__1__Impl )
            // InternalPascal.g:8214:2: rule__Tag_field__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tag_field__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tag_field__Group__1"


    // $ANTLR start "rule__Tag_field__Group__1__Impl"
    // InternalPascal.g:8220:1: rule__Tag_field__Group__1__Impl : ( ':' ) ;
    public final void rule__Tag_field__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8224:1: ( ( ':' ) )
            // InternalPascal.g:8225:1: ( ':' )
            {
            // InternalPascal.g:8225:1: ( ':' )
            // InternalPascal.g:8226:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTag_fieldAccess().getColonKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTag_fieldAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tag_field__Group__1__Impl"


    // $ANTLR start "rule__Variant__Group__0"
    // InternalPascal.g:8236:1: rule__Variant__Group__0 : rule__Variant__Group__0__Impl rule__Variant__Group__1 ;
    public final void rule__Variant__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8240:1: ( rule__Variant__Group__0__Impl rule__Variant__Group__1 )
            // InternalPascal.g:8241:2: rule__Variant__Group__0__Impl rule__Variant__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Variant__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__0"


    // $ANTLR start "rule__Variant__Group__0__Impl"
    // InternalPascal.g:8248:1: rule__Variant__Group__0__Impl : ( ( rule__Variant__LabelsAssignment_0 ) ) ;
    public final void rule__Variant__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8252:1: ( ( ( rule__Variant__LabelsAssignment_0 ) ) )
            // InternalPascal.g:8253:1: ( ( rule__Variant__LabelsAssignment_0 ) )
            {
            // InternalPascal.g:8253:1: ( ( rule__Variant__LabelsAssignment_0 ) )
            // InternalPascal.g:8254:2: ( rule__Variant__LabelsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getLabelsAssignment_0()); 
            }
            // InternalPascal.g:8255:2: ( rule__Variant__LabelsAssignment_0 )
            // InternalPascal.g:8255:3: rule__Variant__LabelsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Variant__LabelsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getLabelsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__0__Impl"


    // $ANTLR start "rule__Variant__Group__1"
    // InternalPascal.g:8263:1: rule__Variant__Group__1 : rule__Variant__Group__1__Impl rule__Variant__Group__2 ;
    public final void rule__Variant__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8267:1: ( rule__Variant__Group__1__Impl rule__Variant__Group__2 )
            // InternalPascal.g:8268:2: rule__Variant__Group__1__Impl rule__Variant__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__Variant__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__1"


    // $ANTLR start "rule__Variant__Group__1__Impl"
    // InternalPascal.g:8275:1: rule__Variant__Group__1__Impl : ( ':' ) ;
    public final void rule__Variant__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8279:1: ( ( ':' ) )
            // InternalPascal.g:8280:1: ( ':' )
            {
            // InternalPascal.g:8280:1: ( ':' )
            // InternalPascal.g:8281:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getColonKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__1__Impl"


    // $ANTLR start "rule__Variant__Group__2"
    // InternalPascal.g:8290:1: rule__Variant__Group__2 : rule__Variant__Group__2__Impl rule__Variant__Group__3 ;
    public final void rule__Variant__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8294:1: ( rule__Variant__Group__2__Impl rule__Variant__Group__3 )
            // InternalPascal.g:8295:2: rule__Variant__Group__2__Impl rule__Variant__Group__3
            {
            pushFollow(FOLLOW_50);
            rule__Variant__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__2"


    // $ANTLR start "rule__Variant__Group__2__Impl"
    // InternalPascal.g:8302:1: rule__Variant__Group__2__Impl : ( '(' ) ;
    public final void rule__Variant__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8306:1: ( ( '(' ) )
            // InternalPascal.g:8307:1: ( '(' )
            {
            // InternalPascal.g:8307:1: ( '(' )
            // InternalPascal.g:8308:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__2__Impl"


    // $ANTLR start "rule__Variant__Group__3"
    // InternalPascal.g:8317:1: rule__Variant__Group__3 : rule__Variant__Group__3__Impl rule__Variant__Group__4 ;
    public final void rule__Variant__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8321:1: ( rule__Variant__Group__3__Impl rule__Variant__Group__4 )
            // InternalPascal.g:8322:2: rule__Variant__Group__3__Impl rule__Variant__Group__4
            {
            pushFollow(FOLLOW_50);
            rule__Variant__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variant__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__3"


    // $ANTLR start "rule__Variant__Group__3__Impl"
    // InternalPascal.g:8329:1: rule__Variant__Group__3__Impl : ( ( rule__Variant__FieldsAssignment_3 )? ) ;
    public final void rule__Variant__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8333:1: ( ( ( rule__Variant__FieldsAssignment_3 )? ) )
            // InternalPascal.g:8334:1: ( ( rule__Variant__FieldsAssignment_3 )? )
            {
            // InternalPascal.g:8334:1: ( ( rule__Variant__FieldsAssignment_3 )? )
            // InternalPascal.g:8335:2: ( rule__Variant__FieldsAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getFieldsAssignment_3()); 
            }
            // InternalPascal.g:8336:2: ( rule__Variant__FieldsAssignment_3 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_ID||LA67_0==46) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalPascal.g:8336:3: rule__Variant__FieldsAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Variant__FieldsAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getFieldsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__3__Impl"


    // $ANTLR start "rule__Variant__Group__4"
    // InternalPascal.g:8344:1: rule__Variant__Group__4 : rule__Variant__Group__4__Impl ;
    public final void rule__Variant__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8348:1: ( rule__Variant__Group__4__Impl )
            // InternalPascal.g:8349:2: rule__Variant__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variant__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__4"


    // $ANTLR start "rule__Variant__Group__4__Impl"
    // InternalPascal.g:8355:1: rule__Variant__Group__4__Impl : ( ')' ) ;
    public final void rule__Variant__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8359:1: ( ( ')' ) )
            // InternalPascal.g:8360:1: ( ')' )
            {
            // InternalPascal.g:8360:1: ( ')' )
            // InternalPascal.g:8361:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__Group__4__Impl"


    // $ANTLR start "rule__Set_type__Group__0"
    // InternalPascal.g:8371:1: rule__Set_type__Group__0 : rule__Set_type__Group__0__Impl rule__Set_type__Group__1 ;
    public final void rule__Set_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8375:1: ( rule__Set_type__Group__0__Impl rule__Set_type__Group__1 )
            // InternalPascal.g:8376:2: rule__Set_type__Group__0__Impl rule__Set_type__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__Set_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Set_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__Group__0"


    // $ANTLR start "rule__Set_type__Group__0__Impl"
    // InternalPascal.g:8383:1: rule__Set_type__Group__0__Impl : ( 'set' ) ;
    public final void rule__Set_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8387:1: ( ( 'set' ) )
            // InternalPascal.g:8388:1: ( 'set' )
            {
            // InternalPascal.g:8388:1: ( 'set' )
            // InternalPascal.g:8389:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSet_typeAccess().getSetKeyword_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSet_typeAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__Group__0__Impl"


    // $ANTLR start "rule__Set_type__Group__1"
    // InternalPascal.g:8398:1: rule__Set_type__Group__1 : rule__Set_type__Group__1__Impl rule__Set_type__Group__2 ;
    public final void rule__Set_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8402:1: ( rule__Set_type__Group__1__Impl rule__Set_type__Group__2 )
            // InternalPascal.g:8403:2: rule__Set_type__Group__1__Impl rule__Set_type__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__Set_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Set_type__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__Group__1"


    // $ANTLR start "rule__Set_type__Group__1__Impl"
    // InternalPascal.g:8410:1: rule__Set_type__Group__1__Impl : ( 'of' ) ;
    public final void rule__Set_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8414:1: ( ( 'of' ) )
            // InternalPascal.g:8415:1: ( 'of' )
            {
            // InternalPascal.g:8415:1: ( 'of' )
            // InternalPascal.g:8416:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSet_typeAccess().getOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSet_typeAccess().getOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__Group__1__Impl"


    // $ANTLR start "rule__Set_type__Group__2"
    // InternalPascal.g:8425:1: rule__Set_type__Group__2 : rule__Set_type__Group__2__Impl ;
    public final void rule__Set_type__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8429:1: ( rule__Set_type__Group__2__Impl )
            // InternalPascal.g:8430:2: rule__Set_type__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Set_type__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__Group__2"


    // $ANTLR start "rule__Set_type__Group__2__Impl"
    // InternalPascal.g:8436:1: rule__Set_type__Group__2__Impl : ( ( rule__Set_type__TypeAssignment_2 ) ) ;
    public final void rule__Set_type__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8440:1: ( ( ( rule__Set_type__TypeAssignment_2 ) ) )
            // InternalPascal.g:8441:1: ( ( rule__Set_type__TypeAssignment_2 ) )
            {
            // InternalPascal.g:8441:1: ( ( rule__Set_type__TypeAssignment_2 ) )
            // InternalPascal.g:8442:2: ( rule__Set_type__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSet_typeAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:8443:2: ( rule__Set_type__TypeAssignment_2 )
            // InternalPascal.g:8443:3: rule__Set_type__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Set_type__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSet_typeAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__Group__2__Impl"


    // $ANTLR start "rule__File_type__Group__0"
    // InternalPascal.g:8452:1: rule__File_type__Group__0 : rule__File_type__Group__0__Impl rule__File_type__Group__1 ;
    public final void rule__File_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8456:1: ( rule__File_type__Group__0__Impl rule__File_type__Group__1 )
            // InternalPascal.g:8457:2: rule__File_type__Group__0__Impl rule__File_type__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__File_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__File_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__Group__0"


    // $ANTLR start "rule__File_type__Group__0__Impl"
    // InternalPascal.g:8464:1: rule__File_type__Group__0__Impl : ( 'file' ) ;
    public final void rule__File_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8468:1: ( ( 'file' ) )
            // InternalPascal.g:8469:1: ( 'file' )
            {
            // InternalPascal.g:8469:1: ( 'file' )
            // InternalPascal.g:8470:2: 'file'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFile_typeAccess().getFileKeyword_0()); 
            }
            match(input,57,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFile_typeAccess().getFileKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__Group__0__Impl"


    // $ANTLR start "rule__File_type__Group__1"
    // InternalPascal.g:8479:1: rule__File_type__Group__1 : rule__File_type__Group__1__Impl rule__File_type__Group__2 ;
    public final void rule__File_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8483:1: ( rule__File_type__Group__1__Impl rule__File_type__Group__2 )
            // InternalPascal.g:8484:2: rule__File_type__Group__1__Impl rule__File_type__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__File_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__File_type__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__Group__1"


    // $ANTLR start "rule__File_type__Group__1__Impl"
    // InternalPascal.g:8491:1: rule__File_type__Group__1__Impl : ( 'of' ) ;
    public final void rule__File_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8495:1: ( ( 'of' ) )
            // InternalPascal.g:8496:1: ( 'of' )
            {
            // InternalPascal.g:8496:1: ( 'of' )
            // InternalPascal.g:8497:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFile_typeAccess().getOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFile_typeAccess().getOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__Group__1__Impl"


    // $ANTLR start "rule__File_type__Group__2"
    // InternalPascal.g:8506:1: rule__File_type__Group__2 : rule__File_type__Group__2__Impl ;
    public final void rule__File_type__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8510:1: ( rule__File_type__Group__2__Impl )
            // InternalPascal.g:8511:2: rule__File_type__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__File_type__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__Group__2"


    // $ANTLR start "rule__File_type__Group__2__Impl"
    // InternalPascal.g:8517:1: rule__File_type__Group__2__Impl : ( ( rule__File_type__TypeAssignment_2 ) ) ;
    public final void rule__File_type__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8521:1: ( ( ( rule__File_type__TypeAssignment_2 ) ) )
            // InternalPascal.g:8522:1: ( ( rule__File_type__TypeAssignment_2 ) )
            {
            // InternalPascal.g:8522:1: ( ( rule__File_type__TypeAssignment_2 ) )
            // InternalPascal.g:8523:2: ( rule__File_type__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFile_typeAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:8524:2: ( rule__File_type__TypeAssignment_2 )
            // InternalPascal.g:8524:3: rule__File_type__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__File_type__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFile_typeAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__Group__2__Impl"


    // $ANTLR start "rule__Pointer_type__Group__0"
    // InternalPascal.g:8533:1: rule__Pointer_type__Group__0 : rule__Pointer_type__Group__0__Impl rule__Pointer_type__Group__1 ;
    public final void rule__Pointer_type__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8537:1: ( rule__Pointer_type__Group__0__Impl rule__Pointer_type__Group__1 )
            // InternalPascal.g:8538:2: rule__Pointer_type__Group__0__Impl rule__Pointer_type__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__Pointer_type__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pointer_type__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pointer_type__Group__0"


    // $ANTLR start "rule__Pointer_type__Group__0__Impl"
    // InternalPascal.g:8545:1: rule__Pointer_type__Group__0__Impl : ( '^' ) ;
    public final void rule__Pointer_type__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8549:1: ( ( '^' ) )
            // InternalPascal.g:8550:1: ( '^' )
            {
            // InternalPascal.g:8550:1: ( '^' )
            // InternalPascal.g:8551:2: '^'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointer_typeAccess().getCircumflexAccentKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointer_typeAccess().getCircumflexAccentKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pointer_type__Group__0__Impl"


    // $ANTLR start "rule__Pointer_type__Group__1"
    // InternalPascal.g:8560:1: rule__Pointer_type__Group__1 : rule__Pointer_type__Group__1__Impl ;
    public final void rule__Pointer_type__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8564:1: ( rule__Pointer_type__Group__1__Impl )
            // InternalPascal.g:8565:2: rule__Pointer_type__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pointer_type__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pointer_type__Group__1"


    // $ANTLR start "rule__Pointer_type__Group__1__Impl"
    // InternalPascal.g:8571:1: rule__Pointer_type__Group__1__Impl : ( ( rule__Pointer_type__TypeAssignment_1 ) ) ;
    public final void rule__Pointer_type__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8575:1: ( ( ( rule__Pointer_type__TypeAssignment_1 ) ) )
            // InternalPascal.g:8576:1: ( ( rule__Pointer_type__TypeAssignment_1 ) )
            {
            // InternalPascal.g:8576:1: ( ( rule__Pointer_type__TypeAssignment_1 ) )
            // InternalPascal.g:8577:2: ( rule__Pointer_type__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointer_typeAccess().getTypeAssignment_1()); 
            }
            // InternalPascal.g:8578:2: ( rule__Pointer_type__TypeAssignment_1 )
            // InternalPascal.g:8578:3: rule__Pointer_type__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Pointer_type__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointer_typeAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pointer_type__Group__1__Impl"


    // $ANTLR start "rule__Variable_declaration_part__Group__0"
    // InternalPascal.g:8587:1: rule__Variable_declaration_part__Group__0 : rule__Variable_declaration_part__Group__0__Impl rule__Variable_declaration_part__Group__1 ;
    public final void rule__Variable_declaration_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8591:1: ( rule__Variable_declaration_part__Group__0__Impl rule__Variable_declaration_part__Group__1 )
            // InternalPascal.g:8592:2: rule__Variable_declaration_part__Group__0__Impl rule__Variable_declaration_part__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Variable_declaration_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__0"


    // $ANTLR start "rule__Variable_declaration_part__Group__0__Impl"
    // InternalPascal.g:8599:1: rule__Variable_declaration_part__Group__0__Impl : ( 'var' ) ;
    public final void rule__Variable_declaration_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8603:1: ( ( 'var' ) )
            // InternalPascal.g:8604:1: ( 'var' )
            {
            // InternalPascal.g:8604:1: ( 'var' )
            // InternalPascal.g:8605:2: 'var'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__0__Impl"


    // $ANTLR start "rule__Variable_declaration_part__Group__1"
    // InternalPascal.g:8614:1: rule__Variable_declaration_part__Group__1 : rule__Variable_declaration_part__Group__1__Impl rule__Variable_declaration_part__Group__2 ;
    public final void rule__Variable_declaration_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8618:1: ( rule__Variable_declaration_part__Group__1__Impl rule__Variable_declaration_part__Group__2 )
            // InternalPascal.g:8619:2: rule__Variable_declaration_part__Group__1__Impl rule__Variable_declaration_part__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__Variable_declaration_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__1"


    // $ANTLR start "rule__Variable_declaration_part__Group__1__Impl"
    // InternalPascal.g:8626:1: rule__Variable_declaration_part__Group__1__Impl : ( ( rule__Variable_declaration_part__SectionsAssignment_1 ) ) ;
    public final void rule__Variable_declaration_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8630:1: ( ( ( rule__Variable_declaration_part__SectionsAssignment_1 ) ) )
            // InternalPascal.g:8631:1: ( ( rule__Variable_declaration_part__SectionsAssignment_1 ) )
            {
            // InternalPascal.g:8631:1: ( ( rule__Variable_declaration_part__SectionsAssignment_1 ) )
            // InternalPascal.g:8632:2: ( rule__Variable_declaration_part__SectionsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_1()); 
            }
            // InternalPascal.g:8633:2: ( rule__Variable_declaration_part__SectionsAssignment_1 )
            // InternalPascal.g:8633:3: rule__Variable_declaration_part__SectionsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__SectionsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__1__Impl"


    // $ANTLR start "rule__Variable_declaration_part__Group__2"
    // InternalPascal.g:8641:1: rule__Variable_declaration_part__Group__2 : rule__Variable_declaration_part__Group__2__Impl rule__Variable_declaration_part__Group__3 ;
    public final void rule__Variable_declaration_part__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8645:1: ( rule__Variable_declaration_part__Group__2__Impl rule__Variable_declaration_part__Group__3 )
            // InternalPascal.g:8646:2: rule__Variable_declaration_part__Group__2__Impl rule__Variable_declaration_part__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Variable_declaration_part__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__2"


    // $ANTLR start "rule__Variable_declaration_part__Group__2__Impl"
    // InternalPascal.g:8653:1: rule__Variable_declaration_part__Group__2__Impl : ( ';' ) ;
    public final void rule__Variable_declaration_part__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8657:1: ( ( ';' ) )
            // InternalPascal.g:8658:1: ( ';' )
            {
            // InternalPascal.g:8658:1: ( ';' )
            // InternalPascal.g:8659:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__2__Impl"


    // $ANTLR start "rule__Variable_declaration_part__Group__3"
    // InternalPascal.g:8668:1: rule__Variable_declaration_part__Group__3 : rule__Variable_declaration_part__Group__3__Impl ;
    public final void rule__Variable_declaration_part__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8672:1: ( rule__Variable_declaration_part__Group__3__Impl )
            // InternalPascal.g:8673:2: rule__Variable_declaration_part__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__3"


    // $ANTLR start "rule__Variable_declaration_part__Group__3__Impl"
    // InternalPascal.g:8679:1: rule__Variable_declaration_part__Group__3__Impl : ( ( rule__Variable_declaration_part__Group_3__0 )* ) ;
    public final void rule__Variable_declaration_part__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8683:1: ( ( ( rule__Variable_declaration_part__Group_3__0 )* ) )
            // InternalPascal.g:8684:1: ( ( rule__Variable_declaration_part__Group_3__0 )* )
            {
            // InternalPascal.g:8684:1: ( ( rule__Variable_declaration_part__Group_3__0 )* )
            // InternalPascal.g:8685:2: ( rule__Variable_declaration_part__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); 
            }
            // InternalPascal.g:8686:2: ( rule__Variable_declaration_part__Group_3__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==RULE_ID) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalPascal.g:8686:3: rule__Variable_declaration_part__Group_3__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Variable_declaration_part__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group__3__Impl"


    // $ANTLR start "rule__Variable_declaration_part__Group_3__0"
    // InternalPascal.g:8695:1: rule__Variable_declaration_part__Group_3__0 : rule__Variable_declaration_part__Group_3__0__Impl rule__Variable_declaration_part__Group_3__1 ;
    public final void rule__Variable_declaration_part__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8699:1: ( rule__Variable_declaration_part__Group_3__0__Impl rule__Variable_declaration_part__Group_3__1 )
            // InternalPascal.g:8700:2: rule__Variable_declaration_part__Group_3__0__Impl rule__Variable_declaration_part__Group_3__1
            {
            pushFollow(FOLLOW_13);
            rule__Variable_declaration_part__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group_3__0"


    // $ANTLR start "rule__Variable_declaration_part__Group_3__0__Impl"
    // InternalPascal.g:8707:1: rule__Variable_declaration_part__Group_3__0__Impl : ( ( rule__Variable_declaration_part__SectionsAssignment_3_0 ) ) ;
    public final void rule__Variable_declaration_part__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8711:1: ( ( ( rule__Variable_declaration_part__SectionsAssignment_3_0 ) ) )
            // InternalPascal.g:8712:1: ( ( rule__Variable_declaration_part__SectionsAssignment_3_0 ) )
            {
            // InternalPascal.g:8712:1: ( ( rule__Variable_declaration_part__SectionsAssignment_3_0 ) )
            // InternalPascal.g:8713:2: ( rule__Variable_declaration_part__SectionsAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_3_0()); 
            }
            // InternalPascal.g:8714:2: ( rule__Variable_declaration_part__SectionsAssignment_3_0 )
            // InternalPascal.g:8714:3: rule__Variable_declaration_part__SectionsAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__SectionsAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group_3__0__Impl"


    // $ANTLR start "rule__Variable_declaration_part__Group_3__1"
    // InternalPascal.g:8722:1: rule__Variable_declaration_part__Group_3__1 : rule__Variable_declaration_part__Group_3__1__Impl ;
    public final void rule__Variable_declaration_part__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8726:1: ( rule__Variable_declaration_part__Group_3__1__Impl )
            // InternalPascal.g:8727:2: rule__Variable_declaration_part__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable_declaration_part__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group_3__1"


    // $ANTLR start "rule__Variable_declaration_part__Group_3__1__Impl"
    // InternalPascal.g:8733:1: rule__Variable_declaration_part__Group_3__1__Impl : ( ';' ) ;
    public final void rule__Variable_declaration_part__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8737:1: ( ( ';' ) )
            // InternalPascal.g:8738:1: ( ';' )
            {
            // InternalPascal.g:8738:1: ( ';' )
            // InternalPascal.g:8739:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__Group_3__1__Impl"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__Group__0"
    // InternalPascal.g:8749:1: rule__Procedure_and_function_declaration_part__Group__0 : rule__Procedure_and_function_declaration_part__Group__0__Impl rule__Procedure_and_function_declaration_part__Group__1 ;
    public final void rule__Procedure_and_function_declaration_part__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8753:1: ( rule__Procedure_and_function_declaration_part__Group__0__Impl rule__Procedure_and_function_declaration_part__Group__1 )
            // InternalPascal.g:8754:2: rule__Procedure_and_function_declaration_part__Group__0__Impl rule__Procedure_and_function_declaration_part__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Procedure_and_function_declaration_part__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Procedure_and_function_declaration_part__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__Group__0"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__Group__0__Impl"
    // InternalPascal.g:8761:1: rule__Procedure_and_function_declaration_part__Group__0__Impl : ( ( rule__Procedure_and_function_declaration_part__Alternatives_0 ) ) ;
    public final void rule__Procedure_and_function_declaration_part__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8765:1: ( ( ( rule__Procedure_and_function_declaration_part__Alternatives_0 ) ) )
            // InternalPascal.g:8766:1: ( ( rule__Procedure_and_function_declaration_part__Alternatives_0 ) )
            {
            // InternalPascal.g:8766:1: ( ( rule__Procedure_and_function_declaration_part__Alternatives_0 ) )
            // InternalPascal.g:8767:2: ( rule__Procedure_and_function_declaration_part__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partAccess().getAlternatives_0()); 
            }
            // InternalPascal.g:8768:2: ( rule__Procedure_and_function_declaration_part__Alternatives_0 )
            // InternalPascal.g:8768:3: rule__Procedure_and_function_declaration_part__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_and_function_declaration_part__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__Group__0__Impl"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__Group__1"
    // InternalPascal.g:8776:1: rule__Procedure_and_function_declaration_part__Group__1 : rule__Procedure_and_function_declaration_part__Group__1__Impl ;
    public final void rule__Procedure_and_function_declaration_part__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8780:1: ( rule__Procedure_and_function_declaration_part__Group__1__Impl )
            // InternalPascal.g:8781:2: rule__Procedure_and_function_declaration_part__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_and_function_declaration_part__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__Group__1"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__Group__1__Impl"
    // InternalPascal.g:8787:1: rule__Procedure_and_function_declaration_part__Group__1__Impl : ( ';' ) ;
    public final void rule__Procedure_and_function_declaration_part__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8791:1: ( ( ';' ) )
            // InternalPascal.g:8792:1: ( ';' )
            {
            // InternalPascal.g:8792:1: ( ';' )
            // InternalPascal.g:8793:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__Group__1__Impl"


    // $ANTLR start "rule__Procedure_declaration__Group__0"
    // InternalPascal.g:8803:1: rule__Procedure_declaration__Group__0 : rule__Procedure_declaration__Group__0__Impl rule__Procedure_declaration__Group__1 ;
    public final void rule__Procedure_declaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8807:1: ( rule__Procedure_declaration__Group__0__Impl rule__Procedure_declaration__Group__1 )
            // InternalPascal.g:8808:2: rule__Procedure_declaration__Group__0__Impl rule__Procedure_declaration__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Procedure_declaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Procedure_declaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Group__0"


    // $ANTLR start "rule__Procedure_declaration__Group__0__Impl"
    // InternalPascal.g:8815:1: rule__Procedure_declaration__Group__0__Impl : ( ( rule__Procedure_declaration__HeadingAssignment_0 ) ) ;
    public final void rule__Procedure_declaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8819:1: ( ( ( rule__Procedure_declaration__HeadingAssignment_0 ) ) )
            // InternalPascal.g:8820:1: ( ( rule__Procedure_declaration__HeadingAssignment_0 ) )
            {
            // InternalPascal.g:8820:1: ( ( rule__Procedure_declaration__HeadingAssignment_0 ) )
            // InternalPascal.g:8821:2: ( rule__Procedure_declaration__HeadingAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getHeadingAssignment_0()); 
            }
            // InternalPascal.g:8822:2: ( rule__Procedure_declaration__HeadingAssignment_0 )
            // InternalPascal.g:8822:3: rule__Procedure_declaration__HeadingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_declaration__HeadingAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getHeadingAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Group__0__Impl"


    // $ANTLR start "rule__Procedure_declaration__Group__1"
    // InternalPascal.g:8830:1: rule__Procedure_declaration__Group__1 : rule__Procedure_declaration__Group__1__Impl rule__Procedure_declaration__Group__2 ;
    public final void rule__Procedure_declaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8834:1: ( rule__Procedure_declaration__Group__1__Impl rule__Procedure_declaration__Group__2 )
            // InternalPascal.g:8835:2: rule__Procedure_declaration__Group__1__Impl rule__Procedure_declaration__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__Procedure_declaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Procedure_declaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Group__1"


    // $ANTLR start "rule__Procedure_declaration__Group__1__Impl"
    // InternalPascal.g:8842:1: rule__Procedure_declaration__Group__1__Impl : ( ';' ) ;
    public final void rule__Procedure_declaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8846:1: ( ( ';' ) )
            // InternalPascal.g:8847:1: ( ';' )
            {
            // InternalPascal.g:8847:1: ( ';' )
            // InternalPascal.g:8848:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_1()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Group__1__Impl"


    // $ANTLR start "rule__Procedure_declaration__Group__2"
    // InternalPascal.g:8857:1: rule__Procedure_declaration__Group__2 : rule__Procedure_declaration__Group__2__Impl ;
    public final void rule__Procedure_declaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8861:1: ( rule__Procedure_declaration__Group__2__Impl )
            // InternalPascal.g:8862:2: rule__Procedure_declaration__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_declaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Group__2"


    // $ANTLR start "rule__Procedure_declaration__Group__2__Impl"
    // InternalPascal.g:8868:1: rule__Procedure_declaration__Group__2__Impl : ( ( rule__Procedure_declaration__Alternatives_2 ) ) ;
    public final void rule__Procedure_declaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8872:1: ( ( ( rule__Procedure_declaration__Alternatives_2 ) ) )
            // InternalPascal.g:8873:1: ( ( rule__Procedure_declaration__Alternatives_2 ) )
            {
            // InternalPascal.g:8873:1: ( ( rule__Procedure_declaration__Alternatives_2 ) )
            // InternalPascal.g:8874:2: ( rule__Procedure_declaration__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getAlternatives_2()); 
            }
            // InternalPascal.g:8875:2: ( rule__Procedure_declaration__Alternatives_2 )
            // InternalPascal.g:8875:3: rule__Procedure_declaration__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_declaration__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__Group__2__Impl"


    // $ANTLR start "rule__Procedure_heading__Group__0"
    // InternalPascal.g:8884:1: rule__Procedure_heading__Group__0 : rule__Procedure_heading__Group__0__Impl rule__Procedure_heading__Group__1 ;
    public final void rule__Procedure_heading__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8888:1: ( rule__Procedure_heading__Group__0__Impl rule__Procedure_heading__Group__1 )
            // InternalPascal.g:8889:2: rule__Procedure_heading__Group__0__Impl rule__Procedure_heading__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Procedure_heading__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Procedure_heading__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__Group__0"


    // $ANTLR start "rule__Procedure_heading__Group__0__Impl"
    // InternalPascal.g:8896:1: rule__Procedure_heading__Group__0__Impl : ( 'procedure' ) ;
    public final void rule__Procedure_heading__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8900:1: ( ( 'procedure' ) )
            // InternalPascal.g:8901:1: ( 'procedure' )
            {
            // InternalPascal.g:8901:1: ( 'procedure' )
            // InternalPascal.g:8902:2: 'procedure'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingAccess().getProcedureKeyword_0()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingAccess().getProcedureKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__Group__0__Impl"


    // $ANTLR start "rule__Procedure_heading__Group__1"
    // InternalPascal.g:8911:1: rule__Procedure_heading__Group__1 : rule__Procedure_heading__Group__1__Impl rule__Procedure_heading__Group__2 ;
    public final void rule__Procedure_heading__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8915:1: ( rule__Procedure_heading__Group__1__Impl rule__Procedure_heading__Group__2 )
            // InternalPascal.g:8916:2: rule__Procedure_heading__Group__1__Impl rule__Procedure_heading__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__Procedure_heading__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Procedure_heading__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__Group__1"


    // $ANTLR start "rule__Procedure_heading__Group__1__Impl"
    // InternalPascal.g:8923:1: rule__Procedure_heading__Group__1__Impl : ( ( rule__Procedure_heading__NameAssignment_1 ) ) ;
    public final void rule__Procedure_heading__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8927:1: ( ( ( rule__Procedure_heading__NameAssignment_1 ) ) )
            // InternalPascal.g:8928:1: ( ( rule__Procedure_heading__NameAssignment_1 ) )
            {
            // InternalPascal.g:8928:1: ( ( rule__Procedure_heading__NameAssignment_1 ) )
            // InternalPascal.g:8929:2: ( rule__Procedure_heading__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingAccess().getNameAssignment_1()); 
            }
            // InternalPascal.g:8930:2: ( rule__Procedure_heading__NameAssignment_1 )
            // InternalPascal.g:8930:3: rule__Procedure_heading__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_heading__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__Group__1__Impl"


    // $ANTLR start "rule__Procedure_heading__Group__2"
    // InternalPascal.g:8938:1: rule__Procedure_heading__Group__2 : rule__Procedure_heading__Group__2__Impl ;
    public final void rule__Procedure_heading__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8942:1: ( rule__Procedure_heading__Group__2__Impl )
            // InternalPascal.g:8943:2: rule__Procedure_heading__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Procedure_heading__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__Group__2"


    // $ANTLR start "rule__Procedure_heading__Group__2__Impl"
    // InternalPascal.g:8949:1: rule__Procedure_heading__Group__2__Impl : ( ( rule__Procedure_heading__ParametersAssignment_2 )? ) ;
    public final void rule__Procedure_heading__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8953:1: ( ( ( rule__Procedure_heading__ParametersAssignment_2 )? ) )
            // InternalPascal.g:8954:1: ( ( rule__Procedure_heading__ParametersAssignment_2 )? )
            {
            // InternalPascal.g:8954:1: ( ( rule__Procedure_heading__ParametersAssignment_2 )? )
            // InternalPascal.g:8955:2: ( rule__Procedure_heading__ParametersAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingAccess().getParametersAssignment_2()); 
            }
            // InternalPascal.g:8956:2: ( rule__Procedure_heading__ParametersAssignment_2 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==27) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalPascal.g:8956:3: rule__Procedure_heading__ParametersAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Procedure_heading__ParametersAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingAccess().getParametersAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__Group__2__Impl"


    // $ANTLR start "rule__Formal_parameter_list__Group__0"
    // InternalPascal.g:8965:1: rule__Formal_parameter_list__Group__0 : rule__Formal_parameter_list__Group__0__Impl rule__Formal_parameter_list__Group__1 ;
    public final void rule__Formal_parameter_list__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8969:1: ( rule__Formal_parameter_list__Group__0__Impl rule__Formal_parameter_list__Group__1 )
            // InternalPascal.g:8970:2: rule__Formal_parameter_list__Group__0__Impl rule__Formal_parameter_list__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__Formal_parameter_list__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__0"


    // $ANTLR start "rule__Formal_parameter_list__Group__0__Impl"
    // InternalPascal.g:8977:1: rule__Formal_parameter_list__Group__0__Impl : ( '(' ) ;
    public final void rule__Formal_parameter_list__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8981:1: ( ( '(' ) )
            // InternalPascal.g:8982:1: ( '(' )
            {
            // InternalPascal.g:8982:1: ( '(' )
            // InternalPascal.g:8983:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__0__Impl"


    // $ANTLR start "rule__Formal_parameter_list__Group__1"
    // InternalPascal.g:8992:1: rule__Formal_parameter_list__Group__1 : rule__Formal_parameter_list__Group__1__Impl rule__Formal_parameter_list__Group__2 ;
    public final void rule__Formal_parameter_list__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:8996:1: ( rule__Formal_parameter_list__Group__1__Impl rule__Formal_parameter_list__Group__2 )
            // InternalPascal.g:8997:2: rule__Formal_parameter_list__Group__1__Impl rule__Formal_parameter_list__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__Formal_parameter_list__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__1"


    // $ANTLR start "rule__Formal_parameter_list__Group__1__Impl"
    // InternalPascal.g:9004:1: rule__Formal_parameter_list__Group__1__Impl : ( ( rule__Formal_parameter_list__ParametersAssignment_1 ) ) ;
    public final void rule__Formal_parameter_list__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9008:1: ( ( ( rule__Formal_parameter_list__ParametersAssignment_1 ) ) )
            // InternalPascal.g:9009:1: ( ( rule__Formal_parameter_list__ParametersAssignment_1 ) )
            {
            // InternalPascal.g:9009:1: ( ( rule__Formal_parameter_list__ParametersAssignment_1 ) )
            // InternalPascal.g:9010:2: ( rule__Formal_parameter_list__ParametersAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1()); 
            }
            // InternalPascal.g:9011:2: ( rule__Formal_parameter_list__ParametersAssignment_1 )
            // InternalPascal.g:9011:3: rule__Formal_parameter_list__ParametersAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__ParametersAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__1__Impl"


    // $ANTLR start "rule__Formal_parameter_list__Group__2"
    // InternalPascal.g:9019:1: rule__Formal_parameter_list__Group__2 : rule__Formal_parameter_list__Group__2__Impl rule__Formal_parameter_list__Group__3 ;
    public final void rule__Formal_parameter_list__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9023:1: ( rule__Formal_parameter_list__Group__2__Impl rule__Formal_parameter_list__Group__3 )
            // InternalPascal.g:9024:2: rule__Formal_parameter_list__Group__2__Impl rule__Formal_parameter_list__Group__3
            {
            pushFollow(FOLLOW_53);
            rule__Formal_parameter_list__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__2"


    // $ANTLR start "rule__Formal_parameter_list__Group__2__Impl"
    // InternalPascal.g:9031:1: rule__Formal_parameter_list__Group__2__Impl : ( ( rule__Formal_parameter_list__Group_2__0 )* ) ;
    public final void rule__Formal_parameter_list__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9035:1: ( ( ( rule__Formal_parameter_list__Group_2__0 )* ) )
            // InternalPascal.g:9036:1: ( ( rule__Formal_parameter_list__Group_2__0 )* )
            {
            // InternalPascal.g:9036:1: ( ( rule__Formal_parameter_list__Group_2__0 )* )
            // InternalPascal.g:9037:2: ( rule__Formal_parameter_list__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); 
            }
            // InternalPascal.g:9038:2: ( rule__Formal_parameter_list__Group_2__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==26) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalPascal.g:9038:3: rule__Formal_parameter_list__Group_2__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Formal_parameter_list__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__2__Impl"


    // $ANTLR start "rule__Formal_parameter_list__Group__3"
    // InternalPascal.g:9046:1: rule__Formal_parameter_list__Group__3 : rule__Formal_parameter_list__Group__3__Impl ;
    public final void rule__Formal_parameter_list__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9050:1: ( rule__Formal_parameter_list__Group__3__Impl )
            // InternalPascal.g:9051:2: rule__Formal_parameter_list__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__3"


    // $ANTLR start "rule__Formal_parameter_list__Group__3__Impl"
    // InternalPascal.g:9057:1: rule__Formal_parameter_list__Group__3__Impl : ( ')' ) ;
    public final void rule__Formal_parameter_list__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9061:1: ( ( ')' ) )
            // InternalPascal.g:9062:1: ( ')' )
            {
            // InternalPascal.g:9062:1: ( ')' )
            // InternalPascal.g:9063:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group__3__Impl"


    // $ANTLR start "rule__Formal_parameter_list__Group_2__0"
    // InternalPascal.g:9073:1: rule__Formal_parameter_list__Group_2__0 : rule__Formal_parameter_list__Group_2__0__Impl rule__Formal_parameter_list__Group_2__1 ;
    public final void rule__Formal_parameter_list__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9077:1: ( rule__Formal_parameter_list__Group_2__0__Impl rule__Formal_parameter_list__Group_2__1 )
            // InternalPascal.g:9078:2: rule__Formal_parameter_list__Group_2__0__Impl rule__Formal_parameter_list__Group_2__1
            {
            pushFollow(FOLLOW_52);
            rule__Formal_parameter_list__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group_2__0"


    // $ANTLR start "rule__Formal_parameter_list__Group_2__0__Impl"
    // InternalPascal.g:9085:1: rule__Formal_parameter_list__Group_2__0__Impl : ( ';' ) ;
    public final void rule__Formal_parameter_list__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9089:1: ( ( ';' ) )
            // InternalPascal.g:9090:1: ( ';' )
            {
            // InternalPascal.g:9090:1: ( ';' )
            // InternalPascal.g:9091:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group_2__0__Impl"


    // $ANTLR start "rule__Formal_parameter_list__Group_2__1"
    // InternalPascal.g:9100:1: rule__Formal_parameter_list__Group_2__1 : rule__Formal_parameter_list__Group_2__1__Impl ;
    public final void rule__Formal_parameter_list__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9104:1: ( rule__Formal_parameter_list__Group_2__1__Impl )
            // InternalPascal.g:9105:2: rule__Formal_parameter_list__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group_2__1"


    // $ANTLR start "rule__Formal_parameter_list__Group_2__1__Impl"
    // InternalPascal.g:9111:1: rule__Formal_parameter_list__Group_2__1__Impl : ( ( rule__Formal_parameter_list__ParametersAssignment_2_1 ) ) ;
    public final void rule__Formal_parameter_list__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9115:1: ( ( ( rule__Formal_parameter_list__ParametersAssignment_2_1 ) ) )
            // InternalPascal.g:9116:1: ( ( rule__Formal_parameter_list__ParametersAssignment_2_1 ) )
            {
            // InternalPascal.g:9116:1: ( ( rule__Formal_parameter_list__ParametersAssignment_2_1 ) )
            // InternalPascal.g:9117:2: ( rule__Formal_parameter_list__ParametersAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1()); 
            }
            // InternalPascal.g:9118:2: ( rule__Formal_parameter_list__ParametersAssignment_2_1 )
            // InternalPascal.g:9118:3: rule__Formal_parameter_list__ParametersAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Formal_parameter_list__ParametersAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__Group_2__1__Impl"


    // $ANTLR start "rule__Value_parameter_section__Group__0"
    // InternalPascal.g:9127:1: rule__Value_parameter_section__Group__0 : rule__Value_parameter_section__Group__0__Impl rule__Value_parameter_section__Group__1 ;
    public final void rule__Value_parameter_section__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9131:1: ( rule__Value_parameter_section__Group__0__Impl rule__Value_parameter_section__Group__1 )
            // InternalPascal.g:9132:2: rule__Value_parameter_section__Group__0__Impl rule__Value_parameter_section__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Value_parameter_section__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Value_parameter_section__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__Group__0"


    // $ANTLR start "rule__Value_parameter_section__Group__0__Impl"
    // InternalPascal.g:9139:1: rule__Value_parameter_section__Group__0__Impl : ( ( rule__Value_parameter_section__IdentifiersAssignment_0 ) ) ;
    public final void rule__Value_parameter_section__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9143:1: ( ( ( rule__Value_parameter_section__IdentifiersAssignment_0 ) ) )
            // InternalPascal.g:9144:1: ( ( rule__Value_parameter_section__IdentifiersAssignment_0 ) )
            {
            // InternalPascal.g:9144:1: ( ( rule__Value_parameter_section__IdentifiersAssignment_0 ) )
            // InternalPascal.g:9145:2: ( rule__Value_parameter_section__IdentifiersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersAssignment_0()); 
            }
            // InternalPascal.g:9146:2: ( rule__Value_parameter_section__IdentifiersAssignment_0 )
            // InternalPascal.g:9146:3: rule__Value_parameter_section__IdentifiersAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Value_parameter_section__IdentifiersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__Group__0__Impl"


    // $ANTLR start "rule__Value_parameter_section__Group__1"
    // InternalPascal.g:9154:1: rule__Value_parameter_section__Group__1 : rule__Value_parameter_section__Group__1__Impl rule__Value_parameter_section__Group__2 ;
    public final void rule__Value_parameter_section__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9158:1: ( rule__Value_parameter_section__Group__1__Impl rule__Value_parameter_section__Group__2 )
            // InternalPascal.g:9159:2: rule__Value_parameter_section__Group__1__Impl rule__Value_parameter_section__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__Value_parameter_section__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Value_parameter_section__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__Group__1"


    // $ANTLR start "rule__Value_parameter_section__Group__1__Impl"
    // InternalPascal.g:9166:1: rule__Value_parameter_section__Group__1__Impl : ( ':' ) ;
    public final void rule__Value_parameter_section__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9170:1: ( ( ':' ) )
            // InternalPascal.g:9171:1: ( ':' )
            {
            // InternalPascal.g:9171:1: ( ':' )
            // InternalPascal.g:9172:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionAccess().getColonKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__Group__1__Impl"


    // $ANTLR start "rule__Value_parameter_section__Group__2"
    // InternalPascal.g:9181:1: rule__Value_parameter_section__Group__2 : rule__Value_parameter_section__Group__2__Impl ;
    public final void rule__Value_parameter_section__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9185:1: ( rule__Value_parameter_section__Group__2__Impl )
            // InternalPascal.g:9186:2: rule__Value_parameter_section__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Value_parameter_section__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__Group__2"


    // $ANTLR start "rule__Value_parameter_section__Group__2__Impl"
    // InternalPascal.g:9192:1: rule__Value_parameter_section__Group__2__Impl : ( ( rule__Value_parameter_section__TypeAssignment_2 ) ) ;
    public final void rule__Value_parameter_section__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9196:1: ( ( ( rule__Value_parameter_section__TypeAssignment_2 ) ) )
            // InternalPascal.g:9197:1: ( ( rule__Value_parameter_section__TypeAssignment_2 ) )
            {
            // InternalPascal.g:9197:1: ( ( rule__Value_parameter_section__TypeAssignment_2 ) )
            // InternalPascal.g:9198:2: ( rule__Value_parameter_section__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionAccess().getTypeAssignment_2()); 
            }
            // InternalPascal.g:9199:2: ( rule__Value_parameter_section__TypeAssignment_2 )
            // InternalPascal.g:9199:3: rule__Value_parameter_section__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Value_parameter_section__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__Group__2__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__0"
    // InternalPascal.g:9208:1: rule__Packed_conformant_array_schema__Group__0 : rule__Packed_conformant_array_schema__Group__0__Impl rule__Packed_conformant_array_schema__Group__1 ;
    public final void rule__Packed_conformant_array_schema__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9212:1: ( rule__Packed_conformant_array_schema__Group__0__Impl rule__Packed_conformant_array_schema__Group__1 )
            // InternalPascal.g:9213:2: rule__Packed_conformant_array_schema__Group__0__Impl rule__Packed_conformant_array_schema__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Packed_conformant_array_schema__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__0"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__0__Impl"
    // InternalPascal.g:9220:1: rule__Packed_conformant_array_schema__Group__0__Impl : ( 'packed' ) ;
    public final void rule__Packed_conformant_array_schema__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9224:1: ( ( 'packed' ) )
            // InternalPascal.g:9225:1: ( 'packed' )
            {
            // InternalPascal.g:9225:1: ( 'packed' )
            // InternalPascal.g:9226:2: 'packed'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getPackedKeyword_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getPackedKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__0__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__1"
    // InternalPascal.g:9235:1: rule__Packed_conformant_array_schema__Group__1 : rule__Packed_conformant_array_schema__Group__1__Impl rule__Packed_conformant_array_schema__Group__2 ;
    public final void rule__Packed_conformant_array_schema__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9239:1: ( rule__Packed_conformant_array_schema__Group__1__Impl rule__Packed_conformant_array_schema__Group__2 )
            // InternalPascal.g:9240:2: rule__Packed_conformant_array_schema__Group__1__Impl rule__Packed_conformant_array_schema__Group__2
            {
            pushFollow(FOLLOW_45);
            rule__Packed_conformant_array_schema__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__1"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__1__Impl"
    // InternalPascal.g:9247:1: rule__Packed_conformant_array_schema__Group__1__Impl : ( 'array' ) ;
    public final void rule__Packed_conformant_array_schema__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9251:1: ( ( 'array' ) )
            // InternalPascal.g:9252:1: ( 'array' )
            {
            // InternalPascal.g:9252:1: ( 'array' )
            // InternalPascal.g:9253:2: 'array'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getArrayKeyword_1()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getArrayKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__1__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__2"
    // InternalPascal.g:9262:1: rule__Packed_conformant_array_schema__Group__2 : rule__Packed_conformant_array_schema__Group__2__Impl rule__Packed_conformant_array_schema__Group__3 ;
    public final void rule__Packed_conformant_array_schema__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9266:1: ( rule__Packed_conformant_array_schema__Group__2__Impl rule__Packed_conformant_array_schema__Group__3 )
            // InternalPascal.g:9267:2: rule__Packed_conformant_array_schema__Group__2__Impl rule__Packed_conformant_array_schema__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Packed_conformant_array_schema__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__2"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__2__Impl"
    // InternalPascal.g:9274:1: rule__Packed_conformant_array_schema__Group__2__Impl : ( '[' ) ;
    public final void rule__Packed_conformant_array_schema__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9278:1: ( ( '[' ) )
            // InternalPascal.g:9279:1: ( '[' )
            {
            // InternalPascal.g:9279:1: ( '[' )
            // InternalPascal.g:9280:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_2()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__2__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__3"
    // InternalPascal.g:9289:1: rule__Packed_conformant_array_schema__Group__3 : rule__Packed_conformant_array_schema__Group__3__Impl rule__Packed_conformant_array_schema__Group__4 ;
    public final void rule__Packed_conformant_array_schema__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9293:1: ( rule__Packed_conformant_array_schema__Group__3__Impl rule__Packed_conformant_array_schema__Group__4 )
            // InternalPascal.g:9294:2: rule__Packed_conformant_array_schema__Group__3__Impl rule__Packed_conformant_array_schema__Group__4
            {
            pushFollow(FOLLOW_19);
            rule__Packed_conformant_array_schema__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__3"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__3__Impl"
    // InternalPascal.g:9301:1: rule__Packed_conformant_array_schema__Group__3__Impl : ( ( rule__Packed_conformant_array_schema__BoundAssignment_3 ) ) ;
    public final void rule__Packed_conformant_array_schema__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9305:1: ( ( ( rule__Packed_conformant_array_schema__BoundAssignment_3 ) ) )
            // InternalPascal.g:9306:1: ( ( rule__Packed_conformant_array_schema__BoundAssignment_3 ) )
            {
            // InternalPascal.g:9306:1: ( ( rule__Packed_conformant_array_schema__BoundAssignment_3 ) )
            // InternalPascal.g:9307:2: ( rule__Packed_conformant_array_schema__BoundAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getBoundAssignment_3()); 
            }
            // InternalPascal.g:9308:2: ( rule__Packed_conformant_array_schema__BoundAssignment_3 )
            // InternalPascal.g:9308:3: rule__Packed_conformant_array_schema__BoundAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__BoundAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getBoundAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__3__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__4"
    // InternalPascal.g:9316:1: rule__Packed_conformant_array_schema__Group__4 : rule__Packed_conformant_array_schema__Group__4__Impl rule__Packed_conformant_array_schema__Group__5 ;
    public final void rule__Packed_conformant_array_schema__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9320:1: ( rule__Packed_conformant_array_schema__Group__4__Impl rule__Packed_conformant_array_schema__Group__5 )
            // InternalPascal.g:9321:2: rule__Packed_conformant_array_schema__Group__4__Impl rule__Packed_conformant_array_schema__Group__5
            {
            pushFollow(FOLLOW_33);
            rule__Packed_conformant_array_schema__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__4"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__4__Impl"
    // InternalPascal.g:9328:1: rule__Packed_conformant_array_schema__Group__4__Impl : ( ']' ) ;
    public final void rule__Packed_conformant_array_schema__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9332:1: ( ( ']' ) )
            // InternalPascal.g:9333:1: ( ']' )
            {
            // InternalPascal.g:9333:1: ( ']' )
            // InternalPascal.g:9334:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__4__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__5"
    // InternalPascal.g:9343:1: rule__Packed_conformant_array_schema__Group__5 : rule__Packed_conformant_array_schema__Group__5__Impl rule__Packed_conformant_array_schema__Group__6 ;
    public final void rule__Packed_conformant_array_schema__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9347:1: ( rule__Packed_conformant_array_schema__Group__5__Impl rule__Packed_conformant_array_schema__Group__6 )
            // InternalPascal.g:9348:2: rule__Packed_conformant_array_schema__Group__5__Impl rule__Packed_conformant_array_schema__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__Packed_conformant_array_schema__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__5"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__5__Impl"
    // InternalPascal.g:9355:1: rule__Packed_conformant_array_schema__Group__5__Impl : ( 'of' ) ;
    public final void rule__Packed_conformant_array_schema__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9359:1: ( ( 'of' ) )
            // InternalPascal.g:9360:1: ( 'of' )
            {
            // InternalPascal.g:9360:1: ( 'of' )
            // InternalPascal.g:9361:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getOfKeyword_5()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getOfKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__5__Impl"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__6"
    // InternalPascal.g:9370:1: rule__Packed_conformant_array_schema__Group__6 : rule__Packed_conformant_array_schema__Group__6__Impl ;
    public final void rule__Packed_conformant_array_schema__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9374:1: ( rule__Packed_conformant_array_schema__Group__6__Impl )
            // InternalPascal.g:9375:2: rule__Packed_conformant_array_schema__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__6"


    // $ANTLR start "rule__Packed_conformant_array_schema__Group__6__Impl"
    // InternalPascal.g:9381:1: rule__Packed_conformant_array_schema__Group__6__Impl : ( ( rule__Packed_conformant_array_schema__NameAssignment_6 ) ) ;
    public final void rule__Packed_conformant_array_schema__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9385:1: ( ( ( rule__Packed_conformant_array_schema__NameAssignment_6 ) ) )
            // InternalPascal.g:9386:1: ( ( rule__Packed_conformant_array_schema__NameAssignment_6 ) )
            {
            // InternalPascal.g:9386:1: ( ( rule__Packed_conformant_array_schema__NameAssignment_6 ) )
            // InternalPascal.g:9387:2: ( rule__Packed_conformant_array_schema__NameAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getNameAssignment_6()); 
            }
            // InternalPascal.g:9388:2: ( rule__Packed_conformant_array_schema__NameAssignment_6 )
            // InternalPascal.g:9388:3: rule__Packed_conformant_array_schema__NameAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__Packed_conformant_array_schema__NameAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getNameAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__Group__6__Impl"


    // $ANTLR start "rule__Bound_specification__Group__0"
    // InternalPascal.g:9397:1: rule__Bound_specification__Group__0 : rule__Bound_specification__Group__0__Impl rule__Bound_specification__Group__1 ;
    public final void rule__Bound_specification__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9401:1: ( rule__Bound_specification__Group__0__Impl rule__Bound_specification__Group__1 )
            // InternalPascal.g:9402:2: rule__Bound_specification__Group__0__Impl rule__Bound_specification__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__Bound_specification__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bound_specification__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__0"


    // $ANTLR start "rule__Bound_specification__Group__0__Impl"
    // InternalPascal.g:9409:1: rule__Bound_specification__Group__0__Impl : ( ( rule__Bound_specification__InitialAssignment_0 ) ) ;
    public final void rule__Bound_specification__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9413:1: ( ( ( rule__Bound_specification__InitialAssignment_0 ) ) )
            // InternalPascal.g:9414:1: ( ( rule__Bound_specification__InitialAssignment_0 ) )
            {
            // InternalPascal.g:9414:1: ( ( rule__Bound_specification__InitialAssignment_0 ) )
            // InternalPascal.g:9415:2: ( rule__Bound_specification__InitialAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getInitialAssignment_0()); 
            }
            // InternalPascal.g:9416:2: ( rule__Bound_specification__InitialAssignment_0 )
            // InternalPascal.g:9416:3: rule__Bound_specification__InitialAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Bound_specification__InitialAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getInitialAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__0__Impl"


    // $ANTLR start "rule__Bound_specification__Group__1"
    // InternalPascal.g:9424:1: rule__Bound_specification__Group__1 : rule__Bound_specification__Group__1__Impl rule__Bound_specification__Group__2 ;
    public final void rule__Bound_specification__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9428:1: ( rule__Bound_specification__Group__1__Impl rule__Bound_specification__Group__2 )
            // InternalPascal.g:9429:2: rule__Bound_specification__Group__1__Impl rule__Bound_specification__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Bound_specification__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bound_specification__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__1"


    // $ANTLR start "rule__Bound_specification__Group__1__Impl"
    // InternalPascal.g:9436:1: rule__Bound_specification__Group__1__Impl : ( '..' ) ;
    public final void rule__Bound_specification__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9440:1: ( ( '..' ) )
            // InternalPascal.g:9441:1: ( '..' )
            {
            // InternalPascal.g:9441:1: ( '..' )
            // InternalPascal.g:9442:2: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getFullStopFullStopKeyword_1()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getFullStopFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__1__Impl"


    // $ANTLR start "rule__Bound_specification__Group__2"
    // InternalPascal.g:9451:1: rule__Bound_specification__Group__2 : rule__Bound_specification__Group__2__Impl rule__Bound_specification__Group__3 ;
    public final void rule__Bound_specification__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9455:1: ( rule__Bound_specification__Group__2__Impl rule__Bound_specification__Group__3 )
            // InternalPascal.g:9456:2: rule__Bound_specification__Group__2__Impl rule__Bound_specification__Group__3
            {
            pushFollow(FOLLOW_15);
            rule__Bound_specification__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bound_specification__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__2"


    // $ANTLR start "rule__Bound_specification__Group__2__Impl"
    // InternalPascal.g:9463:1: rule__Bound_specification__Group__2__Impl : ( ( rule__Bound_specification__FinalAssignment_2 ) ) ;
    public final void rule__Bound_specification__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9467:1: ( ( ( rule__Bound_specification__FinalAssignment_2 ) ) )
            // InternalPascal.g:9468:1: ( ( rule__Bound_specification__FinalAssignment_2 ) )
            {
            // InternalPascal.g:9468:1: ( ( rule__Bound_specification__FinalAssignment_2 ) )
            // InternalPascal.g:9469:2: ( rule__Bound_specification__FinalAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getFinalAssignment_2()); 
            }
            // InternalPascal.g:9470:2: ( rule__Bound_specification__FinalAssignment_2 )
            // InternalPascal.g:9470:3: rule__Bound_specification__FinalAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Bound_specification__FinalAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getFinalAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__2__Impl"


    // $ANTLR start "rule__Bound_specification__Group__3"
    // InternalPascal.g:9478:1: rule__Bound_specification__Group__3 : rule__Bound_specification__Group__3__Impl rule__Bound_specification__Group__4 ;
    public final void rule__Bound_specification__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9482:1: ( rule__Bound_specification__Group__3__Impl rule__Bound_specification__Group__4 )
            // InternalPascal.g:9483:2: rule__Bound_specification__Group__3__Impl rule__Bound_specification__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__Bound_specification__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Bound_specification__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__3"


    // $ANTLR start "rule__Bound_specification__Group__3__Impl"
    // InternalPascal.g:9490:1: rule__Bound_specification__Group__3__Impl : ( ':' ) ;
    public final void rule__Bound_specification__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9494:1: ( ( ':' ) )
            // InternalPascal.g:9495:1: ( ':' )
            {
            // InternalPascal.g:9495:1: ( ':' )
            // InternalPascal.g:9496:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getColonKeyword_3()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__3__Impl"


    // $ANTLR start "rule__Bound_specification__Group__4"
    // InternalPascal.g:9505:1: rule__Bound_specification__Group__4 : rule__Bound_specification__Group__4__Impl ;
    public final void rule__Bound_specification__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9509:1: ( rule__Bound_specification__Group__4__Impl )
            // InternalPascal.g:9510:2: rule__Bound_specification__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Bound_specification__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__4"


    // $ANTLR start "rule__Bound_specification__Group__4__Impl"
    // InternalPascal.g:9516:1: rule__Bound_specification__Group__4__Impl : ( ( rule__Bound_specification__NameAssignment_4 ) ) ;
    public final void rule__Bound_specification__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9520:1: ( ( ( rule__Bound_specification__NameAssignment_4 ) ) )
            // InternalPascal.g:9521:1: ( ( rule__Bound_specification__NameAssignment_4 ) )
            {
            // InternalPascal.g:9521:1: ( ( rule__Bound_specification__NameAssignment_4 ) )
            // InternalPascal.g:9522:2: ( rule__Bound_specification__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getNameAssignment_4()); 
            }
            // InternalPascal.g:9523:2: ( rule__Bound_specification__NameAssignment_4 )
            // InternalPascal.g:9523:3: rule__Bound_specification__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Bound_specification__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__Group__4__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__0"
    // InternalPascal.g:9532:1: rule__Unpacked_conformant_array_schema__Group__0 : rule__Unpacked_conformant_array_schema__Group__0__Impl rule__Unpacked_conformant_array_schema__Group__1 ;
    public final void rule__Unpacked_conformant_array_schema__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9536:1: ( rule__Unpacked_conformant_array_schema__Group__0__Impl rule__Unpacked_conformant_array_schema__Group__1 )
            // InternalPascal.g:9537:2: rule__Unpacked_conformant_array_schema__Group__0__Impl rule__Unpacked_conformant_array_schema__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__Unpacked_conformant_array_schema__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__0"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__0__Impl"
    // InternalPascal.g:9544:1: rule__Unpacked_conformant_array_schema__Group__0__Impl : ( 'array' ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9548:1: ( ( 'array' ) )
            // InternalPascal.g:9549:1: ( 'array' )
            {
            // InternalPascal.g:9549:1: ( 'array' )
            // InternalPascal.g:9550:2: 'array'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getArrayKeyword_0()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getArrayKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__0__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__1"
    // InternalPascal.g:9559:1: rule__Unpacked_conformant_array_schema__Group__1 : rule__Unpacked_conformant_array_schema__Group__1__Impl rule__Unpacked_conformant_array_schema__Group__2 ;
    public final void rule__Unpacked_conformant_array_schema__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9563:1: ( rule__Unpacked_conformant_array_schema__Group__1__Impl rule__Unpacked_conformant_array_schema__Group__2 )
            // InternalPascal.g:9564:2: rule__Unpacked_conformant_array_schema__Group__1__Impl rule__Unpacked_conformant_array_schema__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Unpacked_conformant_array_schema__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__1"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__1__Impl"
    // InternalPascal.g:9571:1: rule__Unpacked_conformant_array_schema__Group__1__Impl : ( '[' ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9575:1: ( ( '[' ) )
            // InternalPascal.g:9576:1: ( '[' )
            {
            // InternalPascal.g:9576:1: ( '[' )
            // InternalPascal.g:9577:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__1__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__2"
    // InternalPascal.g:9586:1: rule__Unpacked_conformant_array_schema__Group__2 : rule__Unpacked_conformant_array_schema__Group__2__Impl rule__Unpacked_conformant_array_schema__Group__3 ;
    public final void rule__Unpacked_conformant_array_schema__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9590:1: ( rule__Unpacked_conformant_array_schema__Group__2__Impl rule__Unpacked_conformant_array_schema__Group__3 )
            // InternalPascal.g:9591:2: rule__Unpacked_conformant_array_schema__Group__2__Impl rule__Unpacked_conformant_array_schema__Group__3
            {
            pushFollow(FOLLOW_56);
            rule__Unpacked_conformant_array_schema__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__2"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__2__Impl"
    // InternalPascal.g:9598:1: rule__Unpacked_conformant_array_schema__Group__2__Impl : ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_2 ) ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9602:1: ( ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_2 ) ) )
            // InternalPascal.g:9603:1: ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_2 ) )
            {
            // InternalPascal.g:9603:1: ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_2 ) )
            // InternalPascal.g:9604:2: ( rule__Unpacked_conformant_array_schema__BoundsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsAssignment_2()); 
            }
            // InternalPascal.g:9605:2: ( rule__Unpacked_conformant_array_schema__BoundsAssignment_2 )
            // InternalPascal.g:9605:3: rule__Unpacked_conformant_array_schema__BoundsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__BoundsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__2__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__3"
    // InternalPascal.g:9613:1: rule__Unpacked_conformant_array_schema__Group__3 : rule__Unpacked_conformant_array_schema__Group__3__Impl rule__Unpacked_conformant_array_schema__Group__4 ;
    public final void rule__Unpacked_conformant_array_schema__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9617:1: ( rule__Unpacked_conformant_array_schema__Group__3__Impl rule__Unpacked_conformant_array_schema__Group__4 )
            // InternalPascal.g:9618:2: rule__Unpacked_conformant_array_schema__Group__3__Impl rule__Unpacked_conformant_array_schema__Group__4
            {
            pushFollow(FOLLOW_56);
            rule__Unpacked_conformant_array_schema__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__3"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__3__Impl"
    // InternalPascal.g:9625:1: rule__Unpacked_conformant_array_schema__Group__3__Impl : ( ( rule__Unpacked_conformant_array_schema__Group_3__0 )* ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9629:1: ( ( ( rule__Unpacked_conformant_array_schema__Group_3__0 )* ) )
            // InternalPascal.g:9630:1: ( ( rule__Unpacked_conformant_array_schema__Group_3__0 )* )
            {
            // InternalPascal.g:9630:1: ( ( rule__Unpacked_conformant_array_schema__Group_3__0 )* )
            // InternalPascal.g:9631:2: ( rule__Unpacked_conformant_array_schema__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup_3()); 
            }
            // InternalPascal.g:9632:2: ( rule__Unpacked_conformant_array_schema__Group_3__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==26) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalPascal.g:9632:3: rule__Unpacked_conformant_array_schema__Group_3__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Unpacked_conformant_array_schema__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__3__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__4"
    // InternalPascal.g:9640:1: rule__Unpacked_conformant_array_schema__Group__4 : rule__Unpacked_conformant_array_schema__Group__4__Impl rule__Unpacked_conformant_array_schema__Group__5 ;
    public final void rule__Unpacked_conformant_array_schema__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9644:1: ( rule__Unpacked_conformant_array_schema__Group__4__Impl rule__Unpacked_conformant_array_schema__Group__5 )
            // InternalPascal.g:9645:2: rule__Unpacked_conformant_array_schema__Group__4__Impl rule__Unpacked_conformant_array_schema__Group__5
            {
            pushFollow(FOLLOW_33);
            rule__Unpacked_conformant_array_schema__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__4"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__4__Impl"
    // InternalPascal.g:9652:1: rule__Unpacked_conformant_array_schema__Group__4__Impl : ( ']' ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9656:1: ( ( ']' ) )
            // InternalPascal.g:9657:1: ( ']' )
            {
            // InternalPascal.g:9657:1: ( ']' )
            // InternalPascal.g:9658:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__4__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__5"
    // InternalPascal.g:9667:1: rule__Unpacked_conformant_array_schema__Group__5 : rule__Unpacked_conformant_array_schema__Group__5__Impl rule__Unpacked_conformant_array_schema__Group__6 ;
    public final void rule__Unpacked_conformant_array_schema__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9671:1: ( rule__Unpacked_conformant_array_schema__Group__5__Impl rule__Unpacked_conformant_array_schema__Group__6 )
            // InternalPascal.g:9672:2: rule__Unpacked_conformant_array_schema__Group__5__Impl rule__Unpacked_conformant_array_schema__Group__6
            {
            pushFollow(FOLLOW_54);
            rule__Unpacked_conformant_array_schema__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__5"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__5__Impl"
    // InternalPascal.g:9679:1: rule__Unpacked_conformant_array_schema__Group__5__Impl : ( 'of' ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9683:1: ( ( 'of' ) )
            // InternalPascal.g:9684:1: ( 'of' )
            {
            // InternalPascal.g:9684:1: ( 'of' )
            // InternalPascal.g:9685:2: 'of'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getOfKeyword_5()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getOfKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__5__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__6"
    // InternalPascal.g:9694:1: rule__Unpacked_conformant_array_schema__Group__6 : rule__Unpacked_conformant_array_schema__Group__6__Impl ;
    public final void rule__Unpacked_conformant_array_schema__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9698:1: ( rule__Unpacked_conformant_array_schema__Group__6__Impl )
            // InternalPascal.g:9699:2: rule__Unpacked_conformant_array_schema__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__6"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group__6__Impl"
    // InternalPascal.g:9705:1: rule__Unpacked_conformant_array_schema__Group__6__Impl : ( ( rule__Unpacked_conformant_array_schema__TypeAssignment_6 ) ) ;
    public final void rule__Unpacked_conformant_array_schema__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9709:1: ( ( ( rule__Unpacked_conformant_array_schema__TypeAssignment_6 ) ) )
            // InternalPascal.g:9710:1: ( ( rule__Unpacked_conformant_array_schema__TypeAssignment_6 ) )
            {
            // InternalPascal.g:9710:1: ( ( rule__Unpacked_conformant_array_schema__TypeAssignment_6 ) )
            // InternalPascal.g:9711:2: ( rule__Unpacked_conformant_array_schema__TypeAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getTypeAssignment_6()); 
            }
            // InternalPascal.g:9712:2: ( rule__Unpacked_conformant_array_schema__TypeAssignment_6 )
            // InternalPascal.g:9712:3: rule__Unpacked_conformant_array_schema__TypeAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__TypeAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getTypeAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group__6__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group_3__0"
    // InternalPascal.g:9721:1: rule__Unpacked_conformant_array_schema__Group_3__0 : rule__Unpacked_conformant_array_schema__Group_3__0__Impl rule__Unpacked_conformant_array_schema__Group_3__1 ;
    public final void rule__Unpacked_conformant_array_schema__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9725:1: ( rule__Unpacked_conformant_array_schema__Group_3__0__Impl rule__Unpacked_conformant_array_schema__Group_3__1 )
            // InternalPascal.g:9726:2: rule__Unpacked_conformant_array_schema__Group_3__0__Impl rule__Unpacked_conformant_array_schema__Group_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Unpacked_conformant_array_schema__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group_3__0"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group_3__0__Impl"
    // InternalPascal.g:9733:1: rule__Unpacked_conformant_array_schema__Group_3__0__Impl : ( ';' ) ;
    public final void rule__Unpacked_conformant_array_schema__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9737:1: ( ( ';' ) )
            // InternalPascal.g:9738:1: ( ';' )
            {
            // InternalPascal.g:9738:1: ( ';' )
            // InternalPascal.g:9739:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getSemicolonKeyword_3_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getSemicolonKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group_3__0__Impl"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group_3__1"
    // InternalPascal.g:9748:1: rule__Unpacked_conformant_array_schema__Group_3__1 : rule__Unpacked_conformant_array_schema__Group_3__1__Impl ;
    public final void rule__Unpacked_conformant_array_schema__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9752:1: ( rule__Unpacked_conformant_array_schema__Group_3__1__Impl )
            // InternalPascal.g:9753:2: rule__Unpacked_conformant_array_schema__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group_3__1"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__Group_3__1__Impl"
    // InternalPascal.g:9759:1: rule__Unpacked_conformant_array_schema__Group_3__1__Impl : ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 ) ) ;
    public final void rule__Unpacked_conformant_array_schema__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9763:1: ( ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 ) ) )
            // InternalPascal.g:9764:1: ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 ) )
            {
            // InternalPascal.g:9764:1: ( ( rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 ) )
            // InternalPascal.g:9765:2: ( rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsAssignment_3_1()); 
            }
            // InternalPascal.g:9766:2: ( rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 )
            // InternalPascal.g:9766:3: rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__Group_3__1__Impl"


    // $ANTLR start "rule__Variable_parameter_section__Group__0"
    // InternalPascal.g:9775:1: rule__Variable_parameter_section__Group__0 : rule__Variable_parameter_section__Group__0__Impl rule__Variable_parameter_section__Group__1 ;
    public final void rule__Variable_parameter_section__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9779:1: ( rule__Variable_parameter_section__Group__0__Impl rule__Variable_parameter_section__Group__1 )
            // InternalPascal.g:9780:2: rule__Variable_parameter_section__Group__0__Impl rule__Variable_parameter_section__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Variable_parameter_section__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__0"


    // $ANTLR start "rule__Variable_parameter_section__Group__0__Impl"
    // InternalPascal.g:9787:1: rule__Variable_parameter_section__Group__0__Impl : ( 'var' ) ;
    public final void rule__Variable_parameter_section__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9791:1: ( ( 'var' ) )
            // InternalPascal.g:9792:1: ( 'var' )
            {
            // InternalPascal.g:9792:1: ( 'var' )
            // InternalPascal.g:9793:2: 'var'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getVarKeyword_0()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getVarKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__0__Impl"


    // $ANTLR start "rule__Variable_parameter_section__Group__1"
    // InternalPascal.g:9802:1: rule__Variable_parameter_section__Group__1 : rule__Variable_parameter_section__Group__1__Impl rule__Variable_parameter_section__Group__2 ;
    public final void rule__Variable_parameter_section__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9806:1: ( rule__Variable_parameter_section__Group__1__Impl rule__Variable_parameter_section__Group__2 )
            // InternalPascal.g:9807:2: rule__Variable_parameter_section__Group__1__Impl rule__Variable_parameter_section__Group__2
            {
            pushFollow(FOLLOW_15);
            rule__Variable_parameter_section__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__1"


    // $ANTLR start "rule__Variable_parameter_section__Group__1__Impl"
    // InternalPascal.g:9814:1: rule__Variable_parameter_section__Group__1__Impl : ( ( rule__Variable_parameter_section__IdentifiersAssignment_1 ) ) ;
    public final void rule__Variable_parameter_section__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9818:1: ( ( ( rule__Variable_parameter_section__IdentifiersAssignment_1 ) ) )
            // InternalPascal.g:9819:1: ( ( rule__Variable_parameter_section__IdentifiersAssignment_1 ) )
            {
            // InternalPascal.g:9819:1: ( ( rule__Variable_parameter_section__IdentifiersAssignment_1 ) )
            // InternalPascal.g:9820:2: ( rule__Variable_parameter_section__IdentifiersAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getIdentifiersAssignment_1()); 
            }
            // InternalPascal.g:9821:2: ( rule__Variable_parameter_section__IdentifiersAssignment_1 )
            // InternalPascal.g:9821:3: rule__Variable_parameter_section__IdentifiersAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__IdentifiersAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getIdentifiersAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__1__Impl"


    // $ANTLR start "rule__Variable_parameter_section__Group__2"
    // InternalPascal.g:9829:1: rule__Variable_parameter_section__Group__2 : rule__Variable_parameter_section__Group__2__Impl rule__Variable_parameter_section__Group__3 ;
    public final void rule__Variable_parameter_section__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9833:1: ( rule__Variable_parameter_section__Group__2__Impl rule__Variable_parameter_section__Group__3 )
            // InternalPascal.g:9834:2: rule__Variable_parameter_section__Group__2__Impl rule__Variable_parameter_section__Group__3
            {
            pushFollow(FOLLOW_54);
            rule__Variable_parameter_section__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__2"


    // $ANTLR start "rule__Variable_parameter_section__Group__2__Impl"
    // InternalPascal.g:9841:1: rule__Variable_parameter_section__Group__2__Impl : ( ':' ) ;
    public final void rule__Variable_parameter_section__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9845:1: ( ( ':' ) )
            // InternalPascal.g:9846:1: ( ':' )
            {
            // InternalPascal.g:9846:1: ( ':' )
            // InternalPascal.g:9847:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getColonKeyword_2()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__2__Impl"


    // $ANTLR start "rule__Variable_parameter_section__Group__3"
    // InternalPascal.g:9856:1: rule__Variable_parameter_section__Group__3 : rule__Variable_parameter_section__Group__3__Impl ;
    public final void rule__Variable_parameter_section__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9860:1: ( rule__Variable_parameter_section__Group__3__Impl )
            // InternalPascal.g:9861:2: rule__Variable_parameter_section__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__3"


    // $ANTLR start "rule__Variable_parameter_section__Group__3__Impl"
    // InternalPascal.g:9867:1: rule__Variable_parameter_section__Group__3__Impl : ( ( rule__Variable_parameter_section__TypeAssignment_3 ) ) ;
    public final void rule__Variable_parameter_section__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9871:1: ( ( ( rule__Variable_parameter_section__TypeAssignment_3 ) ) )
            // InternalPascal.g:9872:1: ( ( rule__Variable_parameter_section__TypeAssignment_3 ) )
            {
            // InternalPascal.g:9872:1: ( ( rule__Variable_parameter_section__TypeAssignment_3 ) )
            // InternalPascal.g:9873:2: ( rule__Variable_parameter_section__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getTypeAssignment_3()); 
            }
            // InternalPascal.g:9874:2: ( rule__Variable_parameter_section__TypeAssignment_3 )
            // InternalPascal.g:9874:3: rule__Variable_parameter_section__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Variable_parameter_section__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__Group__3__Impl"


    // $ANTLR start "rule__Function_heading__Group__0"
    // InternalPascal.g:9883:1: rule__Function_heading__Group__0 : rule__Function_heading__Group__0__Impl rule__Function_heading__Group__1 ;
    public final void rule__Function_heading__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9887:1: ( rule__Function_heading__Group__0__Impl rule__Function_heading__Group__1 )
            // InternalPascal.g:9888:2: rule__Function_heading__Group__0__Impl rule__Function_heading__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Function_heading__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_heading__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__0"


    // $ANTLR start "rule__Function_heading__Group__0__Impl"
    // InternalPascal.g:9895:1: rule__Function_heading__Group__0__Impl : ( 'function' ) ;
    public final void rule__Function_heading__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9899:1: ( ( 'function' ) )
            // InternalPascal.g:9900:1: ( 'function' )
            {
            // InternalPascal.g:9900:1: ( 'function' )
            // InternalPascal.g:9901:2: 'function'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getFunctionKeyword_0()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getFunctionKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__0__Impl"


    // $ANTLR start "rule__Function_heading__Group__1"
    // InternalPascal.g:9910:1: rule__Function_heading__Group__1 : rule__Function_heading__Group__1__Impl rule__Function_heading__Group__2 ;
    public final void rule__Function_heading__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9914:1: ( rule__Function_heading__Group__1__Impl rule__Function_heading__Group__2 )
            // InternalPascal.g:9915:2: rule__Function_heading__Group__1__Impl rule__Function_heading__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__Function_heading__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_heading__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__1"


    // $ANTLR start "rule__Function_heading__Group__1__Impl"
    // InternalPascal.g:9922:1: rule__Function_heading__Group__1__Impl : ( ( rule__Function_heading__NameAssignment_1 ) ) ;
    public final void rule__Function_heading__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9926:1: ( ( ( rule__Function_heading__NameAssignment_1 ) ) )
            // InternalPascal.g:9927:1: ( ( rule__Function_heading__NameAssignment_1 ) )
            {
            // InternalPascal.g:9927:1: ( ( rule__Function_heading__NameAssignment_1 ) )
            // InternalPascal.g:9928:2: ( rule__Function_heading__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getNameAssignment_1()); 
            }
            // InternalPascal.g:9929:2: ( rule__Function_heading__NameAssignment_1 )
            // InternalPascal.g:9929:3: rule__Function_heading__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Function_heading__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__1__Impl"


    // $ANTLR start "rule__Function_heading__Group__2"
    // InternalPascal.g:9937:1: rule__Function_heading__Group__2 : rule__Function_heading__Group__2__Impl rule__Function_heading__Group__3 ;
    public final void rule__Function_heading__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9941:1: ( rule__Function_heading__Group__2__Impl rule__Function_heading__Group__3 )
            // InternalPascal.g:9942:2: rule__Function_heading__Group__2__Impl rule__Function_heading__Group__3
            {
            pushFollow(FOLLOW_57);
            rule__Function_heading__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_heading__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__2"


    // $ANTLR start "rule__Function_heading__Group__2__Impl"
    // InternalPascal.g:9949:1: rule__Function_heading__Group__2__Impl : ( ( rule__Function_heading__ParametersAssignment_2 )? ) ;
    public final void rule__Function_heading__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9953:1: ( ( ( rule__Function_heading__ParametersAssignment_2 )? ) )
            // InternalPascal.g:9954:1: ( ( rule__Function_heading__ParametersAssignment_2 )? )
            {
            // InternalPascal.g:9954:1: ( ( rule__Function_heading__ParametersAssignment_2 )? )
            // InternalPascal.g:9955:2: ( rule__Function_heading__ParametersAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getParametersAssignment_2()); 
            }
            // InternalPascal.g:9956:2: ( rule__Function_heading__ParametersAssignment_2 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==27) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalPascal.g:9956:3: rule__Function_heading__ParametersAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Function_heading__ParametersAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getParametersAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__2__Impl"


    // $ANTLR start "rule__Function_heading__Group__3"
    // InternalPascal.g:9964:1: rule__Function_heading__Group__3 : rule__Function_heading__Group__3__Impl rule__Function_heading__Group__4 ;
    public final void rule__Function_heading__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9968:1: ( rule__Function_heading__Group__3__Impl rule__Function_heading__Group__4 )
            // InternalPascal.g:9969:2: rule__Function_heading__Group__3__Impl rule__Function_heading__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__Function_heading__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_heading__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__3"


    // $ANTLR start "rule__Function_heading__Group__3__Impl"
    // InternalPascal.g:9976:1: rule__Function_heading__Group__3__Impl : ( ':' ) ;
    public final void rule__Function_heading__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9980:1: ( ( ':' ) )
            // InternalPascal.g:9981:1: ( ':' )
            {
            // InternalPascal.g:9981:1: ( ':' )
            // InternalPascal.g:9982:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getColonKeyword_3()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__3__Impl"


    // $ANTLR start "rule__Function_heading__Group__4"
    // InternalPascal.g:9991:1: rule__Function_heading__Group__4 : rule__Function_heading__Group__4__Impl ;
    public final void rule__Function_heading__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:9995:1: ( rule__Function_heading__Group__4__Impl )
            // InternalPascal.g:9996:2: rule__Function_heading__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function_heading__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__4"


    // $ANTLR start "rule__Function_heading__Group__4__Impl"
    // InternalPascal.g:10002:1: rule__Function_heading__Group__4__Impl : ( ( rule__Function_heading__ReturnTypeAssignment_4 ) ) ;
    public final void rule__Function_heading__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10006:1: ( ( ( rule__Function_heading__ReturnTypeAssignment_4 ) ) )
            // InternalPascal.g:10007:1: ( ( rule__Function_heading__ReturnTypeAssignment_4 ) )
            {
            // InternalPascal.g:10007:1: ( ( rule__Function_heading__ReturnTypeAssignment_4 ) )
            // InternalPascal.g:10008:2: ( rule__Function_heading__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getReturnTypeAssignment_4()); 
            }
            // InternalPascal.g:10009:2: ( rule__Function_heading__ReturnTypeAssignment_4 )
            // InternalPascal.g:10009:3: rule__Function_heading__ReturnTypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Function_heading__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__Group__4__Impl"


    // $ANTLR start "rule__Function_declaration__Group__0"
    // InternalPascal.g:10018:1: rule__Function_declaration__Group__0 : rule__Function_declaration__Group__0__Impl rule__Function_declaration__Group__1 ;
    public final void rule__Function_declaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10022:1: ( rule__Function_declaration__Group__0__Impl rule__Function_declaration__Group__1 )
            // InternalPascal.g:10023:2: rule__Function_declaration__Group__0__Impl rule__Function_declaration__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Function_declaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_declaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Group__0"


    // $ANTLR start "rule__Function_declaration__Group__0__Impl"
    // InternalPascal.g:10030:1: rule__Function_declaration__Group__0__Impl : ( ( rule__Function_declaration__HeadingAssignment_0 ) ) ;
    public final void rule__Function_declaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10034:1: ( ( ( rule__Function_declaration__HeadingAssignment_0 ) ) )
            // InternalPascal.g:10035:1: ( ( rule__Function_declaration__HeadingAssignment_0 ) )
            {
            // InternalPascal.g:10035:1: ( ( rule__Function_declaration__HeadingAssignment_0 ) )
            // InternalPascal.g:10036:2: ( rule__Function_declaration__HeadingAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getHeadingAssignment_0()); 
            }
            // InternalPascal.g:10037:2: ( rule__Function_declaration__HeadingAssignment_0 )
            // InternalPascal.g:10037:3: rule__Function_declaration__HeadingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Function_declaration__HeadingAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getHeadingAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Group__0__Impl"


    // $ANTLR start "rule__Function_declaration__Group__1"
    // InternalPascal.g:10045:1: rule__Function_declaration__Group__1 : rule__Function_declaration__Group__1__Impl rule__Function_declaration__Group__2 ;
    public final void rule__Function_declaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10049:1: ( rule__Function_declaration__Group__1__Impl rule__Function_declaration__Group__2 )
            // InternalPascal.g:10050:2: rule__Function_declaration__Group__1__Impl rule__Function_declaration__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__Function_declaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function_declaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Group__1"


    // $ANTLR start "rule__Function_declaration__Group__1__Impl"
    // InternalPascal.g:10057:1: rule__Function_declaration__Group__1__Impl : ( ';' ) ;
    public final void rule__Function_declaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10061:1: ( ( ';' ) )
            // InternalPascal.g:10062:1: ( ';' )
            {
            // InternalPascal.g:10062:1: ( ';' )
            // InternalPascal.g:10063:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_1()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Group__1__Impl"


    // $ANTLR start "rule__Function_declaration__Group__2"
    // InternalPascal.g:10072:1: rule__Function_declaration__Group__2 : rule__Function_declaration__Group__2__Impl ;
    public final void rule__Function_declaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10076:1: ( rule__Function_declaration__Group__2__Impl )
            // InternalPascal.g:10077:2: rule__Function_declaration__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function_declaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Group__2"


    // $ANTLR start "rule__Function_declaration__Group__2__Impl"
    // InternalPascal.g:10083:1: rule__Function_declaration__Group__2__Impl : ( ( rule__Function_declaration__Alternatives_2 ) ) ;
    public final void rule__Function_declaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10087:1: ( ( ( rule__Function_declaration__Alternatives_2 ) ) )
            // InternalPascal.g:10088:1: ( ( rule__Function_declaration__Alternatives_2 ) )
            {
            // InternalPascal.g:10088:1: ( ( rule__Function_declaration__Alternatives_2 ) )
            // InternalPascal.g:10089:2: ( rule__Function_declaration__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getAlternatives_2()); 
            }
            // InternalPascal.g:10090:2: ( rule__Function_declaration__Alternatives_2 )
            // InternalPascal.g:10090:3: rule__Function_declaration__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__Function_declaration__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__Group__2__Impl"


    // $ANTLR start "rule__Pascal__ProgramAssignment"
    // InternalPascal.g:10099:1: rule__Pascal__ProgramAssignment : ( ruleprogram ) ;
    public final void rule__Pascal__ProgramAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10103:1: ( ( ruleprogram ) )
            // InternalPascal.g:10104:2: ( ruleprogram )
            {
            // InternalPascal.g:10104:2: ( ruleprogram )
            // InternalPascal.g:10105:3: ruleprogram
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprogram();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pascal__ProgramAssignment"


    // $ANTLR start "rule__Program__HeadingAssignment_0"
    // InternalPascal.g:10114:1: rule__Program__HeadingAssignment_0 : ( ruleprogram_heading_block ) ;
    public final void rule__Program__HeadingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10118:1: ( ( ruleprogram_heading_block ) )
            // InternalPascal.g:10119:2: ( ruleprogram_heading_block )
            {
            // InternalPascal.g:10119:2: ( ruleprogram_heading_block )
            // InternalPascal.g:10120:3: ruleprogram_heading_block
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprogram_heading_block();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__HeadingAssignment_0"


    // $ANTLR start "rule__Program__BlockAssignment_1"
    // InternalPascal.g:10129:1: rule__Program__BlockAssignment_1 : ( ruleblock ) ;
    public final void rule__Program__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10133:1: ( ( ruleblock ) )
            // InternalPascal.g:10134:2: ( ruleblock )
            {
            // InternalPascal.g:10134:2: ( ruleblock )
            // InternalPascal.g:10135:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__BlockAssignment_1"


    // $ANTLR start "rule__Program_heading_block__NameAssignment_1"
    // InternalPascal.g:10144:1: rule__Program_heading_block__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Program_heading_block__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10148:1: ( ( RULE_ID ) )
            // InternalPascal.g:10149:2: ( RULE_ID )
            {
            // InternalPascal.g:10149:2: ( RULE_ID )
            // InternalPascal.g:10150:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__NameAssignment_1"


    // $ANTLR start "rule__Program_heading_block__IdentifiersAssignment_2_1"
    // InternalPascal.g:10159:1: rule__Program_heading_block__IdentifiersAssignment_2_1 : ( ruleidentifier_list ) ;
    public final void rule__Program_heading_block__IdentifiersAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10163:1: ( ( ruleidentifier_list ) )
            // InternalPascal.g:10164:2: ( ruleidentifier_list )
            {
            // InternalPascal.g:10164:2: ( ruleidentifier_list )
            // InternalPascal.g:10165:3: ruleidentifier_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgram_heading_blockAccess().getIdentifiersIdentifier_listParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgram_heading_blockAccess().getIdentifiersIdentifier_listParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program_heading_block__IdentifiersAssignment_2_1"


    // $ANTLR start "rule__Identifier_list__NamesAssignment_0"
    // InternalPascal.g:10174:1: rule__Identifier_list__NamesAssignment_0 : ( RULE_ID ) ;
    public final void rule__Identifier_list__NamesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10178:1: ( ( RULE_ID ) )
            // InternalPascal.g:10179:2: ( RULE_ID )
            {
            // InternalPascal.g:10179:2: ( RULE_ID )
            // InternalPascal.g:10180:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__NamesAssignment_0"


    // $ANTLR start "rule__Identifier_list__NamesAssignment_1_1"
    // InternalPascal.g:10189:1: rule__Identifier_list__NamesAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__Identifier_list__NamesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10193:1: ( ( RULE_ID ) )
            // InternalPascal.g:10194:2: ( RULE_ID )
            {
            // InternalPascal.g:10194:2: ( RULE_ID )
            // InternalPascal.g:10195:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier_list__NamesAssignment_1_1"


    // $ANTLR start "rule__Block__LabelAssignment_0"
    // InternalPascal.g:10204:1: rule__Block__LabelAssignment_0 : ( rulelabel_declaration_part ) ;
    public final void rule__Block__LabelAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10208:1: ( ( rulelabel_declaration_part ) )
            // InternalPascal.g:10209:2: ( rulelabel_declaration_part )
            {
            // InternalPascal.g:10209:2: ( rulelabel_declaration_part )
            // InternalPascal.g:10210:3: rulelabel_declaration_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getLabelLabel_declaration_partParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelabel_declaration_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getLabelLabel_declaration_partParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__LabelAssignment_0"


    // $ANTLR start "rule__Block__ConstantAssignment_1"
    // InternalPascal.g:10219:1: rule__Block__ConstantAssignment_1 : ( ruleconstant_definition_part ) ;
    public final void rule__Block__ConstantAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10223:1: ( ( ruleconstant_definition_part ) )
            // InternalPascal.g:10224:2: ( ruleconstant_definition_part )
            {
            // InternalPascal.g:10224:2: ( ruleconstant_definition_part )
            // InternalPascal.g:10225:3: ruleconstant_definition_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getConstantConstant_definition_partParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant_definition_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getConstantConstant_definition_partParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__ConstantAssignment_1"


    // $ANTLR start "rule__Block__TypeAssignment_2"
    // InternalPascal.g:10234:1: rule__Block__TypeAssignment_2 : ( ruletype_definition_part ) ;
    public final void rule__Block__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10238:1: ( ( ruletype_definition_part ) )
            // InternalPascal.g:10239:2: ( ruletype_definition_part )
            {
            // InternalPascal.g:10239:2: ( ruletype_definition_part )
            // InternalPascal.g:10240:3: ruletype_definition_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getTypeType_definition_partParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype_definition_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getTypeType_definition_partParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__TypeAssignment_2"


    // $ANTLR start "rule__Block__VariableAssignment_3"
    // InternalPascal.g:10249:1: rule__Block__VariableAssignment_3 : ( rulevariable_declaration_part ) ;
    public final void rule__Block__VariableAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10253:1: ( ( rulevariable_declaration_part ) )
            // InternalPascal.g:10254:2: ( rulevariable_declaration_part )
            {
            // InternalPascal.g:10254:2: ( rulevariable_declaration_part )
            // InternalPascal.g:10255:3: rulevariable_declaration_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getVariableVariable_declaration_partParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable_declaration_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getVariableVariable_declaration_partParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__VariableAssignment_3"


    // $ANTLR start "rule__Block__AbstractionAssignment_4"
    // InternalPascal.g:10264:1: rule__Block__AbstractionAssignment_4 : ( ruleprocedure_and_function_declaration_part ) ;
    public final void rule__Block__AbstractionAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10268:1: ( ( ruleprocedure_and_function_declaration_part ) )
            // InternalPascal.g:10269:2: ( ruleprocedure_and_function_declaration_part )
            {
            // InternalPascal.g:10269:2: ( ruleprocedure_and_function_declaration_part )
            // InternalPascal.g:10270:3: ruleprocedure_and_function_declaration_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getAbstractionProcedure_and_function_declaration_partParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprocedure_and_function_declaration_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getAbstractionProcedure_and_function_declaration_partParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__AbstractionAssignment_4"


    // $ANTLR start "rule__Block__StatementAssignment_5"
    // InternalPascal.g:10279:1: rule__Block__StatementAssignment_5 : ( rulestatement_part ) ;
    public final void rule__Block__StatementAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10283:1: ( ( rulestatement_part ) )
            // InternalPascal.g:10284:2: ( rulestatement_part )
            {
            // InternalPascal.g:10284:2: ( rulestatement_part )
            // InternalPascal.g:10285:3: rulestatement_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getStatementStatement_partParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getStatementStatement_partParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__StatementAssignment_5"


    // $ANTLR start "rule__Statement_part__SequenceAssignment_1"
    // InternalPascal.g:10294:1: rule__Statement_part__SequenceAssignment_1 : ( rulestatement_sequence ) ;
    public final void rule__Statement_part__SequenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10298:1: ( ( rulestatement_sequence ) )
            // InternalPascal.g:10299:2: ( rulestatement_sequence )
            {
            // InternalPascal.g:10299:2: ( rulestatement_sequence )
            // InternalPascal.g:10300:3: rulestatement_sequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_partAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement_sequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_partAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_part__SequenceAssignment_1"


    // $ANTLR start "rule__Statement_sequence__StatementsAssignment_0"
    // InternalPascal.g:10309:1: rule__Statement_sequence__StatementsAssignment_0 : ( rulestatement ) ;
    public final void rule__Statement_sequence__StatementsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10313:1: ( ( rulestatement ) )
            // InternalPascal.g:10314:2: ( rulestatement )
            {
            // InternalPascal.g:10314:2: ( rulestatement )
            // InternalPascal.g:10315:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__StatementsAssignment_0"


    // $ANTLR start "rule__Statement_sequence__StatementsAssignment_1_1"
    // InternalPascal.g:10324:1: rule__Statement_sequence__StatementsAssignment_1_1 : ( rulestatement ) ;
    public final void rule__Statement_sequence__StatementsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10328:1: ( ( rulestatement ) )
            // InternalPascal.g:10329:2: ( rulestatement )
            {
            // InternalPascal.g:10329:2: ( rulestatement )
            // InternalPascal.g:10330:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement_sequence__StatementsAssignment_1_1"


    // $ANTLR start "rule__Statement__LabelAssignment_0_0"
    // InternalPascal.g:10339:1: rule__Statement__LabelAssignment_0_0 : ( rulelabel ) ;
    public final void rule__Statement__LabelAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10343:1: ( ( rulelabel ) )
            // InternalPascal.g:10344:2: ( rulelabel )
            {
            // InternalPascal.g:10344:2: ( rulelabel )
            // InternalPascal.g:10345:3: rulelabel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getLabelLabelParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelabel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getLabelLabelParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__LabelAssignment_0_0"


    // $ANTLR start "rule__Statement__SimpleAssignment_1_0"
    // InternalPascal.g:10354:1: rule__Statement__SimpleAssignment_1_0 : ( rulesimple_statement ) ;
    public final void rule__Statement__SimpleAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10358:1: ( ( rulesimple_statement ) )
            // InternalPascal.g:10359:2: ( rulesimple_statement )
            {
            // InternalPascal.g:10359:2: ( rulesimple_statement )
            // InternalPascal.g:10360:3: rulesimple_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getSimpleSimple_statementParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimple_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getSimpleSimple_statementParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__SimpleAssignment_1_0"


    // $ANTLR start "rule__Statement__StructuredAssignment_1_1"
    // InternalPascal.g:10369:1: rule__Statement__StructuredAssignment_1_1 : ( rulestructured_statement ) ;
    public final void rule__Statement__StructuredAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10373:1: ( ( rulestructured_statement ) )
            // InternalPascal.g:10374:2: ( rulestructured_statement )
            {
            // InternalPascal.g:10374:2: ( rulestructured_statement )
            // InternalPascal.g:10375:3: rulestructured_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getStructuredStructured_statementParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestructured_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getStructuredStructured_statementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__StructuredAssignment_1_1"


    // $ANTLR start "rule__Label__NumberAssignment_0"
    // InternalPascal.g:10384:1: rule__Label__NumberAssignment_0 : ( RULE_SIGNED_INTEGER_NUMBER ) ;
    public final void rule__Label__NumberAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10388:1: ( ( RULE_SIGNED_INTEGER_NUMBER ) )
            // InternalPascal.g:10389:2: ( RULE_SIGNED_INTEGER_NUMBER )
            {
            // InternalPascal.g:10389:2: ( RULE_SIGNED_INTEGER_NUMBER )
            // InternalPascal.g:10390:3: RULE_SIGNED_INTEGER_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabelAccess().getNumberSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); 
            }
            match(input,RULE_SIGNED_INTEGER_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabelAccess().getNumberSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__NumberAssignment_0"


    // $ANTLR start "rule__Label__NumberAssignment_1"
    // InternalPascal.g:10399:1: rule__Label__NumberAssignment_1 : ( RULE_INTEGER_NUMBER ) ;
    public final void rule__Label__NumberAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10403:1: ( ( RULE_INTEGER_NUMBER ) )
            // InternalPascal.g:10404:2: ( RULE_INTEGER_NUMBER )
            {
            // InternalPascal.g:10404:2: ( RULE_INTEGER_NUMBER )
            // InternalPascal.g:10405:3: RULE_INTEGER_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabelAccess().getNumberINTEGER_NUMBERTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INTEGER_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabelAccess().getNumberINTEGER_NUMBERTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__NumberAssignment_1"


    // $ANTLR start "rule__Simple_statement__AssignmentAssignment_0"
    // InternalPascal.g:10414:1: rule__Simple_statement__AssignmentAssignment_0 : ( ruleassignment_statement ) ;
    public final void rule__Simple_statement__AssignmentAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10418:1: ( ( ruleassignment_statement ) )
            // InternalPascal.g:10419:2: ( ruleassignment_statement )
            {
            // InternalPascal.g:10419:2: ( ruleassignment_statement )
            // InternalPascal.g:10420:3: ruleassignment_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignment_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_statement__AssignmentAssignment_0"


    // $ANTLR start "rule__Simple_statement__FunctionAssignment_1"
    // InternalPascal.g:10429:1: rule__Simple_statement__FunctionAssignment_1 : ( rulefunction_designator ) ;
    public final void rule__Simple_statement__FunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10433:1: ( ( rulefunction_designator ) )
            // InternalPascal.g:10434:2: ( rulefunction_designator )
            {
            // InternalPascal.g:10434:2: ( rulefunction_designator )
            // InternalPascal.g:10435:3: rulefunction_designator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_statementAccess().getFunctionFunction_designatorParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction_designator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_statementAccess().getFunctionFunction_designatorParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_statement__FunctionAssignment_1"


    // $ANTLR start "rule__Simple_statement__GotoAssignment_2"
    // InternalPascal.g:10444:1: rule__Simple_statement__GotoAssignment_2 : ( rulegoto_statement ) ;
    public final void rule__Simple_statement__GotoAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10448:1: ( ( rulegoto_statement ) )
            // InternalPascal.g:10449:2: ( rulegoto_statement )
            {
            // InternalPascal.g:10449:2: ( rulegoto_statement )
            // InternalPascal.g:10450:3: rulegoto_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_statementAccess().getGotoGoto_statementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulegoto_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_statementAccess().getGotoGoto_statementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_statement__GotoAssignment_2"


    // $ANTLR start "rule__Simple_statement__Function_noargsAssignment_3"
    // InternalPascal.g:10459:1: rule__Simple_statement__Function_noargsAssignment_3 : ( RULE_ID ) ;
    public final void rule__Simple_statement__Function_noargsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10463:1: ( ( RULE_ID ) )
            // InternalPascal.g:10464:2: ( RULE_ID )
            {
            // InternalPascal.g:10464:2: ( RULE_ID )
            // InternalPascal.g:10465:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_statementAccess().getFunction_noargsIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_statementAccess().getFunction_noargsIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_statement__Function_noargsAssignment_3"


    // $ANTLR start "rule__Assignment_statement__VariableAssignment_0"
    // InternalPascal.g:10474:1: rule__Assignment_statement__VariableAssignment_0 : ( rulevariable ) ;
    public final void rule__Assignment_statement__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10478:1: ( ( rulevariable ) )
            // InternalPascal.g:10479:2: ( rulevariable )
            {
            // InternalPascal.g:10479:2: ( rulevariable )
            // InternalPascal.g:10480:3: rulevariable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementAccess().getVariableVariableParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementAccess().getVariableVariableParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__VariableAssignment_0"


    // $ANTLR start "rule__Assignment_statement__ExpressionAssignment_2"
    // InternalPascal.g:10489:1: rule__Assignment_statement__ExpressionAssignment_2 : ( ruleexpression ) ;
    public final void rule__Assignment_statement__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10493:1: ( ( ruleexpression ) )
            // InternalPascal.g:10494:2: ( ruleexpression )
            {
            // InternalPascal.g:10494:2: ( ruleexpression )
            // InternalPascal.g:10495:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment_statement__ExpressionAssignment_2"


    // $ANTLR start "rule__Variable__NameAssignment_0"
    // InternalPascal.g:10504:1: rule__Variable__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Variable__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10508:1: ( ( RULE_ID ) )
            // InternalPascal.g:10509:2: ( RULE_ID )
            {
            // InternalPascal.g:10509:2: ( RULE_ID )
            // InternalPascal.g:10510:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__NameAssignment_0"


    // $ANTLR start "rule__Variable__VariableAssignment_1"
    // InternalPascal.g:10519:1: rule__Variable__VariableAssignment_1 : ( rulevar_ ) ;
    public final void rule__Variable__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10523:1: ( ( rulevar_ ) )
            // InternalPascal.g:10524:2: ( rulevar_ )
            {
            // InternalPascal.g:10524:2: ( rulevar_ )
            // InternalPascal.g:10525:3: rulevar_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getVariableVar_ParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevar_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getVariableVar_ParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__VariableAssignment_1"


    // $ANTLR start "rule__Var___ExpressionsAssignment_0_1"
    // InternalPascal.g:10534:1: rule__Var___ExpressionsAssignment_0_1 : ( ruleexpression_list ) ;
    public final void rule__Var___ExpressionsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10538:1: ( ( ruleexpression_list ) )
            // InternalPascal.g:10539:2: ( ruleexpression_list )
            {
            // InternalPascal.g:10539:2: ( ruleexpression_list )
            // InternalPascal.g:10540:3: ruleexpression_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getExpressionsExpression_listParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getExpressionsExpression_listParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___ExpressionsAssignment_0_1"


    // $ANTLR start "rule__Var___ArrayAssignment_0_3"
    // InternalPascal.g:10549:1: rule__Var___ArrayAssignment_0_3 : ( rulevar_ ) ;
    public final void rule__Var___ArrayAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10553:1: ( ( rulevar_ ) )
            // InternalPascal.g:10554:2: ( rulevar_ )
            {
            // InternalPascal.g:10554:2: ( rulevar_ )
            // InternalPascal.g:10555:3: rulevar_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getArrayVar_ParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevar_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getArrayVar_ParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___ArrayAssignment_0_3"


    // $ANTLR start "rule__Var___AccessorAssignment_1_0"
    // InternalPascal.g:10564:1: rule__Var___AccessorAssignment_1_0 : ( ( '.' ) ) ;
    public final void rule__Var___AccessorAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10568:1: ( ( ( '.' ) ) )
            // InternalPascal.g:10569:2: ( ( '.' ) )
            {
            // InternalPascal.g:10569:2: ( ( '.' ) )
            // InternalPascal.g:10570:3: ( '.' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getAccessorFullStopKeyword_1_0_0()); 
            }
            // InternalPascal.g:10571:3: ( '.' )
            // InternalPascal.g:10572:4: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getAccessorFullStopKeyword_1_0_0()); 
            }
            match(input,24,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getAccessorFullStopKeyword_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getAccessorFullStopKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___AccessorAssignment_1_0"


    // $ANTLR start "rule__Var___NameAssignment_1_1"
    // InternalPascal.g:10583:1: rule__Var___NameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__Var___NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10587:1: ( ( RULE_ID ) )
            // InternalPascal.g:10588:2: ( RULE_ID )
            {
            // InternalPascal.g:10588:2: ( RULE_ID )
            // InternalPascal.g:10589:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getNameIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getNameIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___NameAssignment_1_1"


    // $ANTLR start "rule__Var___VariableAssignment_1_2"
    // InternalPascal.g:10598:1: rule__Var___VariableAssignment_1_2 : ( rulevar_ ) ;
    public final void rule__Var___VariableAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10602:1: ( ( rulevar_ ) )
            // InternalPascal.g:10603:2: ( rulevar_ )
            {
            // InternalPascal.g:10603:2: ( rulevar_ )
            // InternalPascal.g:10604:3: rulevar_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getVariableVar_ParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevar_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getVariableVar_ParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___VariableAssignment_1_2"


    // $ANTLR start "rule__Var___PointerAssignment_2_1"
    // InternalPascal.g:10613:1: rule__Var___PointerAssignment_2_1 : ( rulevar_ ) ;
    public final void rule__Var___PointerAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10617:1: ( ( rulevar_ ) )
            // InternalPascal.g:10618:2: ( rulevar_ )
            {
            // InternalPascal.g:10618:2: ( rulevar_ )
            // InternalPascal.g:10619:3: rulevar_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVar_Access().getPointerVar_ParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevar_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVar_Access().getPointerVar_ParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var___PointerAssignment_2_1"


    // $ANTLR start "rule__Expression_list__ExpressionsAssignment_0"
    // InternalPascal.g:10628:1: rule__Expression_list__ExpressionsAssignment_0 : ( ruleexpression ) ;
    public final void rule__Expression_list__ExpressionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10632:1: ( ( ruleexpression ) )
            // InternalPascal.g:10633:2: ( ruleexpression )
            {
            // InternalPascal.g:10633:2: ( ruleexpression )
            // InternalPascal.g:10634:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__ExpressionsAssignment_0"


    // $ANTLR start "rule__Expression_list__ExpressionsAssignment_1_1"
    // InternalPascal.g:10643:1: rule__Expression_list__ExpressionsAssignment_1_1 : ( ruleexpression ) ;
    public final void rule__Expression_list__ExpressionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10647:1: ( ( ruleexpression ) )
            // InternalPascal.g:10648:2: ( ruleexpression )
            {
            // InternalPascal.g:10648:2: ( ruleexpression )
            // InternalPascal.g:10649:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression_list__ExpressionsAssignment_1_1"


    // $ANTLR start "rule__Expression__ExpressionsAssignment_0"
    // InternalPascal.g:10658:1: rule__Expression__ExpressionsAssignment_0 : ( rulesimple_expression ) ;
    public final void rule__Expression__ExpressionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10662:1: ( ( rulesimple_expression ) )
            // InternalPascal.g:10663:2: ( rulesimple_expression )
            {
            // InternalPascal.g:10663:2: ( rulesimple_expression )
            // InternalPascal.g:10664:3: rulesimple_expression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimple_expression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExpressionsAssignment_0"


    // $ANTLR start "rule__Expression__OperatorsAssignment_1_0_0"
    // InternalPascal.g:10673:1: rule__Expression__OperatorsAssignment_1_0_0 : ( RULE_RELATIONAL_OPERATOR ) ;
    public final void rule__Expression__OperatorsAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10677:1: ( ( RULE_RELATIONAL_OPERATOR ) )
            // InternalPascal.g:10678:2: ( RULE_RELATIONAL_OPERATOR )
            {
            // InternalPascal.g:10678:2: ( RULE_RELATIONAL_OPERATOR )
            // InternalPascal.g:10679:3: RULE_RELATIONAL_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOperatorsRELATIONAL_OPERATORTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_RELATIONAL_OPERATOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOperatorsRELATIONAL_OPERATORTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__OperatorsAssignment_1_0_0"


    // $ANTLR start "rule__Expression__OperatorsAssignment_1_0_1"
    // InternalPascal.g:10688:1: rule__Expression__OperatorsAssignment_1_0_1 : ( ( 'in' ) ) ;
    public final void rule__Expression__OperatorsAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10692:1: ( ( ( 'in' ) ) )
            // InternalPascal.g:10693:2: ( ( 'in' ) )
            {
            // InternalPascal.g:10693:2: ( ( 'in' ) )
            // InternalPascal.g:10694:3: ( 'in' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOperatorsInKeyword_1_0_1_0()); 
            }
            // InternalPascal.g:10695:3: ( 'in' )
            // InternalPascal.g:10696:4: 'in'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOperatorsInKeyword_1_0_1_0()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOperatorsInKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOperatorsInKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__OperatorsAssignment_1_0_1"


    // $ANTLR start "rule__Expression__OperatorsAssignment_1_0_2"
    // InternalPascal.g:10707:1: rule__Expression__OperatorsAssignment_1_0_2 : ( ( '=' ) ) ;
    public final void rule__Expression__OperatorsAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10711:1: ( ( ( '=' ) ) )
            // InternalPascal.g:10712:2: ( ( '=' ) )
            {
            // InternalPascal.g:10712:2: ( ( '=' ) )
            // InternalPascal.g:10713:3: ( '=' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOperatorsEqualsSignKeyword_1_0_2_0()); 
            }
            // InternalPascal.g:10714:3: ( '=' )
            // InternalPascal.g:10715:4: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOperatorsEqualsSignKeyword_1_0_2_0()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOperatorsEqualsSignKeyword_1_0_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOperatorsEqualsSignKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__OperatorsAssignment_1_0_2"


    // $ANTLR start "rule__Expression__ExpressionsAssignment_1_1"
    // InternalPascal.g:10726:1: rule__Expression__ExpressionsAssignment_1_1 : ( rulesimple_expression ) ;
    public final void rule__Expression__ExpressionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10730:1: ( ( rulesimple_expression ) )
            // InternalPascal.g:10731:2: ( rulesimple_expression )
            {
            // InternalPascal.g:10731:2: ( rulesimple_expression )
            // InternalPascal.g:10732:3: rulesimple_expression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimple_expression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExpressionsAssignment_1_1"


    // $ANTLR start "rule__Simple_expression__PrefixOperatorAssignment_0"
    // InternalPascal.g:10741:1: rule__Simple_expression__PrefixOperatorAssignment_0 : ( RULE_ADDITION_OPERATOR ) ;
    public final void rule__Simple_expression__PrefixOperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10745:1: ( ( RULE_ADDITION_OPERATOR ) )
            // InternalPascal.g:10746:2: ( RULE_ADDITION_OPERATOR )
            {
            // InternalPascal.g:10746:2: ( RULE_ADDITION_OPERATOR )
            // InternalPascal.g:10747:3: RULE_ADDITION_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getPrefixOperatorADDITION_OPERATORTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ADDITION_OPERATOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getPrefixOperatorADDITION_OPERATORTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__PrefixOperatorAssignment_0"


    // $ANTLR start "rule__Simple_expression__TermsAssignment_1"
    // InternalPascal.g:10756:1: rule__Simple_expression__TermsAssignment_1 : ( ruleterm ) ;
    public final void rule__Simple_expression__TermsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10760:1: ( ( ruleterm ) )
            // InternalPascal.g:10761:2: ( ruleterm )
            {
            // InternalPascal.g:10761:2: ( ruleterm )
            // InternalPascal.g:10762:3: ruleterm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleterm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__TermsAssignment_1"


    // $ANTLR start "rule__Simple_expression__OperatorsAssignment_2_0_0_0"
    // InternalPascal.g:10771:1: rule__Simple_expression__OperatorsAssignment_2_0_0_0 : ( RULE_ADDITION_OPERATOR ) ;
    public final void rule__Simple_expression__OperatorsAssignment_2_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10775:1: ( ( RULE_ADDITION_OPERATOR ) )
            // InternalPascal.g:10776:2: ( RULE_ADDITION_OPERATOR )
            {
            // InternalPascal.g:10776:2: ( RULE_ADDITION_OPERATOR )
            // InternalPascal.g:10777:3: RULE_ADDITION_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getOperatorsADDITION_OPERATORTerminalRuleCall_2_0_0_0_0()); 
            }
            match(input,RULE_ADDITION_OPERATOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getOperatorsADDITION_OPERATORTerminalRuleCall_2_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__OperatorsAssignment_2_0_0_0"


    // $ANTLR start "rule__Simple_expression__OperatorsAssignment_2_0_0_1"
    // InternalPascal.g:10786:1: rule__Simple_expression__OperatorsAssignment_2_0_0_1 : ( ( 'or' ) ) ;
    public final void rule__Simple_expression__OperatorsAssignment_2_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10790:1: ( ( ( 'or' ) ) )
            // InternalPascal.g:10791:2: ( ( 'or' ) )
            {
            // InternalPascal.g:10791:2: ( ( 'or' ) )
            // InternalPascal.g:10792:3: ( 'or' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); 
            }
            // InternalPascal.g:10793:3: ( 'or' )
            // InternalPascal.g:10794:4: 'or'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__OperatorsAssignment_2_0_0_1"


    // $ANTLR start "rule__Simple_expression__TermsAssignment_2_0_1"
    // InternalPascal.g:10805:1: rule__Simple_expression__TermsAssignment_2_0_1 : ( ruleterm ) ;
    public final void rule__Simple_expression__TermsAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10809:1: ( ( ruleterm ) )
            // InternalPascal.g:10810:2: ( ruleterm )
            {
            // InternalPascal.g:10810:2: ( ruleterm )
            // InternalPascal.g:10811:3: ruleterm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleterm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__TermsAssignment_2_0_1"


    // $ANTLR start "rule__Simple_expression__TermsAssignment_2_1"
    // InternalPascal.g:10820:1: rule__Simple_expression__TermsAssignment_2_1 : ( ruleunsigned_number ) ;
    public final void rule__Simple_expression__TermsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10824:1: ( ( ruleunsigned_number ) )
            // InternalPascal.g:10825:2: ( ruleunsigned_number )
            {
            // InternalPascal.g:10825:2: ( ruleunsigned_number )
            // InternalPascal.g:10826:3: ruleunsigned_number
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_expressionAccess().getTermsUnsigned_numberParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleunsigned_number();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_expressionAccess().getTermsUnsigned_numberParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_expression__TermsAssignment_2_1"


    // $ANTLR start "rule__Term__FactorsAssignment_0"
    // InternalPascal.g:10835:1: rule__Term__FactorsAssignment_0 : ( rulefactor ) ;
    public final void rule__Term__FactorsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10839:1: ( ( rulefactor ) )
            // InternalPascal.g:10840:2: ( rulefactor )
            {
            // InternalPascal.g:10840:2: ( rulefactor )
            // InternalPascal.g:10841:3: rulefactor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__FactorsAssignment_0"


    // $ANTLR start "rule__Term__OperatorsAssignment_1_0_0"
    // InternalPascal.g:10850:1: rule__Term__OperatorsAssignment_1_0_0 : ( RULE_MULTIPLICATION_OPERATOR ) ;
    public final void rule__Term__OperatorsAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10854:1: ( ( RULE_MULTIPLICATION_OPERATOR ) )
            // InternalPascal.g:10855:2: ( RULE_MULTIPLICATION_OPERATOR )
            {
            // InternalPascal.g:10855:2: ( RULE_MULTIPLICATION_OPERATOR )
            // InternalPascal.g:10856:3: RULE_MULTIPLICATION_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsMULTIPLICATION_OPERATORTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_MULTIPLICATION_OPERATOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsMULTIPLICATION_OPERATORTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__OperatorsAssignment_1_0_0"


    // $ANTLR start "rule__Term__OperatorsAssignment_1_0_1"
    // InternalPascal.g:10865:1: rule__Term__OperatorsAssignment_1_0_1 : ( ( 'div' ) ) ;
    public final void rule__Term__OperatorsAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10869:1: ( ( ( 'div' ) ) )
            // InternalPascal.g:10870:2: ( ( 'div' ) )
            {
            // InternalPascal.g:10870:2: ( ( 'div' ) )
            // InternalPascal.g:10871:3: ( 'div' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsDivKeyword_1_0_1_0()); 
            }
            // InternalPascal.g:10872:3: ( 'div' )
            // InternalPascal.g:10873:4: 'div'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsDivKeyword_1_0_1_0()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsDivKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsDivKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__OperatorsAssignment_1_0_1"


    // $ANTLR start "rule__Term__OperatorsAssignment_1_0_2"
    // InternalPascal.g:10884:1: rule__Term__OperatorsAssignment_1_0_2 : ( ( 'mod' ) ) ;
    public final void rule__Term__OperatorsAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10888:1: ( ( ( 'mod' ) ) )
            // InternalPascal.g:10889:2: ( ( 'mod' ) )
            {
            // InternalPascal.g:10889:2: ( ( 'mod' ) )
            // InternalPascal.g:10890:3: ( 'mod' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsModKeyword_1_0_2_0()); 
            }
            // InternalPascal.g:10891:3: ( 'mod' )
            // InternalPascal.g:10892:4: 'mod'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsModKeyword_1_0_2_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsModKeyword_1_0_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsModKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__OperatorsAssignment_1_0_2"


    // $ANTLR start "rule__Term__OperatorsAssignment_1_0_3"
    // InternalPascal.g:10903:1: rule__Term__OperatorsAssignment_1_0_3 : ( ( 'and' ) ) ;
    public final void rule__Term__OperatorsAssignment_1_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10907:1: ( ( ( 'and' ) ) )
            // InternalPascal.g:10908:2: ( ( 'and' ) )
            {
            // InternalPascal.g:10908:2: ( ( 'and' ) )
            // InternalPascal.g:10909:3: ( 'and' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_3_0()); 
            }
            // InternalPascal.g:10910:3: ( 'and' )
            // InternalPascal.g:10911:4: 'and'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_3_0()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_3_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__OperatorsAssignment_1_0_3"


    // $ANTLR start "rule__Term__FactorsAssignment_1_1"
    // InternalPascal.g:10922:1: rule__Term__FactorsAssignment_1_1 : ( rulefactor ) ;
    public final void rule__Term__FactorsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10926:1: ( ( rulefactor ) )
            // InternalPascal.g:10927:2: ( rulefactor )
            {
            // InternalPascal.g:10927:2: ( rulefactor )
            // InternalPascal.g:10928:3: rulefactor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Term__FactorsAssignment_1_1"


    // $ANTLR start "rule__Factor__VariableAssignment_0"
    // InternalPascal.g:10937:1: rule__Factor__VariableAssignment_0 : ( rulevariable ) ;
    public final void rule__Factor__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10941:1: ( ( rulevariable ) )
            // InternalPascal.g:10942:2: ( rulevariable )
            {
            // InternalPascal.g:10942:2: ( rulevariable )
            // InternalPascal.g:10943:3: rulevariable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__VariableAssignment_0"


    // $ANTLR start "rule__Factor__NumberAssignment_1"
    // InternalPascal.g:10952:1: rule__Factor__NumberAssignment_1 : ( rulenumber ) ;
    public final void rule__Factor__NumberAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10956:1: ( ( rulenumber ) )
            // InternalPascal.g:10957:2: ( rulenumber )
            {
            // InternalPascal.g:10957:2: ( rulenumber )
            // InternalPascal.g:10958:3: rulenumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getNumberNumberParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulenumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getNumberNumberParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__NumberAssignment_1"


    // $ANTLR start "rule__Factor__StringAssignment_2"
    // InternalPascal.g:10967:1: rule__Factor__StringAssignment_2 : ( RULE_STRING ) ;
    public final void rule__Factor__StringAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10971:1: ( ( RULE_STRING ) )
            // InternalPascal.g:10972:2: ( RULE_STRING )
            {
            // InternalPascal.g:10972:2: ( RULE_STRING )
            // InternalPascal.g:10973:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getStringSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getStringSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__StringAssignment_2"


    // $ANTLR start "rule__Factor__SetAssignment_3"
    // InternalPascal.g:10982:1: rule__Factor__SetAssignment_3 : ( ruleset ) ;
    public final void rule__Factor__SetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:10986:1: ( ( ruleset ) )
            // InternalPascal.g:10987:2: ( ruleset )
            {
            // InternalPascal.g:10987:2: ( ruleset )
            // InternalPascal.g:10988:3: ruleset
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getSetSetParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getSetSetParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__SetAssignment_3"


    // $ANTLR start "rule__Factor__NilAssignment_4"
    // InternalPascal.g:10997:1: rule__Factor__NilAssignment_4 : ( ( 'nil' ) ) ;
    public final void rule__Factor__NilAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11001:1: ( ( ( 'nil' ) ) )
            // InternalPascal.g:11002:2: ( ( 'nil' ) )
            {
            // InternalPascal.g:11002:2: ( ( 'nil' ) )
            // InternalPascal.g:11003:3: ( 'nil' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getNilNilKeyword_4_0()); 
            }
            // InternalPascal.g:11004:3: ( 'nil' )
            // InternalPascal.g:11005:4: 'nil'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getNilNilKeyword_4_0()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getNilNilKeyword_4_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getNilNilKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__NilAssignment_4"


    // $ANTLR start "rule__Factor__BooleanAssignment_5"
    // InternalPascal.g:11016:1: rule__Factor__BooleanAssignment_5 : ( ( 'true' ) ) ;
    public final void rule__Factor__BooleanAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11020:1: ( ( ( 'true' ) ) )
            // InternalPascal.g:11021:2: ( ( 'true' ) )
            {
            // InternalPascal.g:11021:2: ( ( 'true' ) )
            // InternalPascal.g:11022:3: ( 'true' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getBooleanTrueKeyword_5_0()); 
            }
            // InternalPascal.g:11023:3: ( 'true' )
            // InternalPascal.g:11024:4: 'true'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getBooleanTrueKeyword_5_0()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getBooleanTrueKeyword_5_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getBooleanTrueKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__BooleanAssignment_5"


    // $ANTLR start "rule__Factor__BooleanAssignment_6"
    // InternalPascal.g:11035:1: rule__Factor__BooleanAssignment_6 : ( ( 'false' ) ) ;
    public final void rule__Factor__BooleanAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11039:1: ( ( ( 'false' ) ) )
            // InternalPascal.g:11040:2: ( ( 'false' ) )
            {
            // InternalPascal.g:11040:2: ( ( 'false' ) )
            // InternalPascal.g:11041:3: ( 'false' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getBooleanFalseKeyword_6_0()); 
            }
            // InternalPascal.g:11042:3: ( 'false' )
            // InternalPascal.g:11043:4: 'false'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getBooleanFalseKeyword_6_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getBooleanFalseKeyword_6_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getBooleanFalseKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__BooleanAssignment_6"


    // $ANTLR start "rule__Factor__FunctionAssignment_7"
    // InternalPascal.g:11054:1: rule__Factor__FunctionAssignment_7 : ( rulefunction_designator ) ;
    public final void rule__Factor__FunctionAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11058:1: ( ( rulefunction_designator ) )
            // InternalPascal.g:11059:2: ( rulefunction_designator )
            {
            // InternalPascal.g:11059:2: ( rulefunction_designator )
            // InternalPascal.g:11060:3: rulefunction_designator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getFunctionFunction_designatorParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction_designator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getFunctionFunction_designatorParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__FunctionAssignment_7"


    // $ANTLR start "rule__Factor__ExpressionAssignment_8_1"
    // InternalPascal.g:11069:1: rule__Factor__ExpressionAssignment_8_1 : ( ruleexpression ) ;
    public final void rule__Factor__ExpressionAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11073:1: ( ( ruleexpression ) )
            // InternalPascal.g:11074:2: ( ruleexpression )
            {
            // InternalPascal.g:11074:2: ( ruleexpression )
            // InternalPascal.g:11075:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__ExpressionAssignment_8_1"


    // $ANTLR start "rule__Factor__NotAssignment_9_1"
    // InternalPascal.g:11084:1: rule__Factor__NotAssignment_9_1 : ( rulefactor ) ;
    public final void rule__Factor__NotAssignment_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11088:1: ( ( rulefactor ) )
            // InternalPascal.g:11089:2: ( rulefactor )
            {
            // InternalPascal.g:11089:2: ( rulefactor )
            // InternalPascal.g:11090:3: rulefactor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFactorAccess().getNotFactorParserRuleCall_9_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFactorAccess().getNotFactorParserRuleCall_9_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Factor__NotAssignment_9_1"


    // $ANTLR start "rule__Number__NumberAssignment"
    // InternalPascal.g:11099:1: rule__Number__NumberAssignment : ( ruleany_number ) ;
    public final void rule__Number__NumberAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11103:1: ( ( ruleany_number ) )
            // InternalPascal.g:11104:2: ( ruleany_number )
            {
            // InternalPascal.g:11104:2: ( ruleany_number )
            // InternalPascal.g:11105:3: ruleany_number
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getNumberAny_numberParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleany_number();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getNumberAny_numberParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__NumberAssignment"


    // $ANTLR start "rule__Unsigned_number__IntegerAssignment_0"
    // InternalPascal.g:11114:1: rule__Unsigned_number__IntegerAssignment_0 : ( RULE_INTEGER_NUMBER ) ;
    public final void rule__Unsigned_number__IntegerAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11118:1: ( ( RULE_INTEGER_NUMBER ) )
            // InternalPascal.g:11119:2: ( RULE_INTEGER_NUMBER )
            {
            // InternalPascal.g:11119:2: ( RULE_INTEGER_NUMBER )
            // InternalPascal.g:11120:3: RULE_INTEGER_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsigned_numberAccess().getIntegerINTEGER_NUMBERTerminalRuleCall_0_0()); 
            }
            match(input,RULE_INTEGER_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsigned_numberAccess().getIntegerINTEGER_NUMBERTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unsigned_number__IntegerAssignment_0"


    // $ANTLR start "rule__Unsigned_number__RealAssignment_1"
    // InternalPascal.g:11129:1: rule__Unsigned_number__RealAssignment_1 : ( RULE_REAL_NUMBER ) ;
    public final void rule__Unsigned_number__RealAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11133:1: ( ( RULE_REAL_NUMBER ) )
            // InternalPascal.g:11134:2: ( RULE_REAL_NUMBER )
            {
            // InternalPascal.g:11134:2: ( RULE_REAL_NUMBER )
            // InternalPascal.g:11135:3: RULE_REAL_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsigned_numberAccess().getRealREAL_NUMBERTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REAL_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsigned_numberAccess().getRealREAL_NUMBERTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unsigned_number__RealAssignment_1"


    // $ANTLR start "rule__Signed_number__IntegerAssignment_0"
    // InternalPascal.g:11144:1: rule__Signed_number__IntegerAssignment_0 : ( RULE_SIGNED_INTEGER_NUMBER ) ;
    public final void rule__Signed_number__IntegerAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11148:1: ( ( RULE_SIGNED_INTEGER_NUMBER ) )
            // InternalPascal.g:11149:2: ( RULE_SIGNED_INTEGER_NUMBER )
            {
            // InternalPascal.g:11149:2: ( RULE_SIGNED_INTEGER_NUMBER )
            // InternalPascal.g:11150:3: RULE_SIGNED_INTEGER_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSigned_numberAccess().getIntegerSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); 
            }
            match(input,RULE_SIGNED_INTEGER_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSigned_numberAccess().getIntegerSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signed_number__IntegerAssignment_0"


    // $ANTLR start "rule__Signed_number__RealAssignment_1"
    // InternalPascal.g:11159:1: rule__Signed_number__RealAssignment_1 : ( RULE_SIGNED_REAL_NUMBER ) ;
    public final void rule__Signed_number__RealAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11163:1: ( ( RULE_SIGNED_REAL_NUMBER ) )
            // InternalPascal.g:11164:2: ( RULE_SIGNED_REAL_NUMBER )
            {
            // InternalPascal.g:11164:2: ( RULE_SIGNED_REAL_NUMBER )
            // InternalPascal.g:11165:3: RULE_SIGNED_REAL_NUMBER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSigned_numberAccess().getRealSIGNED_REAL_NUMBERTerminalRuleCall_1_0()); 
            }
            match(input,RULE_SIGNED_REAL_NUMBER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSigned_numberAccess().getRealSIGNED_REAL_NUMBERTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signed_number__RealAssignment_1"


    // $ANTLR start "rule__Set__BracketsAssignment_0"
    // InternalPascal.g:11174:1: rule__Set__BracketsAssignment_0 : ( ( '[' ) ) ;
    public final void rule__Set__BracketsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11178:1: ( ( ( '[' ) ) )
            // InternalPascal.g:11179:2: ( ( '[' ) )
            {
            // InternalPascal.g:11179:2: ( ( '[' ) )
            // InternalPascal.g:11180:3: ( '[' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getBracketsLeftSquareBracketKeyword_0_0()); 
            }
            // InternalPascal.g:11181:3: ( '[' )
            // InternalPascal.g:11182:4: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getBracketsLeftSquareBracketKeyword_0_0()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getBracketsLeftSquareBracketKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getBracketsLeftSquareBracketKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__BracketsAssignment_0"


    // $ANTLR start "rule__Set__ExpressionsAssignment_1"
    // InternalPascal.g:11193:1: rule__Set__ExpressionsAssignment_1 : ( ruleexpression_list ) ;
    public final void rule__Set__ExpressionsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11197:1: ( ( ruleexpression_list ) )
            // InternalPascal.g:11198:2: ( ruleexpression_list )
            {
            // InternalPascal.g:11198:2: ( ruleexpression_list )
            // InternalPascal.g:11199:3: ruleexpression_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getExpressionsExpression_listParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getExpressionsExpression_listParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__ExpressionsAssignment_1"


    // $ANTLR start "rule__Set__BracketsAssignment_2"
    // InternalPascal.g:11208:1: rule__Set__BracketsAssignment_2 : ( ( ']' ) ) ;
    public final void rule__Set__BracketsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11212:1: ( ( ( ']' ) ) )
            // InternalPascal.g:11213:2: ( ( ']' ) )
            {
            // InternalPascal.g:11213:2: ( ( ']' ) )
            // InternalPascal.g:11214:3: ( ']' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getBracketsRightSquareBracketKeyword_2_0()); 
            }
            // InternalPascal.g:11215:3: ( ']' )
            // InternalPascal.g:11216:4: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetAccess().getBracketsRightSquareBracketKeyword_2_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getBracketsRightSquareBracketKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetAccess().getBracketsRightSquareBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set__BracketsAssignment_2"


    // $ANTLR start "rule__Function_designator__NameAssignment_0"
    // InternalPascal.g:11227:1: rule__Function_designator__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Function_designator__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11231:1: ( ( RULE_ID ) )
            // InternalPascal.g:11232:2: ( RULE_ID )
            {
            // InternalPascal.g:11232:2: ( RULE_ID )
            // InternalPascal.g:11233:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__NameAssignment_0"


    // $ANTLR start "rule__Function_designator__ExpressionsAssignment_2"
    // InternalPascal.g:11242:1: rule__Function_designator__ExpressionsAssignment_2 : ( ruleexpression_list ) ;
    public final void rule__Function_designator__ExpressionsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11246:1: ( ( ruleexpression_list ) )
            // InternalPascal.g:11247:2: ( ruleexpression_list )
            {
            // InternalPascal.g:11247:2: ( ruleexpression_list )
            // InternalPascal.g:11248:3: ruleexpression_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_designatorAccess().getExpressionsExpression_listParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_designatorAccess().getExpressionsExpression_listParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_designator__ExpressionsAssignment_2"


    // $ANTLR start "rule__Structured_statement__CompoundAssignment_0"
    // InternalPascal.g:11257:1: rule__Structured_statement__CompoundAssignment_0 : ( rulecompound_statement ) ;
    public final void rule__Structured_statement__CompoundAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11261:1: ( ( rulecompound_statement ) )
            // InternalPascal.g:11262:2: ( rulecompound_statement )
            {
            // InternalPascal.g:11262:2: ( rulecompound_statement )
            // InternalPascal.g:11263:3: rulecompound_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_statementAccess().getCompoundCompound_statementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecompound_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_statementAccess().getCompoundCompound_statementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_statement__CompoundAssignment_0"


    // $ANTLR start "rule__Structured_statement__RepetitiveAssignment_1"
    // InternalPascal.g:11272:1: rule__Structured_statement__RepetitiveAssignment_1 : ( rulerepetitive_statement ) ;
    public final void rule__Structured_statement__RepetitiveAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11276:1: ( ( rulerepetitive_statement ) )
            // InternalPascal.g:11277:2: ( rulerepetitive_statement )
            {
            // InternalPascal.g:11277:2: ( rulerepetitive_statement )
            // InternalPascal.g:11278:3: rulerepetitive_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_statementAccess().getRepetitiveRepetitive_statementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerepetitive_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_statementAccess().getRepetitiveRepetitive_statementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_statement__RepetitiveAssignment_1"


    // $ANTLR start "rule__Structured_statement__ConditionalAssignment_2"
    // InternalPascal.g:11287:1: rule__Structured_statement__ConditionalAssignment_2 : ( ruleconditional_statement ) ;
    public final void rule__Structured_statement__ConditionalAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11291:1: ( ( ruleconditional_statement ) )
            // InternalPascal.g:11292:2: ( ruleconditional_statement )
            {
            // InternalPascal.g:11292:2: ( ruleconditional_statement )
            // InternalPascal.g:11293:3: ruleconditional_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_statementAccess().getConditionalConditional_statementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconditional_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_statementAccess().getConditionalConditional_statementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_statement__ConditionalAssignment_2"


    // $ANTLR start "rule__Structured_statement__WithStmtAssignment_3"
    // InternalPascal.g:11302:1: rule__Structured_statement__WithStmtAssignment_3 : ( rulewith_statement ) ;
    public final void rule__Structured_statement__WithStmtAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11306:1: ( ( rulewith_statement ) )
            // InternalPascal.g:11307:2: ( rulewith_statement )
            {
            // InternalPascal.g:11307:2: ( rulewith_statement )
            // InternalPascal.g:11308:3: rulewith_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_statementAccess().getWithStmtWith_statementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulewith_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_statementAccess().getWithStmtWith_statementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_statement__WithStmtAssignment_3"


    // $ANTLR start "rule__Compound_statement__SequenceAssignment_1"
    // InternalPascal.g:11317:1: rule__Compound_statement__SequenceAssignment_1 : ( rulestatement_sequence ) ;
    public final void rule__Compound_statement__SequenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11321:1: ( ( rulestatement_sequence ) )
            // InternalPascal.g:11322:2: ( rulestatement_sequence )
            {
            // InternalPascal.g:11322:2: ( rulestatement_sequence )
            // InternalPascal.g:11323:3: rulestatement_sequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompound_statementAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement_sequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompound_statementAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Compound_statement__SequenceAssignment_1"


    // $ANTLR start "rule__Repetitive_statement__WhileStmtAssignment_0"
    // InternalPascal.g:11332:1: rule__Repetitive_statement__WhileStmtAssignment_0 : ( rulewhile_statement ) ;
    public final void rule__Repetitive_statement__WhileStmtAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11336:1: ( ( rulewhile_statement ) )
            // InternalPascal.g:11337:2: ( rulewhile_statement )
            {
            // InternalPascal.g:11337:2: ( rulewhile_statement )
            // InternalPascal.g:11338:3: rulewhile_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepetitive_statementAccess().getWhileStmtWhile_statementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulewhile_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepetitive_statementAccess().getWhileStmtWhile_statementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repetitive_statement__WhileStmtAssignment_0"


    // $ANTLR start "rule__Repetitive_statement__RepeatStmtAssignment_1"
    // InternalPascal.g:11347:1: rule__Repetitive_statement__RepeatStmtAssignment_1 : ( rulerepeat_statement ) ;
    public final void rule__Repetitive_statement__RepeatStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11351:1: ( ( rulerepeat_statement ) )
            // InternalPascal.g:11352:2: ( rulerepeat_statement )
            {
            // InternalPascal.g:11352:2: ( rulerepeat_statement )
            // InternalPascal.g:11353:3: rulerepeat_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepetitive_statementAccess().getRepeatStmtRepeat_statementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerepeat_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepetitive_statementAccess().getRepeatStmtRepeat_statementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repetitive_statement__RepeatStmtAssignment_1"


    // $ANTLR start "rule__Repetitive_statement__ForStmtAssignment_2"
    // InternalPascal.g:11362:1: rule__Repetitive_statement__ForStmtAssignment_2 : ( rulefor_statement ) ;
    public final void rule__Repetitive_statement__ForStmtAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11366:1: ( ( rulefor_statement ) )
            // InternalPascal.g:11367:2: ( rulefor_statement )
            {
            // InternalPascal.g:11367:2: ( rulefor_statement )
            // InternalPascal.g:11368:3: rulefor_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepetitive_statementAccess().getForStmtFor_statementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefor_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepetitive_statementAccess().getForStmtFor_statementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repetitive_statement__ForStmtAssignment_2"


    // $ANTLR start "rule__While_statement__ExpressionAssignment_1"
    // InternalPascal.g:11377:1: rule__While_statement__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__While_statement__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11381:1: ( ( ruleexpression ) )
            // InternalPascal.g:11382:2: ( ruleexpression )
            {
            // InternalPascal.g:11382:2: ( ruleexpression )
            // InternalPascal.g:11383:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__ExpressionAssignment_1"


    // $ANTLR start "rule__While_statement__StatementAssignment_3"
    // InternalPascal.g:11392:1: rule__While_statement__StatementAssignment_3 : ( rulestatement ) ;
    public final void rule__While_statement__StatementAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11396:1: ( ( rulestatement ) )
            // InternalPascal.g:11397:2: ( rulestatement )
            {
            // InternalPascal.g:11397:2: ( rulestatement )
            // InternalPascal.g:11398:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhile_statementAccess().getStatementStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhile_statementAccess().getStatementStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__While_statement__StatementAssignment_3"


    // $ANTLR start "rule__Repeat_statement__SequenceAssignment_1"
    // InternalPascal.g:11407:1: rule__Repeat_statement__SequenceAssignment_1 : ( rulestatement_sequence ) ;
    public final void rule__Repeat_statement__SequenceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11411:1: ( ( rulestatement_sequence ) )
            // InternalPascal.g:11412:2: ( rulestatement_sequence )
            {
            // InternalPascal.g:11412:2: ( rulestatement_sequence )
            // InternalPascal.g:11413:3: rulestatement_sequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement_sequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__SequenceAssignment_1"


    // $ANTLR start "rule__Repeat_statement__ExpressionAssignment_3"
    // InternalPascal.g:11422:1: rule__Repeat_statement__ExpressionAssignment_3 : ( ruleexpression ) ;
    public final void rule__Repeat_statement__ExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11426:1: ( ( ruleexpression ) )
            // InternalPascal.g:11427:2: ( ruleexpression )
            {
            // InternalPascal.g:11427:2: ( ruleexpression )
            // InternalPascal.g:11428:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRepeat_statementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRepeat_statementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Repeat_statement__ExpressionAssignment_3"


    // $ANTLR start "rule__For_statement__AssignmentAssignment_1"
    // InternalPascal.g:11437:1: rule__For_statement__AssignmentAssignment_1 : ( ruleassignment_statement ) ;
    public final void rule__For_statement__AssignmentAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11441:1: ( ( ruleassignment_statement ) )
            // InternalPascal.g:11442:2: ( ruleassignment_statement )
            {
            // InternalPascal.g:11442:2: ( ruleassignment_statement )
            // InternalPascal.g:11443:3: ruleassignment_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getAssignmentAssignment_statementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignment_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getAssignmentAssignment_statementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__AssignmentAssignment_1"


    // $ANTLR start "rule__For_statement__ExpressionAssignment_3"
    // InternalPascal.g:11452:1: rule__For_statement__ExpressionAssignment_3 : ( ruleexpression ) ;
    public final void rule__For_statement__ExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11456:1: ( ( ruleexpression ) )
            // InternalPascal.g:11457:2: ( ruleexpression )
            {
            // InternalPascal.g:11457:2: ( ruleexpression )
            // InternalPascal.g:11458:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__ExpressionAssignment_3"


    // $ANTLR start "rule__For_statement__StatementAssignment_5"
    // InternalPascal.g:11467:1: rule__For_statement__StatementAssignment_5 : ( rulestatement ) ;
    public final void rule__For_statement__StatementAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11471:1: ( ( rulestatement ) )
            // InternalPascal.g:11472:2: ( rulestatement )
            {
            // InternalPascal.g:11472:2: ( rulestatement )
            // InternalPascal.g:11473:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFor_statementAccess().getStatementStatementParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFor_statementAccess().getStatementStatementParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__For_statement__StatementAssignment_5"


    // $ANTLR start "rule__Conditional_statement__IfStmtAssignment_0"
    // InternalPascal.g:11482:1: rule__Conditional_statement__IfStmtAssignment_0 : ( ruleif_statement ) ;
    public final void rule__Conditional_statement__IfStmtAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11486:1: ( ( ruleif_statement ) )
            // InternalPascal.g:11487:2: ( ruleif_statement )
            {
            // InternalPascal.g:11487:2: ( ruleif_statement )
            // InternalPascal.g:11488:3: ruleif_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditional_statementAccess().getIfStmtIf_statementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleif_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditional_statementAccess().getIfStmtIf_statementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conditional_statement__IfStmtAssignment_0"


    // $ANTLR start "rule__Conditional_statement__CaseStmtAssignment_1"
    // InternalPascal.g:11497:1: rule__Conditional_statement__CaseStmtAssignment_1 : ( rulecase_statement ) ;
    public final void rule__Conditional_statement__CaseStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11501:1: ( ( rulecase_statement ) )
            // InternalPascal.g:11502:2: ( rulecase_statement )
            {
            // InternalPascal.g:11502:2: ( rulecase_statement )
            // InternalPascal.g:11503:3: rulecase_statement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditional_statementAccess().getCaseStmtCase_statementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecase_statement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditional_statementAccess().getCaseStmtCase_statementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conditional_statement__CaseStmtAssignment_1"


    // $ANTLR start "rule__If_statement__ExpressionAssignment_1"
    // InternalPascal.g:11512:1: rule__If_statement__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__If_statement__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11516:1: ( ( ruleexpression ) )
            // InternalPascal.g:11517:2: ( ruleexpression )
            {
            // InternalPascal.g:11517:2: ( ruleexpression )
            // InternalPascal.g:11518:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__ExpressionAssignment_1"


    // $ANTLR start "rule__If_statement__IfStatementAssignment_3"
    // InternalPascal.g:11527:1: rule__If_statement__IfStatementAssignment_3 : ( rulestatement ) ;
    public final void rule__If_statement__IfStatementAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11531:1: ( ( rulestatement ) )
            // InternalPascal.g:11532:2: ( rulestatement )
            {
            // InternalPascal.g:11532:2: ( rulestatement )
            // InternalPascal.g:11533:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getIfStatementStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getIfStatementStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__IfStatementAssignment_3"


    // $ANTLR start "rule__If_statement__ElseStatementAssignment_4_1"
    // InternalPascal.g:11542:1: rule__If_statement__ElseStatementAssignment_4_1 : ( rulestatement ) ;
    public final void rule__If_statement__ElseStatementAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11546:1: ( ( rulestatement ) )
            // InternalPascal.g:11547:2: ( rulestatement )
            {
            // InternalPascal.g:11547:2: ( rulestatement )
            // InternalPascal.g:11548:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIf_statementAccess().getElseStatementStatementParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIf_statementAccess().getElseStatementStatementParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__If_statement__ElseStatementAssignment_4_1"


    // $ANTLR start "rule__Case_statement__ExpressionAssignment_1"
    // InternalPascal.g:11557:1: rule__Case_statement__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__Case_statement__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11561:1: ( ( ruleexpression ) )
            // InternalPascal.g:11562:2: ( ruleexpression )
            {
            // InternalPascal.g:11562:2: ( ruleexpression )
            // InternalPascal.g:11563:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__ExpressionAssignment_1"


    // $ANTLR start "rule__Case_statement__CasesAssignment_3"
    // InternalPascal.g:11572:1: rule__Case_statement__CasesAssignment_3 : ( rulecase_limb ) ;
    public final void rule__Case_statement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11576:1: ( ( rulecase_limb ) )
            // InternalPascal.g:11577:2: ( rulecase_limb )
            {
            // InternalPascal.g:11577:2: ( rulecase_limb )
            // InternalPascal.g:11578:3: rulecase_limb
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getCasesCase_limbParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecase_limb();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getCasesCase_limbParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__CasesAssignment_3"


    // $ANTLR start "rule__Case_statement__CasesAssignment_4_1"
    // InternalPascal.g:11587:1: rule__Case_statement__CasesAssignment_4_1 : ( rulecase_limb ) ;
    public final void rule__Case_statement__CasesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11591:1: ( ( rulecase_limb ) )
            // InternalPascal.g:11592:2: ( rulecase_limb )
            {
            // InternalPascal.g:11592:2: ( rulecase_limb )
            // InternalPascal.g:11593:3: rulecase_limb
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_statementAccess().getCasesCase_limbParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecase_limb();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_statementAccess().getCasesCase_limbParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_statement__CasesAssignment_4_1"


    // $ANTLR start "rule__Case_limb__CasesAssignment_0"
    // InternalPascal.g:11602:1: rule__Case_limb__CasesAssignment_0 : ( rulecase_label_list ) ;
    public final void rule__Case_limb__CasesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11606:1: ( ( rulecase_label_list ) )
            // InternalPascal.g:11607:2: ( rulecase_label_list )
            {
            // InternalPascal.g:11607:2: ( rulecase_label_list )
            // InternalPascal.g:11608:3: rulecase_label_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbAccess().getCasesCase_label_listParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecase_label_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbAccess().getCasesCase_label_listParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__CasesAssignment_0"


    // $ANTLR start "rule__Case_limb__StatementAssignment_2"
    // InternalPascal.g:11617:1: rule__Case_limb__StatementAssignment_2 : ( rulestatement ) ;
    public final void rule__Case_limb__StatementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11621:1: ( ( rulestatement ) )
            // InternalPascal.g:11622:2: ( rulestatement )
            {
            // InternalPascal.g:11622:2: ( rulestatement )
            // InternalPascal.g:11623:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_limbAccess().getStatementStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_limbAccess().getStatementStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_limb__StatementAssignment_2"


    // $ANTLR start "rule__Case_label_list__ConstantsAssignment_0"
    // InternalPascal.g:11632:1: rule__Case_label_list__ConstantsAssignment_0 : ( ruleconstant ) ;
    public final void rule__Case_label_list__ConstantsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11636:1: ( ( ruleconstant ) )
            // InternalPascal.g:11637:2: ( ruleconstant )
            {
            // InternalPascal.g:11637:2: ( ruleconstant )
            // InternalPascal.g:11638:3: ruleconstant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getConstantsConstantParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getConstantsConstantParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__ConstantsAssignment_0"


    // $ANTLR start "rule__Case_label_list__ConstantsAssignment_1_1"
    // InternalPascal.g:11647:1: rule__Case_label_list__ConstantsAssignment_1_1 : ( ruleconstant ) ;
    public final void rule__Case_label_list__ConstantsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11651:1: ( ( ruleconstant ) )
            // InternalPascal.g:11652:2: ( ruleconstant )
            {
            // InternalPascal.g:11652:2: ( ruleconstant )
            // InternalPascal.g:11653:3: ruleconstant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCase_label_listAccess().getConstantsConstantParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCase_label_listAccess().getConstantsConstantParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Case_label_list__ConstantsAssignment_1_1"


    // $ANTLR start "rule__Constant__OpteratorAssignment_0_0"
    // InternalPascal.g:11662:1: rule__Constant__OpteratorAssignment_0_0 : ( RULE_ADDITION_OPERATOR ) ;
    public final void rule__Constant__OpteratorAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11666:1: ( ( RULE_ADDITION_OPERATOR ) )
            // InternalPascal.g:11667:2: ( RULE_ADDITION_OPERATOR )
            {
            // InternalPascal.g:11667:2: ( RULE_ADDITION_OPERATOR )
            // InternalPascal.g:11668:3: RULE_ADDITION_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getOpteratorADDITION_OPERATORTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ADDITION_OPERATOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getOpteratorADDITION_OPERATORTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__OpteratorAssignment_0_0"


    // $ANTLR start "rule__Constant__NameAssignment_0_1_0"
    // InternalPascal.g:11677:1: rule__Constant__NameAssignment_0_1_0 : ( RULE_ID ) ;
    public final void rule__Constant__NameAssignment_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11681:1: ( ( RULE_ID ) )
            // InternalPascal.g:11682:2: ( RULE_ID )
            {
            // InternalPascal.g:11682:2: ( RULE_ID )
            // InternalPascal.g:11683:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_1_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__NameAssignment_0_1_0"


    // $ANTLR start "rule__Constant__NumberAssignment_0_1_1"
    // InternalPascal.g:11692:1: rule__Constant__NumberAssignment_0_1_1 : ( rulenumber ) ;
    public final void rule__Constant__NumberAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11696:1: ( ( rulenumber ) )
            // InternalPascal.g:11697:2: ( rulenumber )
            {
            // InternalPascal.g:11697:2: ( rulenumber )
            // InternalPascal.g:11698:3: rulenumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getNumberNumberParserRuleCall_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulenumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getNumberNumberParserRuleCall_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__NumberAssignment_0_1_1"


    // $ANTLR start "rule__Constant__StringAssignment_1"
    // InternalPascal.g:11707:1: rule__Constant__StringAssignment_1 : ( RULE_STRING ) ;
    public final void rule__Constant__StringAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11711:1: ( ( RULE_STRING ) )
            // InternalPascal.g:11712:2: ( RULE_STRING )
            {
            // InternalPascal.g:11712:2: ( RULE_STRING )
            // InternalPascal.g:11713:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__StringAssignment_1"


    // $ANTLR start "rule__Constant__BoolLiteralAssignment_2"
    // InternalPascal.g:11722:1: rule__Constant__BoolLiteralAssignment_2 : ( ( 'true' ) ) ;
    public final void rule__Constant__BoolLiteralAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11726:1: ( ( ( 'true' ) ) )
            // InternalPascal.g:11727:2: ( ( 'true' ) )
            {
            // InternalPascal.g:11727:2: ( ( 'true' ) )
            // InternalPascal.g:11728:3: ( 'true' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); 
            }
            // InternalPascal.g:11729:3: ( 'true' )
            // InternalPascal.g:11730:4: 'true'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__BoolLiteralAssignment_2"


    // $ANTLR start "rule__Constant__BoolLiteralAssignment_3"
    // InternalPascal.g:11741:1: rule__Constant__BoolLiteralAssignment_3 : ( ( 'false' ) ) ;
    public final void rule__Constant__BoolLiteralAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11745:1: ( ( ( 'false' ) ) )
            // InternalPascal.g:11746:2: ( ( 'false' ) )
            {
            // InternalPascal.g:11746:2: ( ( 'false' ) )
            // InternalPascal.g:11747:3: ( 'false' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); 
            }
            // InternalPascal.g:11748:3: ( 'false' )
            // InternalPascal.g:11749:4: 'false'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__BoolLiteralAssignment_3"


    // $ANTLR start "rule__Constant__NilAssignment_4"
    // InternalPascal.g:11760:1: rule__Constant__NilAssignment_4 : ( ( 'nil' ) ) ;
    public final void rule__Constant__NilAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11764:1: ( ( ( 'nil' ) ) )
            // InternalPascal.g:11765:2: ( ( 'nil' ) )
            {
            // InternalPascal.g:11765:2: ( ( 'nil' ) )
            // InternalPascal.g:11766:3: ( 'nil' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getNilNilKeyword_4_0()); 
            }
            // InternalPascal.g:11767:3: ( 'nil' )
            // InternalPascal.g:11768:4: 'nil'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstantAccess().getNilNilKeyword_4_0()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getNilNilKeyword_4_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstantAccess().getNilNilKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant__NilAssignment_4"


    // $ANTLR start "rule__With_statement__VariablesAssignment_1"
    // InternalPascal.g:11779:1: rule__With_statement__VariablesAssignment_1 : ( rulevariable ) ;
    public final void rule__With_statement__VariablesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11783:1: ( ( rulevariable ) )
            // InternalPascal.g:11784:2: ( rulevariable )
            {
            // InternalPascal.g:11784:2: ( rulevariable )
            // InternalPascal.g:11785:3: rulevariable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getVariablesVariableParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getVariablesVariableParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__VariablesAssignment_1"


    // $ANTLR start "rule__With_statement__VariablesAssignment_2_1"
    // InternalPascal.g:11794:1: rule__With_statement__VariablesAssignment_2_1 : ( rulevariable ) ;
    public final void rule__With_statement__VariablesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11798:1: ( ( rulevariable ) )
            // InternalPascal.g:11799:2: ( rulevariable )
            {
            // InternalPascal.g:11799:2: ( rulevariable )
            // InternalPascal.g:11800:3: rulevariable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getVariablesVariableParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getVariablesVariableParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__VariablesAssignment_2_1"


    // $ANTLR start "rule__With_statement__StatementAssignment_4"
    // InternalPascal.g:11809:1: rule__With_statement__StatementAssignment_4 : ( rulestatement ) ;
    public final void rule__With_statement__StatementAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11813:1: ( ( rulestatement ) )
            // InternalPascal.g:11814:2: ( rulestatement )
            {
            // InternalPascal.g:11814:2: ( rulestatement )
            // InternalPascal.g:11815:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWith_statementAccess().getStatementStatementParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWith_statementAccess().getStatementStatementParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__With_statement__StatementAssignment_4"


    // $ANTLR start "rule__Goto_statement__LabelAssignment_1"
    // InternalPascal.g:11824:1: rule__Goto_statement__LabelAssignment_1 : ( rulelabel ) ;
    public final void rule__Goto_statement__LabelAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11828:1: ( ( rulelabel ) )
            // InternalPascal.g:11829:2: ( rulelabel )
            {
            // InternalPascal.g:11829:2: ( rulelabel )
            // InternalPascal.g:11830:3: rulelabel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoto_statementAccess().getLabelLabelParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelabel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoto_statementAccess().getLabelLabelParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Goto_statement__LabelAssignment_1"


    // $ANTLR start "rule__Label_declaration_part__LabelsAssignment_1"
    // InternalPascal.g:11839:1: rule__Label_declaration_part__LabelsAssignment_1 : ( rulelabel ) ;
    public final void rule__Label_declaration_part__LabelsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11843:1: ( ( rulelabel ) )
            // InternalPascal.g:11844:2: ( rulelabel )
            {
            // InternalPascal.g:11844:2: ( rulelabel )
            // InternalPascal.g:11845:3: rulelabel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getLabelsLabelParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelabel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getLabelsLabelParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__LabelsAssignment_1"


    // $ANTLR start "rule__Label_declaration_part__LabelsAssignment_2_1"
    // InternalPascal.g:11854:1: rule__Label_declaration_part__LabelsAssignment_2_1 : ( rulelabel ) ;
    public final void rule__Label_declaration_part__LabelsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11858:1: ( ( rulelabel ) )
            // InternalPascal.g:11859:2: ( rulelabel )
            {
            // InternalPascal.g:11859:2: ( rulelabel )
            // InternalPascal.g:11860:3: rulelabel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabel_declaration_partAccess().getLabelsLabelParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelabel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabel_declaration_partAccess().getLabelsLabelParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label_declaration_part__LabelsAssignment_2_1"


    // $ANTLR start "rule__Constant_definition_part__ConstsAssignment_1_0"
    // InternalPascal.g:11869:1: rule__Constant_definition_part__ConstsAssignment_1_0 : ( ruleconstant_definition ) ;
    public final void rule__Constant_definition_part__ConstsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11873:1: ( ( ruleconstant_definition ) )
            // InternalPascal.g:11874:2: ( ruleconstant_definition )
            {
            // InternalPascal.g:11874:2: ( ruleconstant_definition )
            // InternalPascal.g:11875:3: ruleconstant_definition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definition_partAccess().getConstsConstant_definitionParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant_definition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definition_partAccess().getConstsConstant_definitionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition_part__ConstsAssignment_1_0"


    // $ANTLR start "rule__Constant_definition__NameAssignment_0"
    // InternalPascal.g:11884:1: rule__Constant_definition__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Constant_definition__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11888:1: ( ( RULE_ID ) )
            // InternalPascal.g:11889:2: ( RULE_ID )
            {
            // InternalPascal.g:11889:2: ( RULE_ID )
            // InternalPascal.g:11890:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__NameAssignment_0"


    // $ANTLR start "rule__Constant_definition__ConstAssignment_2"
    // InternalPascal.g:11899:1: rule__Constant_definition__ConstAssignment_2 : ( ruleconstant ) ;
    public final void rule__Constant_definition__ConstAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11903:1: ( ( ruleconstant ) )
            // InternalPascal.g:11904:2: ( ruleconstant )
            {
            // InternalPascal.g:11904:2: ( ruleconstant )
            // InternalPascal.g:11905:3: ruleconstant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstant_definitionAccess().getConstConstantParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstant_definitionAccess().getConstConstantParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Constant_definition__ConstAssignment_2"


    // $ANTLR start "rule__Type_definition_part__TypesAssignment_1_0"
    // InternalPascal.g:11914:1: rule__Type_definition_part__TypesAssignment_1_0 : ( ruletype_definition ) ;
    public final void rule__Type_definition_part__TypesAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11918:1: ( ( ruletype_definition ) )
            // InternalPascal.g:11919:2: ( ruletype_definition )
            {
            // InternalPascal.g:11919:2: ( ruletype_definition )
            // InternalPascal.g:11920:3: ruletype_definition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definition_partAccess().getTypesType_definitionParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype_definition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definition_partAccess().getTypesType_definitionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition_part__TypesAssignment_1_0"


    // $ANTLR start "rule__Type_definition__NameAssignment_0"
    // InternalPascal.g:11929:1: rule__Type_definition__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Type_definition__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11933:1: ( ( RULE_ID ) )
            // InternalPascal.g:11934:2: ( RULE_ID )
            {
            // InternalPascal.g:11934:2: ( RULE_ID )
            // InternalPascal.g:11935:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__NameAssignment_0"


    // $ANTLR start "rule__Type_definition__TypeAssignment_2"
    // InternalPascal.g:11944:1: rule__Type_definition__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__Type_definition__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11948:1: ( ( ruletype ) )
            // InternalPascal.g:11949:2: ( ruletype )
            {
            // InternalPascal.g:11949:2: ( ruletype )
            // InternalPascal.g:11950:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getType_definitionAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getType_definitionAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type_definition__TypeAssignment_2"


    // $ANTLR start "rule__Type__SimpleAssignment_0"
    // InternalPascal.g:11959:1: rule__Type__SimpleAssignment_0 : ( rulesimple_type ) ;
    public final void rule__Type__SimpleAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11963:1: ( ( rulesimple_type ) )
            // InternalPascal.g:11964:2: ( rulesimple_type )
            {
            // InternalPascal.g:11964:2: ( rulesimple_type )
            // InternalPascal.g:11965:3: rulesimple_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getSimpleSimple_typeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimple_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getSimpleSimple_typeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__SimpleAssignment_0"


    // $ANTLR start "rule__Type__StructuredAssignment_1"
    // InternalPascal.g:11974:1: rule__Type__StructuredAssignment_1 : ( rulestructured_type ) ;
    public final void rule__Type__StructuredAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11978:1: ( ( rulestructured_type ) )
            // InternalPascal.g:11979:2: ( rulestructured_type )
            {
            // InternalPascal.g:11979:2: ( rulestructured_type )
            // InternalPascal.g:11980:3: rulestructured_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getStructuredStructured_typeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestructured_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getStructuredStructured_typeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__StructuredAssignment_1"


    // $ANTLR start "rule__Type__PointerAssignment_2"
    // InternalPascal.g:11989:1: rule__Type__PointerAssignment_2 : ( rulepointer_type ) ;
    public final void rule__Type__PointerAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:11993:1: ( ( rulepointer_type ) )
            // InternalPascal.g:11994:2: ( rulepointer_type )
            {
            // InternalPascal.g:11994:2: ( rulepointer_type )
            // InternalPascal.g:11995:3: rulepointer_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getPointerPointer_typeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulepointer_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getPointerPointer_typeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__PointerAssignment_2"


    // $ANTLR start "rule__Simple_type__SubrangeAssignment_0"
    // InternalPascal.g:12004:1: rule__Simple_type__SubrangeAssignment_0 : ( rulesubrange_type ) ;
    public final void rule__Simple_type__SubrangeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12008:1: ( ( rulesubrange_type ) )
            // InternalPascal.g:12009:2: ( rulesubrange_type )
            {
            // InternalPascal.g:12009:2: ( rulesubrange_type )
            // InternalPascal.g:12010:3: rulesubrange_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_typeAccess().getSubrangeSubrange_typeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesubrange_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_typeAccess().getSubrangeSubrange_typeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_type__SubrangeAssignment_0"


    // $ANTLR start "rule__Simple_type__EnumeratedAssignment_1"
    // InternalPascal.g:12019:1: rule__Simple_type__EnumeratedAssignment_1 : ( ruleenumerated_type ) ;
    public final void rule__Simple_type__EnumeratedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12023:1: ( ( ruleenumerated_type ) )
            // InternalPascal.g:12024:2: ( ruleenumerated_type )
            {
            // InternalPascal.g:12024:2: ( ruleenumerated_type )
            // InternalPascal.g:12025:3: ruleenumerated_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_typeAccess().getEnumeratedEnumerated_typeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleenumerated_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_typeAccess().getEnumeratedEnumerated_typeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_type__EnumeratedAssignment_1"


    // $ANTLR start "rule__Simple_type__NameAssignment_2"
    // InternalPascal.g:12034:1: rule__Simple_type__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__Simple_type__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12038:1: ( ( RULE_ID ) )
            // InternalPascal.g:12039:2: ( RULE_ID )
            {
            // InternalPascal.g:12039:2: ( RULE_ID )
            // InternalPascal.g:12040:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimple_typeAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimple_typeAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Simple_type__NameAssignment_2"


    // $ANTLR start "rule__Subrange_type__InitialConstAssignment_0_0"
    // InternalPascal.g:12049:1: rule__Subrange_type__InitialConstAssignment_0_0 : ( ruleconstant ) ;
    public final void rule__Subrange_type__InitialConstAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12053:1: ( ( ruleconstant ) )
            // InternalPascal.g:12054:2: ( ruleconstant )
            {
            // InternalPascal.g:12054:2: ( ruleconstant )
            // InternalPascal.g:12055:3: ruleconstant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getInitialConstConstantParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getInitialConstConstantParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__InitialConstAssignment_0_0"


    // $ANTLR start "rule__Subrange_type__FinalConstAssignment_0_2"
    // InternalPascal.g:12064:1: rule__Subrange_type__FinalConstAssignment_0_2 : ( ruleconstant ) ;
    public final void rule__Subrange_type__FinalConstAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12068:1: ( ( ruleconstant ) )
            // InternalPascal.g:12069:2: ( ruleconstant )
            {
            // InternalPascal.g:12069:2: ( ruleconstant )
            // InternalPascal.g:12070:3: ruleconstant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getFinalConstConstantParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getFinalConstConstantParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__FinalConstAssignment_0_2"


    // $ANTLR start "rule__Subrange_type__SubrangeAssignment_1_0"
    // InternalPascal.g:12079:1: rule__Subrange_type__SubrangeAssignment_1_0 : ( RULE_NUMERIC_SUBRANGE ) ;
    public final void rule__Subrange_type__SubrangeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12083:1: ( ( RULE_NUMERIC_SUBRANGE ) )
            // InternalPascal.g:12084:2: ( RULE_NUMERIC_SUBRANGE )
            {
            // InternalPascal.g:12084:2: ( RULE_NUMERIC_SUBRANGE )
            // InternalPascal.g:12085:3: RULE_NUMERIC_SUBRANGE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getSubrangeNUMERIC_SUBRANGETerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_NUMERIC_SUBRANGE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getSubrangeNUMERIC_SUBRANGETerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__SubrangeAssignment_1_0"


    // $ANTLR start "rule__Subrange_type__ConstAssignment_1_1"
    // InternalPascal.g:12094:1: rule__Subrange_type__ConstAssignment_1_1 : ( ruleconstant ) ;
    public final void rule__Subrange_type__ConstAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12098:1: ( ( ruleconstant ) )
            // InternalPascal.g:12099:2: ( ruleconstant )
            {
            // InternalPascal.g:12099:2: ( ruleconstant )
            // InternalPascal.g:12100:3: ruleconstant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrange_typeAccess().getConstConstantParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrange_typeAccess().getConstConstantParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Subrange_type__ConstAssignment_1_1"


    // $ANTLR start "rule__Enumerated_type__IdentifiersAssignment_1"
    // InternalPascal.g:12109:1: rule__Enumerated_type__IdentifiersAssignment_1 : ( ruleidentifier_list ) ;
    public final void rule__Enumerated_type__IdentifiersAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12113:1: ( ( ruleidentifier_list ) )
            // InternalPascal.g:12114:2: ( ruleidentifier_list )
            {
            // InternalPascal.g:12114:2: ( ruleidentifier_list )
            // InternalPascal.g:12115:3: ruleidentifier_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumerated_typeAccess().getIdentifiersIdentifier_listParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumerated_typeAccess().getIdentifiersIdentifier_listParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enumerated_type__IdentifiersAssignment_1"


    // $ANTLR start "rule__Structured_type__PackedAssignment_0"
    // InternalPascal.g:12124:1: rule__Structured_type__PackedAssignment_0 : ( ( 'packed' ) ) ;
    public final void rule__Structured_type__PackedAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12128:1: ( ( ( 'packed' ) ) )
            // InternalPascal.g:12129:2: ( ( 'packed' ) )
            {
            // InternalPascal.g:12129:2: ( ( 'packed' ) )
            // InternalPascal.g:12130:3: ( 'packed' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeAccess().getPackedPackedKeyword_0_0()); 
            }
            // InternalPascal.g:12131:3: ( 'packed' )
            // InternalPascal.g:12132:4: 'packed'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeAccess().getPackedPackedKeyword_0_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeAccess().getPackedPackedKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeAccess().getPackedPackedKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_type__PackedAssignment_0"


    // $ANTLR start "rule__Structured_type__TypeAssignment_1"
    // InternalPascal.g:12143:1: rule__Structured_type__TypeAssignment_1 : ( ruleunpacked_structured_type ) ;
    public final void rule__Structured_type__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12147:1: ( ( ruleunpacked_structured_type ) )
            // InternalPascal.g:12148:2: ( ruleunpacked_structured_type )
            {
            // InternalPascal.g:12148:2: ( ruleunpacked_structured_type )
            // InternalPascal.g:12149:3: ruleunpacked_structured_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructured_typeAccess().getTypeUnpacked_structured_typeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleunpacked_structured_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructured_typeAccess().getTypeUnpacked_structured_typeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Structured_type__TypeAssignment_1"


    // $ANTLR start "rule__Unpacked_structured_type__ArrayAssignment_0"
    // InternalPascal.g:12158:1: rule__Unpacked_structured_type__ArrayAssignment_0 : ( rulearray_type ) ;
    public final void rule__Unpacked_structured_type__ArrayAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12162:1: ( ( rulearray_type ) )
            // InternalPascal.g:12163:2: ( rulearray_type )
            {
            // InternalPascal.g:12163:2: ( rulearray_type )
            // InternalPascal.g:12164:3: rulearray_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeAccess().getArrayArray_typeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulearray_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeAccess().getArrayArray_typeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_structured_type__ArrayAssignment_0"


    // $ANTLR start "rule__Unpacked_structured_type__DynamicAssignment_1"
    // InternalPascal.g:12173:1: rule__Unpacked_structured_type__DynamicAssignment_1 : ( ruledynamic_array_type ) ;
    public final void rule__Unpacked_structured_type__DynamicAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12177:1: ( ( ruledynamic_array_type ) )
            // InternalPascal.g:12178:2: ( ruledynamic_array_type )
            {
            // InternalPascal.g:12178:2: ( ruledynamic_array_type )
            // InternalPascal.g:12179:3: ruledynamic_array_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeAccess().getDynamicDynamic_array_typeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledynamic_array_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeAccess().getDynamicDynamic_array_typeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_structured_type__DynamicAssignment_1"


    // $ANTLR start "rule__Unpacked_structured_type__RecordAssignment_2"
    // InternalPascal.g:12188:1: rule__Unpacked_structured_type__RecordAssignment_2 : ( rulerecord_type ) ;
    public final void rule__Unpacked_structured_type__RecordAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12192:1: ( ( rulerecord_type ) )
            // InternalPascal.g:12193:2: ( rulerecord_type )
            {
            // InternalPascal.g:12193:2: ( rulerecord_type )
            // InternalPascal.g:12194:3: rulerecord_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeAccess().getRecordRecord_typeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerecord_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeAccess().getRecordRecord_typeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_structured_type__RecordAssignment_2"


    // $ANTLR start "rule__Unpacked_structured_type__SetAssignment_3"
    // InternalPascal.g:12203:1: rule__Unpacked_structured_type__SetAssignment_3 : ( ruleset_type ) ;
    public final void rule__Unpacked_structured_type__SetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12207:1: ( ( ruleset_type ) )
            // InternalPascal.g:12208:2: ( ruleset_type )
            {
            // InternalPascal.g:12208:2: ( ruleset_type )
            // InternalPascal.g:12209:3: ruleset_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeAccess().getSetSet_typeParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleset_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeAccess().getSetSet_typeParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_structured_type__SetAssignment_3"


    // $ANTLR start "rule__Unpacked_structured_type__FileAssignment_4"
    // InternalPascal.g:12218:1: rule__Unpacked_structured_type__FileAssignment_4 : ( rulefile_type ) ;
    public final void rule__Unpacked_structured_type__FileAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12222:1: ( ( rulefile_type ) )
            // InternalPascal.g:12223:2: ( rulefile_type )
            {
            // InternalPascal.g:12223:2: ( rulefile_type )
            // InternalPascal.g:12224:3: rulefile_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_structured_typeAccess().getFileFile_typeParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefile_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_structured_typeAccess().getFileFile_typeParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_structured_type__FileAssignment_4"


    // $ANTLR start "rule__Array_type__IndexesAssignment_2"
    // InternalPascal.g:12233:1: rule__Array_type__IndexesAssignment_2 : ( ruleindex_type ) ;
    public final void rule__Array_type__IndexesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12237:1: ( ( ruleindex_type ) )
            // InternalPascal.g:12238:2: ( ruleindex_type )
            {
            // InternalPascal.g:12238:2: ( ruleindex_type )
            // InternalPascal.g:12239:3: ruleindex_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getIndexesIndex_typeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleindex_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getIndexesIndex_typeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__IndexesAssignment_2"


    // $ANTLR start "rule__Array_type__IndexesAssignment_3_1"
    // InternalPascal.g:12248:1: rule__Array_type__IndexesAssignment_3_1 : ( ruleindex_type ) ;
    public final void rule__Array_type__IndexesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12252:1: ( ( ruleindex_type ) )
            // InternalPascal.g:12253:2: ( ruleindex_type )
            {
            // InternalPascal.g:12253:2: ( ruleindex_type )
            // InternalPascal.g:12254:3: ruleindex_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getIndexesIndex_typeParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleindex_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getIndexesIndex_typeParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__IndexesAssignment_3_1"


    // $ANTLR start "rule__Array_type__TypeAssignment_6"
    // InternalPascal.g:12263:1: rule__Array_type__TypeAssignment_6 : ( ruletype ) ;
    public final void rule__Array_type__TypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12267:1: ( ( ruletype ) )
            // InternalPascal.g:12268:2: ( ruletype )
            {
            // InternalPascal.g:12268:2: ( ruletype )
            // InternalPascal.g:12269:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArray_typeAccess().getTypeTypeParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArray_typeAccess().getTypeTypeParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Array_type__TypeAssignment_6"


    // $ANTLR start "rule__Dynamic_array_type__TypeAssignment_2"
    // InternalPascal.g:12278:1: rule__Dynamic_array_type__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__Dynamic_array_type__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12282:1: ( ( ruletype ) )
            // InternalPascal.g:12283:2: ( ruletype )
            {
            // InternalPascal.g:12283:2: ( ruletype )
            // InternalPascal.g:12284:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDynamic_array_typeAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDynamic_array_typeAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dynamic_array_type__TypeAssignment_2"


    // $ANTLR start "rule__Index_type__TypeAssignment"
    // InternalPascal.g:12293:1: rule__Index_type__TypeAssignment : ( rulesimple_type ) ;
    public final void rule__Index_type__TypeAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12297:1: ( ( rulesimple_type ) )
            // InternalPascal.g:12298:2: ( rulesimple_type )
            {
            // InternalPascal.g:12298:2: ( rulesimple_type )
            // InternalPascal.g:12299:3: rulesimple_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndex_typeAccess().getTypeSimple_typeParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimple_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndex_typeAccess().getTypeSimple_typeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index_type__TypeAssignment"


    // $ANTLR start "rule__Record_type__RecordKeywordAssignment_0"
    // InternalPascal.g:12308:1: rule__Record_type__RecordKeywordAssignment_0 : ( ( 'record' ) ) ;
    public final void rule__Record_type__RecordKeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12312:1: ( ( ( 'record' ) ) )
            // InternalPascal.g:12313:2: ( ( 'record' ) )
            {
            // InternalPascal.g:12313:2: ( ( 'record' ) )
            // InternalPascal.g:12314:3: ( 'record' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); 
            }
            // InternalPascal.g:12315:3: ( 'record' )
            // InternalPascal.g:12316:4: 'record'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__RecordKeywordAssignment_0"


    // $ANTLR start "rule__Record_type__FieldsAssignment_1"
    // InternalPascal.g:12327:1: rule__Record_type__FieldsAssignment_1 : ( rulefield_list ) ;
    public final void rule__Record_type__FieldsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12331:1: ( ( rulefield_list ) )
            // InternalPascal.g:12332:2: ( rulefield_list )
            {
            // InternalPascal.g:12332:2: ( rulefield_list )
            // InternalPascal.g:12333:3: rulefield_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getFieldsField_listParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefield_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getFieldsField_listParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__FieldsAssignment_1"


    // $ANTLR start "rule__Record_type__EndKeywordAssignment_2"
    // InternalPascal.g:12342:1: rule__Record_type__EndKeywordAssignment_2 : ( ( 'end' ) ) ;
    public final void rule__Record_type__EndKeywordAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12346:1: ( ( ( 'end' ) ) )
            // InternalPascal.g:12347:2: ( ( 'end' ) )
            {
            // InternalPascal.g:12347:2: ( ( 'end' ) )
            // InternalPascal.g:12348:3: ( 'end' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); 
            }
            // InternalPascal.g:12349:3: ( 'end' )
            // InternalPascal.g:12350:4: 'end'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_type__EndKeywordAssignment_2"


    // $ANTLR start "rule__Field_list__FixedAssignment_0_0_0"
    // InternalPascal.g:12361:1: rule__Field_list__FixedAssignment_0_0_0 : ( rulefixed_part ) ;
    public final void rule__Field_list__FixedAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12365:1: ( ( rulefixed_part ) )
            // InternalPascal.g:12366:2: ( rulefixed_part )
            {
            // InternalPascal.g:12366:2: ( rulefixed_part )
            // InternalPascal.g:12367:3: rulefixed_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getFixedFixed_partParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefixed_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getFixedFixed_partParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__FixedAssignment_0_0_0"


    // $ANTLR start "rule__Field_list__VariantsAssignment_0_0_1_1"
    // InternalPascal.g:12376:1: rule__Field_list__VariantsAssignment_0_0_1_1 : ( rulevariant_part ) ;
    public final void rule__Field_list__VariantsAssignment_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12380:1: ( ( rulevariant_part ) )
            // InternalPascal.g:12381:2: ( rulevariant_part )
            {
            // InternalPascal.g:12381:2: ( rulevariant_part )
            // InternalPascal.g:12382:3: rulevariant_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getVariantsVariant_partParserRuleCall_0_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariant_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getVariantsVariant_partParserRuleCall_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__VariantsAssignment_0_0_1_1"


    // $ANTLR start "rule__Field_list__VariantsAssignment_0_1"
    // InternalPascal.g:12391:1: rule__Field_list__VariantsAssignment_0_1 : ( rulevariant_part ) ;
    public final void rule__Field_list__VariantsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12395:1: ( ( rulevariant_part ) )
            // InternalPascal.g:12396:2: ( rulevariant_part )
            {
            // InternalPascal.g:12396:2: ( rulevariant_part )
            // InternalPascal.g:12397:3: rulevariant_part
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getField_listAccess().getVariantsVariant_partParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariant_part();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getField_listAccess().getVariantsVariant_partParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Field_list__VariantsAssignment_0_1"


    // $ANTLR start "rule__Fixed_part__SectionsAssignment_0"
    // InternalPascal.g:12406:1: rule__Fixed_part__SectionsAssignment_0 : ( rulerecord_section ) ;
    public final void rule__Fixed_part__SectionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12410:1: ( ( rulerecord_section ) )
            // InternalPascal.g:12411:2: ( rulerecord_section )
            {
            // InternalPascal.g:12411:2: ( rulerecord_section )
            // InternalPascal.g:12412:3: rulerecord_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getSectionsRecord_sectionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerecord_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getSectionsRecord_sectionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__SectionsAssignment_0"


    // $ANTLR start "rule__Fixed_part__SectionsAssignment_1_1"
    // InternalPascal.g:12421:1: rule__Fixed_part__SectionsAssignment_1_1 : ( rulerecord_section ) ;
    public final void rule__Fixed_part__SectionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12425:1: ( ( rulerecord_section ) )
            // InternalPascal.g:12426:2: ( rulerecord_section )
            {
            // InternalPascal.g:12426:2: ( rulerecord_section )
            // InternalPascal.g:12427:3: rulerecord_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFixed_partAccess().getSectionsRecord_sectionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerecord_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFixed_partAccess().getSectionsRecord_sectionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fixed_part__SectionsAssignment_1_1"


    // $ANTLR start "rule__Variable_identifier_list__NamesAssignment_0"
    // InternalPascal.g:12436:1: rule__Variable_identifier_list__NamesAssignment_0 : ( RULE_ID ) ;
    public final void rule__Variable_identifier_list__NamesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12440:1: ( ( RULE_ID ) )
            // InternalPascal.g:12441:2: ( RULE_ID )
            {
            // InternalPascal.g:12441:2: ( RULE_ID )
            // InternalPascal.g:12442:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__NamesAssignment_0"


    // $ANTLR start "rule__Variable_identifier_list__NamesAssignment_1_1"
    // InternalPascal.g:12451:1: rule__Variable_identifier_list__NamesAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__Variable_identifier_list__NamesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12455:1: ( ( RULE_ID ) )
            // InternalPascal.g:12456:2: ( RULE_ID )
            {
            // InternalPascal.g:12456:2: ( RULE_ID )
            // InternalPascal.g:12457:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_identifier_list__NamesAssignment_1_1"


    // $ANTLR start "rule__Variable_section__IdentifiersAssignment_0"
    // InternalPascal.g:12466:1: rule__Variable_section__IdentifiersAssignment_0 : ( rulevariable_identifier_list ) ;
    public final void rule__Variable_section__IdentifiersAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12470:1: ( ( rulevariable_identifier_list ) )
            // InternalPascal.g:12471:2: ( rulevariable_identifier_list )
            {
            // InternalPascal.g:12471:2: ( rulevariable_identifier_list )
            // InternalPascal.g:12472:3: rulevariable_identifier_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionAccess().getIdentifiersVariable_identifier_listParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable_identifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionAccess().getIdentifiersVariable_identifier_listParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__IdentifiersAssignment_0"


    // $ANTLR start "rule__Variable_section__TypeAssignment_2"
    // InternalPascal.g:12481:1: rule__Variable_section__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__Variable_section__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12485:1: ( ( ruletype ) )
            // InternalPascal.g:12486:2: ( ruletype )
            {
            // InternalPascal.g:12486:2: ( ruletype )
            // InternalPascal.g:12487:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_sectionAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_sectionAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_section__TypeAssignment_2"


    // $ANTLR start "rule__Record_section__IdentifiersAssignment_0"
    // InternalPascal.g:12496:1: rule__Record_section__IdentifiersAssignment_0 : ( ruleidentifier_list ) ;
    public final void rule__Record_section__IdentifiersAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12500:1: ( ( ruleidentifier_list ) )
            // InternalPascal.g:12501:2: ( ruleidentifier_list )
            {
            // InternalPascal.g:12501:2: ( ruleidentifier_list )
            // InternalPascal.g:12502:3: ruleidentifier_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__IdentifiersAssignment_0"


    // $ANTLR start "rule__Record_section__TypeAssignment_2"
    // InternalPascal.g:12511:1: rule__Record_section__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__Record_section__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12515:1: ( ( ruletype ) )
            // InternalPascal.g:12516:2: ( ruletype )
            {
            // InternalPascal.g:12516:2: ( ruletype )
            // InternalPascal.g:12517:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecord_sectionAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecord_sectionAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Record_section__TypeAssignment_2"


    // $ANTLR start "rule__Variant_part__TagAssignment_1"
    // InternalPascal.g:12526:1: rule__Variant_part__TagAssignment_1 : ( ruletag_field ) ;
    public final void rule__Variant_part__TagAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12530:1: ( ( ruletag_field ) )
            // InternalPascal.g:12531:2: ( ruletag_field )
            {
            // InternalPascal.g:12531:2: ( ruletag_field )
            // InternalPascal.g:12532:3: ruletag_field
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getTagTag_fieldParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletag_field();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getTagTag_fieldParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__TagAssignment_1"


    // $ANTLR start "rule__Variant_part__NameAssignment_2"
    // InternalPascal.g:12541:1: rule__Variant_part__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__Variant_part__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12545:1: ( ( RULE_ID ) )
            // InternalPascal.g:12546:2: ( RULE_ID )
            {
            // InternalPascal.g:12546:2: ( RULE_ID )
            // InternalPascal.g:12547:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__NameAssignment_2"


    // $ANTLR start "rule__Variant_part__VariantsAssignment_4"
    // InternalPascal.g:12556:1: rule__Variant_part__VariantsAssignment_4 : ( rulevariant ) ;
    public final void rule__Variant_part__VariantsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12560:1: ( ( rulevariant ) )
            // InternalPascal.g:12561:2: ( rulevariant )
            {
            // InternalPascal.g:12561:2: ( rulevariant )
            // InternalPascal.g:12562:3: rulevariant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getVariantsVariantParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getVariantsVariantParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__VariantsAssignment_4"


    // $ANTLR start "rule__Variant_part__VariantsAssignment_5_1"
    // InternalPascal.g:12571:1: rule__Variant_part__VariantsAssignment_5_1 : ( rulevariant ) ;
    public final void rule__Variant_part__VariantsAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12575:1: ( ( rulevariant ) )
            // InternalPascal.g:12576:2: ( rulevariant )
            {
            // InternalPascal.g:12576:2: ( rulevariant )
            // InternalPascal.g:12577:3: rulevariant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariant_partAccess().getVariantsVariantParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariant_partAccess().getVariantsVariantParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant_part__VariantsAssignment_5_1"


    // $ANTLR start "rule__Tag_field__NameAssignment_0"
    // InternalPascal.g:12586:1: rule__Tag_field__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Tag_field__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12590:1: ( ( RULE_ID ) )
            // InternalPascal.g:12591:2: ( RULE_ID )
            {
            // InternalPascal.g:12591:2: ( RULE_ID )
            // InternalPascal.g:12592:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTag_fieldAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTag_fieldAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tag_field__NameAssignment_0"


    // $ANTLR start "rule__Variant__LabelsAssignment_0"
    // InternalPascal.g:12601:1: rule__Variant__LabelsAssignment_0 : ( rulecase_label_list ) ;
    public final void rule__Variant__LabelsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12605:1: ( ( rulecase_label_list ) )
            // InternalPascal.g:12606:2: ( rulecase_label_list )
            {
            // InternalPascal.g:12606:2: ( rulecase_label_list )
            // InternalPascal.g:12607:3: rulecase_label_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getLabelsCase_label_listParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecase_label_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getLabelsCase_label_listParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__LabelsAssignment_0"


    // $ANTLR start "rule__Variant__FieldsAssignment_3"
    // InternalPascal.g:12616:1: rule__Variant__FieldsAssignment_3 : ( rulefield_list ) ;
    public final void rule__Variant__FieldsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12620:1: ( ( rulefield_list ) )
            // InternalPascal.g:12621:2: ( rulefield_list )
            {
            // InternalPascal.g:12621:2: ( rulefield_list )
            // InternalPascal.g:12622:3: rulefield_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariantAccess().getFieldsField_listParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefield_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariantAccess().getFieldsField_listParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variant__FieldsAssignment_3"


    // $ANTLR start "rule__Set_type__TypeAssignment_2"
    // InternalPascal.g:12631:1: rule__Set_type__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__Set_type__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12635:1: ( ( ruletype ) )
            // InternalPascal.g:12636:2: ( ruletype )
            {
            // InternalPascal.g:12636:2: ( ruletype )
            // InternalPascal.g:12637:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSet_typeAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSet_typeAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Set_type__TypeAssignment_2"


    // $ANTLR start "rule__File_type__TypeAssignment_2"
    // InternalPascal.g:12646:1: rule__File_type__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__File_type__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12650:1: ( ( ruletype ) )
            // InternalPascal.g:12651:2: ( ruletype )
            {
            // InternalPascal.g:12651:2: ( ruletype )
            // InternalPascal.g:12652:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFile_typeAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFile_typeAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__File_type__TypeAssignment_2"


    // $ANTLR start "rule__Pointer_type__TypeAssignment_1"
    // InternalPascal.g:12661:1: rule__Pointer_type__TypeAssignment_1 : ( ruletype ) ;
    public final void rule__Pointer_type__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12665:1: ( ( ruletype ) )
            // InternalPascal.g:12666:2: ( ruletype )
            {
            // InternalPascal.g:12666:2: ( ruletype )
            // InternalPascal.g:12667:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointer_typeAccess().getTypeTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointer_typeAccess().getTypeTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pointer_type__TypeAssignment_1"


    // $ANTLR start "rule__Variable_declaration_part__SectionsAssignment_1"
    // InternalPascal.g:12676:1: rule__Variable_declaration_part__SectionsAssignment_1 : ( rulevariable_section ) ;
    public final void rule__Variable_declaration_part__SectionsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12680:1: ( ( rulevariable_section ) )
            // InternalPascal.g:12681:2: ( rulevariable_section )
            {
            // InternalPascal.g:12681:2: ( rulevariable_section )
            // InternalPascal.g:12682:3: rulevariable_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__SectionsAssignment_1"


    // $ANTLR start "rule__Variable_declaration_part__SectionsAssignment_3_0"
    // InternalPascal.g:12691:1: rule__Variable_declaration_part__SectionsAssignment_3_0 : ( rulevariable_section ) ;
    public final void rule__Variable_declaration_part__SectionsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12695:1: ( ( rulevariable_section ) )
            // InternalPascal.g:12696:2: ( rulevariable_section )
            {
            // InternalPascal.g:12696:2: ( rulevariable_section )
            // InternalPascal.g:12697:3: rulevariable_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_declaration_part__SectionsAssignment_3_0"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0"
    // InternalPascal.g:12706:1: rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0 : ( ruleprocedure_declaration ) ;
    public final void rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12710:1: ( ( ruleprocedure_declaration ) )
            // InternalPascal.g:12711:2: ( ruleprocedure_declaration )
            {
            // InternalPascal.g:12711:2: ( ruleprocedure_declaration )
            // InternalPascal.g:12712:3: ruleprocedure_declaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partAccess().getProceduresProcedure_declarationParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprocedure_declaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partAccess().getProceduresProcedure_declarationParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__ProceduresAssignment_0_0"


    // $ANTLR start "rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1"
    // InternalPascal.g:12721:1: rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1 : ( rulefunction_declaration ) ;
    public final void rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12725:1: ( ( rulefunction_declaration ) )
            // InternalPascal.g:12726:2: ( rulefunction_declaration )
            {
            // InternalPascal.g:12726:2: ( rulefunction_declaration )
            // InternalPascal.g:12727:3: rulefunction_declaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunctionsFunction_declarationParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction_declaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunctionsFunction_declarationParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_and_function_declaration_part__FunctionsAssignment_0_1"


    // $ANTLR start "rule__Procedure_declaration__HeadingAssignment_0"
    // InternalPascal.g:12736:1: rule__Procedure_declaration__HeadingAssignment_0 : ( ruleprocedure_heading ) ;
    public final void rule__Procedure_declaration__HeadingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12740:1: ( ( ruleprocedure_heading ) )
            // InternalPascal.g:12741:2: ( ruleprocedure_heading )
            {
            // InternalPascal.g:12741:2: ( ruleprocedure_heading )
            // InternalPascal.g:12742:3: ruleprocedure_heading
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getHeadingProcedure_headingParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprocedure_heading();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getHeadingProcedure_headingParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__HeadingAssignment_0"


    // $ANTLR start "rule__Procedure_declaration__BlockAssignment_2_0"
    // InternalPascal.g:12751:1: rule__Procedure_declaration__BlockAssignment_2_0 : ( ruleblock ) ;
    public final void rule__Procedure_declaration__BlockAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12755:1: ( ( ruleblock ) )
            // InternalPascal.g:12756:2: ( ruleblock )
            {
            // InternalPascal.g:12756:2: ( ruleblock )
            // InternalPascal.g:12757:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__BlockAssignment_2_0"


    // $ANTLR start "rule__Procedure_declaration__ForwardAssignment_2_1"
    // InternalPascal.g:12766:1: rule__Procedure_declaration__ForwardAssignment_2_1 : ( ( 'forward' ) ) ;
    public final void rule__Procedure_declaration__ForwardAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12770:1: ( ( ( 'forward' ) ) )
            // InternalPascal.g:12771:2: ( ( 'forward' ) )
            {
            // InternalPascal.g:12771:2: ( ( 'forward' ) )
            // InternalPascal.g:12772:3: ( 'forward' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }
            // InternalPascal.g:12773:3: ( 'forward' )
            // InternalPascal.g:12774:4: 'forward'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_declaration__ForwardAssignment_2_1"


    // $ANTLR start "rule__Procedure_heading__NameAssignment_1"
    // InternalPascal.g:12785:1: rule__Procedure_heading__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Procedure_heading__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12789:1: ( ( RULE_ID ) )
            // InternalPascal.g:12790:2: ( RULE_ID )
            {
            // InternalPascal.g:12790:2: ( RULE_ID )
            // InternalPascal.g:12791:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__NameAssignment_1"


    // $ANTLR start "rule__Procedure_heading__ParametersAssignment_2"
    // InternalPascal.g:12800:1: rule__Procedure_heading__ParametersAssignment_2 : ( ruleformal_parameter_list ) ;
    public final void rule__Procedure_heading__ParametersAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12804:1: ( ( ruleformal_parameter_list ) )
            // InternalPascal.g:12805:2: ( ruleformal_parameter_list )
            {
            // InternalPascal.g:12805:2: ( ruleformal_parameter_list )
            // InternalPascal.g:12806:3: ruleformal_parameter_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcedure_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleformal_parameter_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcedure_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Procedure_heading__ParametersAssignment_2"


    // $ANTLR start "rule__Formal_parameter_list__ParametersAssignment_1"
    // InternalPascal.g:12815:1: rule__Formal_parameter_list__ParametersAssignment_1 : ( ruleformal_parameter_section ) ;
    public final void rule__Formal_parameter_list__ParametersAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12819:1: ( ( ruleformal_parameter_section ) )
            // InternalPascal.g:12820:2: ( ruleformal_parameter_section )
            {
            // InternalPascal.g:12820:2: ( ruleformal_parameter_section )
            // InternalPascal.g:12821:3: ruleformal_parameter_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleformal_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__ParametersAssignment_1"


    // $ANTLR start "rule__Formal_parameter_list__ParametersAssignment_2_1"
    // InternalPascal.g:12830:1: rule__Formal_parameter_list__ParametersAssignment_2_1 : ( ruleformal_parameter_section ) ;
    public final void rule__Formal_parameter_list__ParametersAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12834:1: ( ( ruleformal_parameter_section ) )
            // InternalPascal.g:12835:2: ( ruleformal_parameter_section )
            {
            // InternalPascal.g:12835:2: ( ruleformal_parameter_section )
            // InternalPascal.g:12836:3: ruleformal_parameter_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleformal_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_list__ParametersAssignment_2_1"


    // $ANTLR start "rule__Formal_parameter_section__ValueAssignment_0"
    // InternalPascal.g:12845:1: rule__Formal_parameter_section__ValueAssignment_0 : ( rulevalue_parameter_section ) ;
    public final void rule__Formal_parameter_section__ValueAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12849:1: ( ( rulevalue_parameter_section ) )
            // InternalPascal.g:12850:2: ( rulevalue_parameter_section )
            {
            // InternalPascal.g:12850:2: ( rulevalue_parameter_section )
            // InternalPascal.g:12851:3: rulevalue_parameter_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_sectionAccess().getValueValue_parameter_sectionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevalue_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_sectionAccess().getValueValue_parameter_sectionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_section__ValueAssignment_0"


    // $ANTLR start "rule__Formal_parameter_section__VariableAssignment_1"
    // InternalPascal.g:12860:1: rule__Formal_parameter_section__VariableAssignment_1 : ( rulevariable_parameter_section ) ;
    public final void rule__Formal_parameter_section__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12864:1: ( ( rulevariable_parameter_section ) )
            // InternalPascal.g:12865:2: ( rulevariable_parameter_section )
            {
            // InternalPascal.g:12865:2: ( rulevariable_parameter_section )
            // InternalPascal.g:12866:3: rulevariable_parameter_section
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_sectionAccess().getVariableVariable_parameter_sectionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevariable_parameter_section();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_sectionAccess().getVariableVariable_parameter_sectionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_section__VariableAssignment_1"


    // $ANTLR start "rule__Formal_parameter_section__ProcedureAssignment_2"
    // InternalPascal.g:12875:1: rule__Formal_parameter_section__ProcedureAssignment_2 : ( ruleprocedure_heading ) ;
    public final void rule__Formal_parameter_section__ProcedureAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12879:1: ( ( ruleprocedure_heading ) )
            // InternalPascal.g:12880:2: ( ruleprocedure_heading )
            {
            // InternalPascal.g:12880:2: ( ruleprocedure_heading )
            // InternalPascal.g:12881:3: ruleprocedure_heading
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_sectionAccess().getProcedureProcedure_headingParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprocedure_heading();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_sectionAccess().getProcedureProcedure_headingParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_section__ProcedureAssignment_2"


    // $ANTLR start "rule__Formal_parameter_section__FunctionAssignment_3"
    // InternalPascal.g:12890:1: rule__Formal_parameter_section__FunctionAssignment_3 : ( rulefunction_heading ) ;
    public final void rule__Formal_parameter_section__FunctionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12894:1: ( ( rulefunction_heading ) )
            // InternalPascal.g:12895:2: ( rulefunction_heading )
            {
            // InternalPascal.g:12895:2: ( rulefunction_heading )
            // InternalPascal.g:12896:3: rulefunction_heading
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormal_parameter_sectionAccess().getFunctionFunction_headingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction_heading();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormal_parameter_sectionAccess().getFunctionFunction_headingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Formal_parameter_section__FunctionAssignment_3"


    // $ANTLR start "rule__Value_parameter_section__IdentifiersAssignment_0"
    // InternalPascal.g:12905:1: rule__Value_parameter_section__IdentifiersAssignment_0 : ( ruleidentifier_list ) ;
    public final void rule__Value_parameter_section__IdentifiersAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12909:1: ( ( ruleidentifier_list ) )
            // InternalPascal.g:12910:2: ( ruleidentifier_list )
            {
            // InternalPascal.g:12910:2: ( ruleidentifier_list )
            // InternalPascal.g:12911:3: ruleidentifier_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__IdentifiersAssignment_0"


    // $ANTLR start "rule__Value_parameter_section__TypeAssignment_2"
    // InternalPascal.g:12920:1: rule__Value_parameter_section__TypeAssignment_2 : ( ruleparameter_type ) ;
    public final void rule__Value_parameter_section__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12924:1: ( ( ruleparameter_type ) )
            // InternalPascal.g:12925:2: ( ruleparameter_type )
            {
            // InternalPascal.g:12925:2: ( ruleparameter_type )
            // InternalPascal.g:12926:3: ruleparameter_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValue_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameter_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValue_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value_parameter_section__TypeAssignment_2"


    // $ANTLR start "rule__Parameter_type__ArrayAssignment_0"
    // InternalPascal.g:12935:1: rule__Parameter_type__ArrayAssignment_0 : ( ruleconformant_array_schema ) ;
    public final void rule__Parameter_type__ArrayAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12939:1: ( ( ruleconformant_array_schema ) )
            // InternalPascal.g:12940:2: ( ruleconformant_array_schema )
            {
            // InternalPascal.g:12940:2: ( ruleconformant_array_schema )
            // InternalPascal.g:12941:3: ruleconformant_array_schema
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameter_typeAccess().getArrayConformant_array_schemaParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconformant_array_schema();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameter_typeAccess().getArrayConformant_array_schemaParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter_type__ArrayAssignment_0"


    // $ANTLR start "rule__Parameter_type__NameAssignment_1"
    // InternalPascal.g:12950:1: rule__Parameter_type__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Parameter_type__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12954:1: ( ( RULE_ID ) )
            // InternalPascal.g:12955:2: ( RULE_ID )
            {
            // InternalPascal.g:12955:2: ( RULE_ID )
            // InternalPascal.g:12956:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameter_typeAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameter_typeAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter_type__NameAssignment_1"


    // $ANTLR start "rule__Conformant_array_schema__PackedAssignment_0"
    // InternalPascal.g:12965:1: rule__Conformant_array_schema__PackedAssignment_0 : ( rulepacked_conformant_array_schema ) ;
    public final void rule__Conformant_array_schema__PackedAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12969:1: ( ( rulepacked_conformant_array_schema ) )
            // InternalPascal.g:12970:2: ( rulepacked_conformant_array_schema )
            {
            // InternalPascal.g:12970:2: ( rulepacked_conformant_array_schema )
            // InternalPascal.g:12971:3: rulepacked_conformant_array_schema
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConformant_array_schemaAccess().getPackedPacked_conformant_array_schemaParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulepacked_conformant_array_schema();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConformant_array_schemaAccess().getPackedPacked_conformant_array_schemaParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conformant_array_schema__PackedAssignment_0"


    // $ANTLR start "rule__Conformant_array_schema__UnpackedAssignment_1"
    // InternalPascal.g:12980:1: rule__Conformant_array_schema__UnpackedAssignment_1 : ( ruleunpacked_conformant_array_schema ) ;
    public final void rule__Conformant_array_schema__UnpackedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12984:1: ( ( ruleunpacked_conformant_array_schema ) )
            // InternalPascal.g:12985:2: ( ruleunpacked_conformant_array_schema )
            {
            // InternalPascal.g:12985:2: ( ruleunpacked_conformant_array_schema )
            // InternalPascal.g:12986:3: ruleunpacked_conformant_array_schema
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConformant_array_schemaAccess().getUnpackedUnpacked_conformant_array_schemaParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleunpacked_conformant_array_schema();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConformant_array_schemaAccess().getUnpackedUnpacked_conformant_array_schemaParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conformant_array_schema__UnpackedAssignment_1"


    // $ANTLR start "rule__Packed_conformant_array_schema__BoundAssignment_3"
    // InternalPascal.g:12995:1: rule__Packed_conformant_array_schema__BoundAssignment_3 : ( rulebound_specification ) ;
    public final void rule__Packed_conformant_array_schema__BoundAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:12999:1: ( ( rulebound_specification ) )
            // InternalPascal.g:13000:2: ( rulebound_specification )
            {
            // InternalPascal.g:13000:2: ( rulebound_specification )
            // InternalPascal.g:13001:3: rulebound_specification
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getBoundBound_specificationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebound_specification();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getBoundBound_specificationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__BoundAssignment_3"


    // $ANTLR start "rule__Packed_conformant_array_schema__NameAssignment_6"
    // InternalPascal.g:13010:1: rule__Packed_conformant_array_schema__NameAssignment_6 : ( RULE_ID ) ;
    public final void rule__Packed_conformant_array_schema__NameAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13014:1: ( ( RULE_ID ) )
            // InternalPascal.g:13015:2: ( RULE_ID )
            {
            // InternalPascal.g:13015:2: ( RULE_ID )
            // InternalPascal.g:13016:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPacked_conformant_array_schemaAccess().getNameIDTerminalRuleCall_6_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPacked_conformant_array_schemaAccess().getNameIDTerminalRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Packed_conformant_array_schema__NameAssignment_6"


    // $ANTLR start "rule__Bound_specification__InitialAssignment_0"
    // InternalPascal.g:13025:1: rule__Bound_specification__InitialAssignment_0 : ( RULE_ID ) ;
    public final void rule__Bound_specification__InitialAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13029:1: ( ( RULE_ID ) )
            // InternalPascal.g:13030:2: ( RULE_ID )
            {
            // InternalPascal.g:13030:2: ( RULE_ID )
            // InternalPascal.g:13031:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getInitialIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getInitialIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__InitialAssignment_0"


    // $ANTLR start "rule__Bound_specification__FinalAssignment_2"
    // InternalPascal.g:13040:1: rule__Bound_specification__FinalAssignment_2 : ( RULE_ID ) ;
    public final void rule__Bound_specification__FinalAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13044:1: ( ( RULE_ID ) )
            // InternalPascal.g:13045:2: ( RULE_ID )
            {
            // InternalPascal.g:13045:2: ( RULE_ID )
            // InternalPascal.g:13046:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getFinalIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getFinalIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__FinalAssignment_2"


    // $ANTLR start "rule__Bound_specification__NameAssignment_4"
    // InternalPascal.g:13055:1: rule__Bound_specification__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__Bound_specification__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13059:1: ( ( RULE_ID ) )
            // InternalPascal.g:13060:2: ( RULE_ID )
            {
            // InternalPascal.g:13060:2: ( RULE_ID )
            // InternalPascal.g:13061:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBound_specificationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBound_specificationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Bound_specification__NameAssignment_4"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__BoundsAssignment_2"
    // InternalPascal.g:13070:1: rule__Unpacked_conformant_array_schema__BoundsAssignment_2 : ( rulebound_specification ) ;
    public final void rule__Unpacked_conformant_array_schema__BoundsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13074:1: ( ( rulebound_specification ) )
            // InternalPascal.g:13075:2: ( rulebound_specification )
            {
            // InternalPascal.g:13075:2: ( rulebound_specification )
            // InternalPascal.g:13076:3: rulebound_specification
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsBound_specificationParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebound_specification();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsBound_specificationParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__BoundsAssignment_2"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1"
    // InternalPascal.g:13085:1: rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1 : ( rulebound_specification ) ;
    public final void rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13089:1: ( ( rulebound_specification ) )
            // InternalPascal.g:13090:2: ( rulebound_specification )
            {
            // InternalPascal.g:13090:2: ( rulebound_specification )
            // InternalPascal.g:13091:3: rulebound_specification
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsBound_specificationParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebound_specification();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBoundsBound_specificationParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__BoundsAssignment_3_1"


    // $ANTLR start "rule__Unpacked_conformant_array_schema__TypeAssignment_6"
    // InternalPascal.g:13100:1: rule__Unpacked_conformant_array_schema__TypeAssignment_6 : ( ruleparameter_type ) ;
    public final void rule__Unpacked_conformant_array_schema__TypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13104:1: ( ( ruleparameter_type ) )
            // InternalPascal.g:13105:2: ( ruleparameter_type )
            {
            // InternalPascal.g:13105:2: ( ruleparameter_type )
            // InternalPascal.g:13106:3: ruleparameter_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getTypeParameter_typeParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameter_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getTypeParameter_typeParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unpacked_conformant_array_schema__TypeAssignment_6"


    // $ANTLR start "rule__Variable_parameter_section__IdentifiersAssignment_1"
    // InternalPascal.g:13115:1: rule__Variable_parameter_section__IdentifiersAssignment_1 : ( ruleidentifier_list ) ;
    public final void rule__Variable_parameter_section__IdentifiersAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13119:1: ( ( ruleidentifier_list ) )
            // InternalPascal.g:13120:2: ( ruleidentifier_list )
            {
            // InternalPascal.g:13120:2: ( ruleidentifier_list )
            // InternalPascal.g:13121:3: ruleidentifier_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifier_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__IdentifiersAssignment_1"


    // $ANTLR start "rule__Variable_parameter_section__TypeAssignment_3"
    // InternalPascal.g:13130:1: rule__Variable_parameter_section__TypeAssignment_3 : ( ruleparameter_type ) ;
    public final void rule__Variable_parameter_section__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13134:1: ( ( ruleparameter_type ) )
            // InternalPascal.g:13135:2: ( ruleparameter_type )
            {
            // InternalPascal.g:13135:2: ( ruleparameter_type )
            // InternalPascal.g:13136:3: ruleparameter_type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariable_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameter_type();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariable_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable_parameter_section__TypeAssignment_3"


    // $ANTLR start "rule__Function_heading__NameAssignment_1"
    // InternalPascal.g:13145:1: rule__Function_heading__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function_heading__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13149:1: ( ( RULE_ID ) )
            // InternalPascal.g:13150:2: ( RULE_ID )
            {
            // InternalPascal.g:13150:2: ( RULE_ID )
            // InternalPascal.g:13151:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__NameAssignment_1"


    // $ANTLR start "rule__Function_heading__ParametersAssignment_2"
    // InternalPascal.g:13160:1: rule__Function_heading__ParametersAssignment_2 : ( ruleformal_parameter_list ) ;
    public final void rule__Function_heading__ParametersAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13164:1: ( ( ruleformal_parameter_list ) )
            // InternalPascal.g:13165:2: ( ruleformal_parameter_list )
            {
            // InternalPascal.g:13165:2: ( ruleformal_parameter_list )
            // InternalPascal.g:13166:3: ruleformal_parameter_list
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleformal_parameter_list();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__ParametersAssignment_2"


    // $ANTLR start "rule__Function_heading__ReturnTypeAssignment_4"
    // InternalPascal.g:13175:1: rule__Function_heading__ReturnTypeAssignment_4 : ( RULE_ID ) ;
    public final void rule__Function_heading__ReturnTypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13179:1: ( ( RULE_ID ) )
            // InternalPascal.g:13180:2: ( RULE_ID )
            {
            // InternalPascal.g:13180:2: ( RULE_ID )
            // InternalPascal.g:13181:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_headingAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_headingAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_heading__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Function_declaration__HeadingAssignment_0"
    // InternalPascal.g:13190:1: rule__Function_declaration__HeadingAssignment_0 : ( rulefunction_heading ) ;
    public final void rule__Function_declaration__HeadingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13194:1: ( ( rulefunction_heading ) )
            // InternalPascal.g:13195:2: ( rulefunction_heading )
            {
            // InternalPascal.g:13195:2: ( rulefunction_heading )
            // InternalPascal.g:13196:3: rulefunction_heading
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getHeadingFunction_headingParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction_heading();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getHeadingFunction_headingParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__HeadingAssignment_0"


    // $ANTLR start "rule__Function_declaration__BlockAssignment_2_0"
    // InternalPascal.g:13205:1: rule__Function_declaration__BlockAssignment_2_0 : ( ruleblock ) ;
    public final void rule__Function_declaration__BlockAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13209:1: ( ( ruleblock ) )
            // InternalPascal.g:13210:2: ( ruleblock )
            {
            // InternalPascal.g:13210:2: ( ruleblock )
            // InternalPascal.g:13211:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__BlockAssignment_2_0"


    // $ANTLR start "rule__Function_declaration__ForwardAssignment_2_1"
    // InternalPascal.g:13220:1: rule__Function_declaration__ForwardAssignment_2_1 : ( ( 'forward' ) ) ;
    public final void rule__Function_declaration__ForwardAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalPascal.g:13224:1: ( ( ( 'forward' ) ) )
            // InternalPascal.g:13225:2: ( ( 'forward' ) )
            {
            // InternalPascal.g:13225:2: ( ( 'forward' ) )
            // InternalPascal.g:13226:3: ( 'forward' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }
            // InternalPascal.g:13227:3: ( 'forward' )
            // InternalPascal.g:13228:4: 'forward'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunction_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunction_declarationAccess().getForwardForwardKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function_declaration__ForwardAssignment_2_1"

    // $ANTLR start synpred76_InternalPascal
    public final void synpred76_InternalPascal_fragment() throws RecognitionException {   
        // InternalPascal.g:5405:3: ( rule__If_statement__Group_4__0 )
        // InternalPascal.g:5405:3: rule__If_statement__Group_4__0
        {
        pushFollow(FOLLOW_2);
        rule__If_statement__Group_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred76_InternalPascal

    // Delegated rules

    public final boolean synpred76_InternalPascal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalPascal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA12 dfa12 = new DFA12(this);
    static final String dfa_1s = "\14\uffff";
    static final String dfa_2s = "\1\uffff\1\12\12\uffff";
    static final String dfa_3s = "\1\4\1\6\12\uffff";
    static final String dfa_4s = "\1\105\1\102\12\uffff";
    static final String dfa_5s = "\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\11\1\12\1\1\1\10";
    static final String dfa_6s = "\14\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\2\2\3\uffff\1\3\2\2\16\uffff\1\10\6\uffff\1\4\2\uffff\1\11\35\uffff\1\5\1\6\1\7",
            "\4\12\1\uffff\1\12\12\uffff\3\12\1\uffff\1\12\1\13\2\12\1\uffff\1\12\2\uffff\3\12\2\uffff\1\12\1\uffff\1\12\2\uffff\2\12\1\uffff\1\12\4\uffff\1\12\11\uffff\5\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2255:1: rule__Factor__Alternatives : ( ( ( rule__Factor__VariableAssignment_0 ) ) | ( ( rule__Factor__NumberAssignment_1 ) ) | ( ( rule__Factor__StringAssignment_2 ) ) | ( ( rule__Factor__SetAssignment_3 ) ) | ( ( rule__Factor__NilAssignment_4 ) ) | ( ( rule__Factor__BooleanAssignment_5 ) ) | ( ( rule__Factor__BooleanAssignment_6 ) ) | ( ( rule__Factor__FunctionAssignment_7 ) ) | ( ( rule__Factor__Group_8__0 ) ) | ( ( rule__Factor__Group_9__0 ) ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x2800000000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x2C2C000040000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x000000000C000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00034D4040000070L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000002408001D70L,0x0000000000000038L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000001401000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x4010000000000080L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x8000000000000940L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x8000000000000942L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000200L,0x0000000000000007L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000202L,0x0000000000000007L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000002C08001D70L,0x0000000000000038L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000002418001D70L,0x0000000000000038L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000C00000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000001D70L,0x0000000000000038L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000084000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000001970L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000008020000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000024000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x1380001008003D70L,0x0000000000000078L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x1380000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000008003D70L,0x0000000000000038L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000820000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000400080000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000400010000010L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x2C2C000040000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x2C00000000000010L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000014000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x1080000000000010L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000108000000L});

}